!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=31)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";e.exports=function(e){return o.test("number"==typeof e?r(e):e.charAt(0))};var r=String.fromCharCode,o=/\s/},function(e,t){e.exports=function(){for(var e={},t=0;t<arguments.length;t++){var r=arguments[t];for(var o in r)n.call(r,o)&&(e[o]=r[o])}return e};var n=Object.prototype.hasOwnProperty},function(e,t){(t=e.exports=function(e){return e.replace(/^\s*|\s*$/g,"")}).left=function(e){return e.replace(/^\s*/,"")},t.right=function(e){return e.replace(/\s*$/,"")}},function(e,t,n){e.exports=n(118)()},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";e.exports=function(e){var t="string"==typeof e?e.charCodeAt(0):e;return t>=48&&t<=57}},function(e,t,n){"use strict";e.exports=l;var r=n(67),o=r.CONTINUE,i=r.SKIP,a=r.EXIT;function l(e,t,n,o){"function"==typeof t&&"function"!=typeof n&&(o=n,n=t,t=null),r(e,t,(function(e,t){var r=t[t.length-1],o=r?r.children.indexOf(e):null;return n(e,o,r)}),o)}l.CONTINUE=o,l.SKIP=i,l.EXIT=a},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r);function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var s=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=l(t).call(this,e))||"object"!==i(o)&&"function"!=typeof o?c(r):o).props=e,n.scrollTargetIds=n.props.scrollTargetIds,n.activeNavClass=n.props.activeNavClass,n.scrollDuration=Number(n.props.scrollDuration)||1e3,n.headerBackground="true"===n.props.headerBackground,n.offset=n.props.offset||0,n.onScroll=n.onScroll.bind(c(c(n))),n.props.router&&"HashRouter"===n.props.router?(n.homeDefaultLink="#/",n.hashIdentifier="#/#"):(n.homeDefaultLink="/",n.hashIdentifier="#"),n}var n,r,s;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,e),n=t,(r=[{key:"onScroll",value:function(){var e,t=this;this.scrollTargetIds.map((function(n,r){e=document.getElementById(n).offsetTop-(t.headerBackground?document.querySelector("div[data-nav='list']").scrollHeight:0),window.pageYOffset>=e&&window.pageYOffset<e+document.getElementById(n).scrollHeight?(t.getNavLinkElement(n).classList.add(t.activeNavClass),t.clearOtherNavLinkActiveStyle(n)):t.getNavLinkElement(n).classList.remove(t.activeNavClass),window.innerHeight+window.pageYOffset>=document.body.scrollHeight&&r===t.scrollTargetIds.length-1&&(t.getNavLinkElement(n).classList.add(t.activeNavClass),t.clearOtherNavLinkActiveStyle(n))}))}},{key:"easeInOutQuad",value:function(e,t,n,r){return(e/=r/2)<1?n/2*e*e+t:-n/2*(--e*(e-2)-1)+t}},{key:"scrollTo",value:function(e,t,n){var r=this,o=t-e,i=0;!function t(){i+=10;var a=r.easeInOutQuad(i,e,o,n);window.scrollTo(0,a),i<n&&setTimeout(t,10)}()}},{key:"getNavLinkElement",value:function(e){return document.querySelector("a[href='".concat(this.hashIdentifier).concat(e,"']"))}},{key:"getNavToSectionID",value:function(e){return e.includes(this.hashIdentifier)?e.replace(this.hashIdentifier,""):""}},{key:"clearOtherNavLinkActiveStyle",value:function(e){var t=this;this.scrollTargetIds.map((function(n,r){n!==e&&t.getNavLinkElement(n).classList.remove(t.activeNavClass)}))}},{key:"componentDidMount",value:function(){var e=this;document.querySelector("a[href='".concat(this.homeDefaultLink,"#']"))&&document.querySelector("a[href='".concat(this.homeDefaultLink,"#']")).addEventListener("click",(function(t){t.preventDefault(),e.scrollTo(window.pageYOffset,0,e.scrollDuration),window.location.hash=""})),document.querySelector("div[data-nav='list']").querySelectorAll("a").forEach((function(t){t.addEventListener("click",(function(n){n.preventDefault();var r=e.getNavToSectionID(t.getAttribute("href"));if(r){var o=document.getElementById(r).offsetTop-(e.headerBackground?document.querySelector("div[data-nav='list']").scrollHeight:0);e.scrollTo(window.pageYOffset,o+e.offset,e.scrollDuration)}else e.scrollTo(window.pageYOffset,0,e.scrollDuration)}))})),window.addEventListener("scroll",this.onScroll)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.onScroll)}},{key:"render",value:function(){return o.a.createElement("div",{"data-nav":"list"},this.props.children)}}])&&a(n.prototype,r),s&&a(n,s),t}(r.Component);t.default=s},,function(e,t,n){"use strict";
/** @license React v16.5.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.async_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112;o&&Symbol.for("react.placeholder");var h="function"==typeof Symbol&&Symbol.iterator;function m(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,(function(){return u[c++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function v(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);m(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&v("85"),this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=b.prototype;var x=k.prototype=new w;x.constructor=k,r(x,b.prototype),x.isPureReactComponent=!0;var E={current:null,currentDispatcher:null},T=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)T.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var _=/\/+/g,O=[];function A(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+j(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+j(l=t[c],c);u+=e(l,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=h&&t[h]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+j(l,c++),r,o);else"object"===l&&v("31","[object Object]"===(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function j(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(_,"$&/")+"/")+n)),r.push(e))}function R(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(_,"$&/")+"/"),I(e,z,t=A(t,i,r,o)),N(t)}function M(e,t){var n=E.currentDispatcher;return null===n&&v("277"),n.readContext(e,t)}var U={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return R(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,L,t=A(null,null,t,n)),N(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return R(e,t,null,(function(e){return e})),t},only:function(e){return P(e)||v("143"),e}},createRef:function(){return{current:null}},Component:b,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,Provider:null,Consumer:null,unstable_read:null}).Provider={$$typeof:s,_context:e},e.Consumer=e,e.unstable_read=M.bind(null,e),e},forwardRef:function(e){return{$$typeof:d,render:e}},Fragment:l,StrictMode:u,unstable_AsyncMode:p,unstable_Profiler:c,createElement:C,cloneElement:function(e,t,n){null==e&&v("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=E.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)T.call(t,o)&&!S.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=C.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.5.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:E,assign:r}},D={default:U},F=D&&U||D;e.exports=F.default||F},function(e,t,n){"use strict";var r=n(56),o=n(57),i=n(6),a=n(58),l=n(59),u=n(60);e.exports=function(e,t){var n,i,a={};t||(t={});for(i in p)n=t[i],a[i]=null==n?p[i]:n;(a.position.indent||a.position.start)&&(a.indent=a.position.indent||[],a.position=a.position.start);return function(e,t){var n,i,a,p,b,w,k,x,E,T,S,C,P,_,O,A,N,I,j,L=t.additional,z=t.nonTerminated,R=t.text,M=t.reference,U=t.warning,D=t.textContext,F=t.referenceContext,H=t.warningContext,B=t.position,$=t.indent||[],V=e.length,W=0,q=-1,Q=B.column||1,K=B.line||1,Y="",X=[];"string"==typeof L&&(L=L.charCodeAt(0));A=Z(),x=U?function(e,t){var n=Z();n.column+=t,n.offset+=t,U.call(H,y[e],n,e)}:f,W--,V++;for(;++W<V;)if(10===b&&(Q=$[q]||1),38===(b=e.charCodeAt(W))){if(9===(k=e.charCodeAt(W+1))||10===k||12===k||32===k||38===k||60===k||k!=k||L&&k===L){Y+=s(b),Q++;continue}for(C=P=W+1,j=P,35===k?(j=++C,88===(k=e.charCodeAt(j))||120===k?(_=h,j=++C):_="decimal"):_=d,n="",S="",p="",O=v[_],j--;++j<V&&(k=e.charCodeAt(j),O(k));)p+=s(k),_===d&&c.call(r,p)&&(n=p,S=r[p]);(a=59===e.charCodeAt(j))&&(j++,(i=_===d&&u(p))&&(n=p,S=i)),I=1+j-P,(a||z)&&(p?_===d?(a&&!S?x(5,1):(n!==p&&(j=C+n.length,I=1+j-C,a=!1),a||(E=n?1:3,t.attribute?61===(k=e.charCodeAt(j))?(x(E,I),S=null):l(k)?S=null:x(E,I):x(E,I))),w=S):(a||x(2,I),w=parseInt(p,m[_]),(G=w)>=55296&&G<=57343||G>1114111?(x(7,I),w=s(65533)):w in o?(x(6,I),w=o[w]):(T="",g(w)&&x(6,I),w>65535&&(T+=s((w-=65536)>>>10|55296),w=56320|1023&w),w=T+s(w))):_!==d&&x(4,I)),w?(J(),A=Z(),W=j-1,Q+=j-P+1,X.push(w),(N=Z()).offset++,M&&M.call(F,w,{start:A,end:N},e.slice(P-1,j)),A=N):(p=e.slice(P-1,j),Y+=p,Q+=p.length,W=j-1)}else 10===b&&(K++,q++,Q=0),b==b?(Y+=s(b),Q++):J();var G;return X.join("");function Z(){return{line:K,column:Q,offset:W+(B.offset||0)}}function J(){Y&&(X.push(Y),R&&R.call(D,Y,{start:A,end:Z()}),Y="")}}(e,a)};var c={}.hasOwnProperty,s=String.fromCharCode,f=Function.prototype,p={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},d="named",h="hexadecimal",m={hexadecimal:16,decimal:10},v={};v.named=l,v.decimal=i,v[h]=a;var y={};function g(e){return e>=1&&e<=8||11===e||e>=13&&e<=31||e>=127&&e<=159||e>=64976&&e<=65007||65535==(65535&e)||65534==(65535&e)}y[1]="Named character references must be terminated by a semicolon",y[2]="Numeric character references must be terminated by a semicolon",y[3]="Named character references cannot be empty",y[4]="Numeric character references cannot be empty",y[5]="Named character references must be known",y[6]="Numeric character references cannot be disallowed",y[7]="Numeric character references cannot be outside the permissible Unicode range"},function(e,t,n){"use strict";
/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */var r,o="";e.exports=function(e,t){if("string"!=typeof e)throw new TypeError("expected a string");if(1===t)return e;if(2===t)return e+e;var n=e.length*t;if(r!==e||void 0===r)r=e,o="";else if(o.length>=n)return o.substr(0,n);for(;n>o.length&&t>1;)1&t&&(o+=e),t>>=1,e+=e;return o=(o+=e).substr(0,n)}},function(e,t,n){"use strict";e.exports=function(e){var t=String(e),n=t.length;for(;"\n"===t.charAt(--n););return t.slice(0,n+1)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r){var o,i,a,l,u,c,s=["pedantic","commonmark"],f=s.length,p=e.length,d=-1;for(;++d<p;){for(o=e[d],i=o[1]||{},a=o[0],l=-1,c=!1;++l<f;)if(void 0!==i[u=s[l]]&&i[u]!==n.options[u]){c=!0;break}if(!c&&t[a].apply(n,r))return!0}return!1}},function(e,t,n){"use strict";var r=n(80);e.exports=function(e){return r(e).toLowerCase()}},function(e,t,n){"use strict";e.exports=n(112)},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(121);e.exports=d,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,x="+"===b||"*"===b,E="?"===b||"*"===b,T=n[2]||s,S=y||g;r.push({name:v||i++,prefix:m||"",delimiter:T,optional:E,repeat:x,partial:k,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(T)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=l[s.name];if(null==p){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(p),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var p=u(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),a+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(i(e,n),t,n)}(e,t,n)}},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],s=!1,f=-1;function p(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&d())}function d(){if(!s){var e=l(p);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||l(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){(function(e){function n(e,t){for(var n=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function r(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}t.resolve=function(){for(var t="",o=!1,i=arguments.length-1;i>=-1&&!o;i--){var a=i>=0?arguments[i]:e.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(t=a+"/"+t,o="/"===a.charAt(0))}return(o?"/":"")+(t=n(r(t.split("/"),(function(e){return!!e})),!o).join("/"))||"."},t.normalize=function(e){var i=t.isAbsolute(e),a="/"===o(e,-1);return(e=n(r(e.split("/"),(function(e){return!!e})),!i).join("/"))||i||(e="."),e&&a&&(e+="/"),(i?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(r(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,n){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var o=r(e.split("/")),i=r(n.split("/")),a=Math.min(o.length,i.length),l=a,u=0;u<a;u++)if(o[u]!==i[u]){l=u;break}var c=[];for(u=l;u<o.length;u++)c.push("..");return(c=c.concat(i.slice(l))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,o=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!o){r=i;break}}else o=!1;return-1===r?n?"/":".":n&&1===r?"/":e.slice(0,r)},t.basename=function(e,t){var n=function(e){"string"!=typeof e&&(e+="");var t,n=0,r=-1,o=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!o){n=t+1;break}}else-1===r&&(o=!1,r=t+1);return-1===r?"":e.slice(n,r)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,n=0,r=-1,o=!0,i=0,a=e.length-1;a>=0;--a){var l=e.charCodeAt(a);if(47!==l)-1===r&&(o=!1,r=a+1),46===l?-1===t?t=a:1!==i&&(i=1):-1!==t&&(i=-1);else if(!o){n=a+1;break}}return-1===t||-1===r||0===i||1===i&&t===r-1&&t===n+1?"":e.slice(t,r)};var o="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}}).call(this,n(19))},function(e,t,n){"use strict";e.exports=function(e){var t="string"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=122||t>=65&&t<=90}},function(e,t,n){"use strict";e.exports={position:!0,gfm:!0,commonmark:!1,footnotes:!1,pedantic:!1,blocks:n(64)}},function(e,t,n){"use strict";e.exports=function(e){var t,n=0,o=0,i=e.charAt(n),a={};for(;i in r;)o+=t=r[i],t>1&&(o=Math.floor(o/t)*t),a[o]=n,i=e.charAt(++n);return{indent:o,stops:a}};var r={" ":1,"\t":4}},function(e,t,n){"use strict";var r="<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\u0000-\\u0020]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>",o="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>";t.openCloseTag=new RegExp("^(?:"+r+"|"+o+")"),t.tag=new RegExp("^(?:"+r+"|"+o+"|\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e|<[?].*?[?]>|<![A-Za-z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)")},function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("<",t)}},function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("[",t),r=e.indexOf("![",t);if(-1===r)return n;return n<r?n:r}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(32)},function(e,t,n){"use strict";function r(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var o=n(2),i=n(35),a=n(48),l=n(104),u=n(107),c=n(109),s=n(110),f=n(111),p=n(113),d=n(114),h=n(115),m=n(116),v=n(117),y=Object.keys(m),g=function(e){var t=e.source||e.children||"",n=e.parserOptions;if(e.allowedTypes&&e.disallowedTypes)throw new Error("Only one of `allowedTypes` and `disallowedTypes` should be defined");var r=o(m,e.renderers),l=[[a,n]].concat(e.plugins||[]).reduce(b,i()),h=l.parse(t),g=o(e,{renderers:r,definitions:d(h)}),w=function(e){var t=[p,u()],n=e.disallowedTypes;e.allowedTypes&&(n=y.filter((function(t){return"root"!==t&&-1===e.allowedTypes.indexOf(t)})));var r=e.unwrapDisallowed?"unwrap":"remove";n&&n.length>0&&t.push(s.ofType(n,r));e.allowNode&&t.push(s.ifNotMatch(e.allowNode,r));var o=!e.escapeHtml&&!e.skipHtml,i=(e.astPlugins||[]).some((function(e){return(Array.isArray(e)?e[0]:e).identity===v.HtmlParser}));o&&!i&&t.push(c);return e.astPlugins?t.concat(e.astPlugins):t}(e),k=l.runSync(h),x=w.reduce((function(e,t){return t(e,g)}),k);return f(x,g)};function b(e,t){return Array.isArray(t)?e.use.apply(e,r(t)):e.use(t)}g.defaultProps={renderers:{},escapeHtml:!0,skipHtml:!1,sourcePos:!1,rawSourcePos:!1,transformLinkUri:h,astPlugins:[],plugins:[],parserOptions:{}},g.propTypes={className:l.string,source:l.string,children:l.string,sourcePos:l.bool,rawSourcePos:l.bool,escapeHtml:l.bool,skipHtml:l.bool,allowNode:l.func,allowedTypes:l.arrayOf(l.oneOf(y)),disallowedTypes:l.arrayOf(l.oneOf(y)),transformLinkUri:l.oneOfType([l.func,l.bool]),linkTarget:l.oneOfType([l.func,l.string]),transformImageUri:l.func,astPlugins:l.arrayOf(l.func),unwrapDisallowed:l.bool,renderers:l.object,plugins:l.array,parserOptions:l.object},g.types=y,g.renderers=m,g.uriTransformer=h,e.exports=g},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(120))},function(e,t,n){"use strict";var r=n(16),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=d(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||m&&m[y]||l&&l[y])){var g=p(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){n(123),e.exports=n(124)},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),i=n(33);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=null,u={};function c(){if(l)for(var e in u){var t=u[e],n=l.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!f[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in f[n]=t,n=t.eventTypes){var o=void 0,i=n[r],c=t,d=r;if(p.hasOwnProperty(d))throw Error(a(99,d));p[d]=i;var h=i.phasedRegistrationNames;if(h){for(o in h)h.hasOwnProperty(o)&&s(h[o],c,d);o=!0}else i.registrationName?(s(i.registrationName,c,d),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function s(e,t,n){if(d[e])throw Error(a(100,e));d[e]=t,h[e]=t.eventTypes[n].dependencies}var f=[],p={},d={},h={};function m(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var v=!1,y=null,g=!1,b=null,w={onError:function(e){v=!0,y=e}};function k(e,t,n,r,o,i,a,l,u){v=!1,y=null,m.apply(w,arguments)}var x=null,E=null,T=null;function S(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,l,u,c){if(k.apply(this,arguments),v){if(!v)throw Error(a(198));var s=y;v=!1,y=null,g||(g=!0,b=s)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function P(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var _=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)S(e,t[r],n[r]);else t&&S(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function A(e){if(null!==e&&(_=C(_,e)),e=_,_=null,e){if(P(e,O),_)throw Error(a(95));if(g)throw e=b,g=!1,b=null,e}}var N={injectEventPluginOrder:function(e){if(l)throw Error(a(101));l=Array.prototype.slice.call(e),c()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!u.hasOwnProperty(t)||u[t]!==r){if(u[t])throw Error(a(102,t));u[t]=r,n=!0}}n&&c()}};function I(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var j=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;j.hasOwnProperty("ReactCurrentDispatcher")||(j.ReactCurrentDispatcher={current:null}),j.hasOwnProperty("ReactCurrentBatchConfig")||(j.ReactCurrentBatchConfig={suspense:null});var L=/^(.*)[\\\/]/,z="function"==typeof Symbol&&Symbol.for,R=z?Symbol.for("react.element"):60103,M=z?Symbol.for("react.portal"):60106,U=z?Symbol.for("react.fragment"):60107,D=z?Symbol.for("react.strict_mode"):60108,F=z?Symbol.for("react.profiler"):60114,H=z?Symbol.for("react.provider"):60109,B=z?Symbol.for("react.context"):60110,$=z?Symbol.for("react.concurrent_mode"):60111,V=z?Symbol.for("react.forward_ref"):60112,W=z?Symbol.for("react.suspense"):60113,q=z?Symbol.for("react.suspense_list"):60120,Q=z?Symbol.for("react.memo"):60115,K=z?Symbol.for("react.lazy"):60116;z&&Symbol.for("react.fundamental"),z&&Symbol.for("react.responder"),z&&Symbol.for("react.scope");var Y="function"==typeof Symbol&&Symbol.iterator;function X(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=Y&&e[Y]||e["@@iterator"])?e:null}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case U:return"Fragment";case M:return"Portal";case F:return"Profiler";case D:return"StrictMode";case W:return"Suspense";case q:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case B:return"Context.Consumer";case H:return"Context.Provider";case V:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case Q:return G(e.type);case K:if(e=1===e._status?e._result:null)return G(e)}return null}function Z(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=G(e.type);n=null,r&&(n=G(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(L,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var J=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),ee=null,te=null,ne=null;function re(e){if(e=E(e)){if("function"!=typeof ee)throw Error(a(280));var t=x(e.stateNode);ee(e.stateNode,e.type,t)}}function oe(e){te?ne?ne.push(e):ne=[e]:te=e}function ie(){if(te){var e=te,t=ne;if(ne=te=null,re(e),t)for(e=0;e<t.length;e++)re(t[e])}}function ae(e,t){return e(t)}function le(e,t,n,r){return e(t,n,r)}function ue(){}var ce=ae,se=!1,fe=!1;function pe(){null===te&&null===ne||(ue(),ie())}new Map;var de=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,he=Object.prototype.hasOwnProperty,me={},ve={};function ye(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var ge={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){ge[e]=new ye(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];ge[t]=new ye(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){ge[e]=new ye(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){ge[e]=new ye(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){ge[e]=new ye(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){ge[e]=new ye(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){ge[e]=new ye(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){ge[e]=new ye(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){ge[e]=new ye(e,5,!1,e.toLowerCase(),null,!1)}));var be=/[\-:]([a-z])/g;function we(e){return e[1].toUpperCase()}function ke(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xe(e,t,n,r){var o=ge.hasOwnProperty(t)?ge[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!he.call(ve,e)||!he.call(me,e)&&(de.test(e)?ve[e]=!0:(me[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Ee(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Te(e){e._valueTracker||(e._valueTracker=function(e){var t=Ee(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Se(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Ee(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ce(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Pe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ke(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _e(e,t){null!=(t=t.checked)&&xe(e,"checked",t,!1)}function Oe(e,t){_e(e,t);var n=ke(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ne(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ne(e,t.type,ke(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ae(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ne(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ie(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function je(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ke(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ze(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw Error(a(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(a(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:ke(n)}}function Re(e,t){var n=ke(t.value),r=ke(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){ge[e]=new ye(e,1,!1,e.toLowerCase(),null,!1)})),ge.xlinkHref=new ye("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){ge[e]=new ye(e,1,!1,e.toLowerCase(),null,!0)}));var Ue="http://www.w3.org/1999/xhtml",De="http://www.w3.org/2000/svg";function Fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function He(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Be,$e=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==De||"innerHTML"in e)e.innerHTML=t;else{for((Be=Be||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Be.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var qe={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},Qe={},Ke={};function Ye(e){if(Qe[e])return Qe[e];if(!qe[e])return e;var t,n=qe[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ke)return Qe[e]=n[t];return e}J&&(Ke=document.createElement("div").style,"AnimationEvent"in window||(delete qe.animationend.animation,delete qe.animationiteration.animation,delete qe.animationstart.animation),"TransitionEvent"in window||delete qe.transitionend.transition);var Xe=Ye("animationend"),Ge=Ye("animationiteration"),Ze=Ye("animationstart"),Je=Ye("transitionend"),et="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function tt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function nt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function rt(e){if(tt(e)!==e)throw Error(a(188))}function ot(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=tt(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return rt(o),e;if(i===r)return rt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var it,at,lt,ut=!1,ct=[],st=null,ft=null,pt=null,dt=new Map,ht=new Map,mt=[],vt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),yt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function gt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function bt(e,t){switch(e){case"focus":case"blur":st=null;break;case"dragenter":case"dragleave":ft=null;break;case"mouseover":case"mouseout":pt=null;break;case"pointerover":case"pointerout":dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ht.delete(t.pointerId)}}function wt(e,t,n,r,o){return null===e||e.nativeEvent!==o?(e=gt(t,n,r,o),null!==t&&(null!==(t=cr(t))&&at(t)),e):(e.eventSystemFlags|=r,e)}function kt(e){var t=ur(e.target);if(null!==t){var n=tt(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=nt(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){lt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function xt(e){if(null!==e.blockedOn)return!1;var t=Nn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);if(null!==t){var n=cr(t);return null!==n&&at(n),e.blockedOn=t,!1}return!0}function Et(e,t,n){xt(e)&&n.delete(t)}function Tt(){for(ut=!1;0<ct.length;){var e=ct[0];if(null!==e.blockedOn){null!==(e=cr(e.blockedOn))&&it(e);break}var t=Nn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:ct.shift()}null!==st&&xt(st)&&(st=null),null!==ft&&xt(ft)&&(ft=null),null!==pt&&xt(pt)&&(pt=null),dt.forEach(Et),ht.forEach(Et)}function St(e,t){e.blockedOn===t&&(e.blockedOn=null,ut||(ut=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Tt)))}function Ct(e){function t(t){return St(t,e)}if(0<ct.length){St(ct[0],e);for(var n=1;n<ct.length;n++){var r=ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==st&&St(st,e),null!==ft&&St(ft,e),null!==pt&&St(pt,e),dt.forEach(t),ht.forEach(t),n=0;n<mt.length;n++)(r=mt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<mt.length&&null===(n=mt[0]).blockedOn;)kt(n),null===n.blockedOn&&mt.shift()}function Pt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function _t(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Ot(e,t,n){(t=I(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function At(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=_t(t);for(t=n.length;0<t--;)Ot(n[t],"captured",e);for(t=0;t<n.length;t++)Ot(n[t],"bubbled",e)}}function Nt(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=I(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function It(e){e&&e.dispatchConfig.registrationName&&Nt(e._targetInst,null,e)}function jt(e){P(e,At)}function Lt(){return!0}function zt(){return!1}function Rt(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Lt:zt,this.isPropagationStopped=zt,this}function Mt(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ut(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Dt(e){e.eventPool=[],e.getPooled=Mt,e.release=Ut}o(Rt.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Lt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Lt)},persist:function(){this.isPersistent=Lt},isPersistent:zt,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=zt,this._dispatchInstances=this._dispatchListeners=null}}),Rt.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Rt.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Dt(n),n},Dt(Rt);var Ft=Rt.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ht=Rt.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Bt=Rt.extend({view:null,detail:null}),$t=Bt.extend({relatedTarget:null});function Vt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Qt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Kt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Qt[e])&&!!t[e]}function Yt(){return Kt}for(var Xt=Bt.extend({key:function(e){if(e.key){var t=Wt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Vt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?qt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yt,charCode:function(e){return"keypress"===e.type?Vt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Vt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Gt=0,Zt=0,Jt=!1,en=!1,tn=Bt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Gt;return Gt=e.screenX,Jt?"mousemove"===e.type?e.screenX-t:0:(Jt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Zt;return Zt=e.screenY,en?"mousemove"===e.type?e.screenY-t:0:(en=!0,0)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),rn=tn.extend({dataTransfer:null}),on=Bt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yt}),an=Rt.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ln=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),un=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Xe,"animationEnd",2],[Ge,"animationIteration",2],[Ze,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[Je,"transitionEnd",2],["waiting","waiting",2]],cn={},sn={},fn=0;fn<un.length;fn++){var pn=un[fn],dn=pn[0],hn=pn[1],mn=pn[2],vn="on"+(hn[0].toUpperCase()+hn.slice(1)),yn={phasedRegistrationNames:{bubbled:vn,captured:vn+"Capture"},dependencies:[dn],eventPriority:mn};cn[hn]=yn,sn[dn]=yn}var gn={eventTypes:cn,getEventPriority:function(e){return void 0!==(e=sn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=sn[e];if(!o)return null;switch(e){case"keypress":if(0===Vt(n))return null;case"keydown":case"keyup":e=Xt;break;case"blur":case"focus":e=$t;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=on;break;case Xe:case Ge:case Ze:e=Ft;break;case Je:e=an;break;case"scroll":e=Bt;break;case"wheel":e=ln;break;case"copy":case"cut":case"paste":e=Ht;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=Rt}return jt(t=e.getPooled(o,t,n,r)),t}},bn=i.unstable_UserBlockingPriority,wn=i.unstable_runWithPriority,kn=gn.getEventPriority,xn=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=ur(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Pt(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=e.eventSystemFlags,l=null,u=0;u<f.length;u++){var c=f[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=C(l,c))}A(l)}}var Tn=!0;function Sn(e,t){Cn(t,e,!1)}function Cn(e,t,n){switch(kn(t)){case 0:var r=Pn.bind(null,t,1);break;case 1:r=_n.bind(null,t,1);break;default:r=An.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Pn(e,t,n){se||ue();var r=An,o=se;se=!0;try{le(r,e,t,n)}finally{(se=o)||pe()}}function _n(e,t,n){wn(bn,An.bind(null,e,t,n))}function On(e,t,n,r){if(xn.length){var o=xn.pop();o.topLevelType=e,o.eventSystemFlags=t,o.nativeEvent=n,o.targetInst=r,e=o}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=En,n=e,fe)t(n,void 0);else{fe=!0;try{ce(t,n,void 0)}finally{fe=!1,pe()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,xn.length<10&&xn.push(e)}}function An(e,t,n){if(Tn)if(0<ct.length&&-1<vt.indexOf(e))e=gt(null,e,t,n),ct.push(e);else{var r=Nn(e,t,n);null===r?bt(e,n):-1<vt.indexOf(e)?(e=gt(r,e,t,n),ct.push(e)):function(e,t,n,r){switch(t){case"focus":return st=wt(st,e,t,n,r),!0;case"dragenter":return ft=wt(ft,e,t,n,r),!0;case"mouseover":return pt=wt(pt,e,t,n,r),!0;case"pointerover":var o=r.pointerId;return dt.set(o,wt(dt.get(o)||null,e,t,n,r)),!0;case"gotpointercapture":return o=r.pointerId,ht.set(o,wt(ht.get(o)||null,e,t,n,r)),!0}return!1}(r,e,t,n)||(bt(e,n),On(e,t,n,null))}}function Nn(e,t,n){var r=Pt(n);if(null!==(r=ur(r))){var o=tt(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=nt(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return On(e,t,n,r),null}function In(e){if(!J)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var jn=new("function"==typeof WeakMap?WeakMap:Map);function Ln(e){var t=jn.get(e);return void 0===t&&(t=new Set,jn.set(e,t)),t}function zn(e,t,n){if(!n.has(e)){switch(e){case"scroll":Cn(t,"scroll",!0);break;case"focus":case"blur":Cn(t,"focus",!0),Cn(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":In(e)&&Cn(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===et.indexOf(e)&&Sn(e,t)}n.add(e)}}var Rn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Mn=["Webkit","ms","Moz","O"];function Un(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Rn.hasOwnProperty(e)&&Rn[e]?(""+t).trim():t+"px"}function Dn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=Un(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Rn).forEach((function(e){Mn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Rn[t]=Rn[e]}))}));var Fn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Hn(e,t){if(t){if(Fn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function Bn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function $n(e,t){var n=Ln(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=h[t];for(var r=0;r<t.length;r++)zn(t[r],e,n)}function Vn(){}function Wn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function qn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Qn(e,t){var n,r=qn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=qn(r)}}function Kn(){for(var e=window,t=Wn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Wn((e=t.contentWindow).document)}return t}function Yn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Xn=null,Gn=null;function Zn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Jn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var er="function"==typeof setTimeout?setTimeout:void 0,tr="function"==typeof clearTimeout?clearTimeout:void 0;function nr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function rr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var or=Math.random().toString(36).slice(2),ir="__reactInternalInstance$"+or,ar="__reactEventHandlers$"+or,lr="__reactContainere$"+or;function ur(e){var t=e[ir];if(t)return t;for(var n=e.parentNode;n;){if(t=n[lr]||n[ir]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=rr(e);null!==e;){if(n=e[ir])return n;e=rr(e)}return t}n=(e=n).parentNode}return null}function cr(e){return!(e=e[ir]||e[lr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function sr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function fr(e){return e[ar]||null}var pr=null,dr=null,hr=null;function mr(){if(hr)return hr;var e,t,n=dr,r=n.length,o="value"in pr?pr.value:pr.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return hr=o.slice(e,1<t?1-t:void 0)}var vr=Rt.extend({data:null}),yr=Rt.extend({data:null}),gr=[9,13,27,32],br=J&&"CompositionEvent"in window,wr=null;J&&"documentMode"in document&&(wr=document.documentMode);var kr=J&&"TextEvent"in window&&!wr,xr=J&&(!br||wr&&8<wr&&11>=wr),Er=String.fromCharCode(32),Tr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Sr=!1;function Cr(e,t){switch(e){case"keyup":return-1!==gr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Pr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var _r=!1;var Or={eventTypes:Tr,extractEvents:function(e,t,n,r){var o;if(br)e:{switch(e){case"compositionstart":var i=Tr.compositionStart;break e;case"compositionend":i=Tr.compositionEnd;break e;case"compositionupdate":i=Tr.compositionUpdate;break e}i=void 0}else _r?Cr(e,n)&&(i=Tr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=Tr.compositionStart);return i?(xr&&"ko"!==n.locale&&(_r||i!==Tr.compositionStart?i===Tr.compositionEnd&&_r&&(o=mr()):(dr="value"in(pr=r)?pr.value:pr.textContent,_r=!0)),i=vr.getPooled(i,t,n,r),o?i.data=o:null!==(o=Pr(n))&&(i.data=o),jt(i),o=i):o=null,(e=kr?function(e,t){switch(e){case"compositionend":return Pr(t);case"keypress":return 32!==t.which?null:(Sr=!0,Er);case"textInput":return(e=t.data)===Er&&Sr?null:e;default:return null}}(e,n):function(e,t){if(_r)return"compositionend"===e||!br&&Cr(e,t)?(e=mr(),hr=dr=pr=null,_r=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return xr&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=yr.getPooled(Tr.beforeInput,t,n,r)).data=e,jt(t)):t=null,null===o?t:null===t?o:[o,t]}},Ar={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Nr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ar[e.type]:"textarea"===t}var Ir={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function jr(e,t,n){return(e=Rt.getPooled(Ir.change,e,t,n)).type="change",oe(n),jt(e),e}var Lr=null,zr=null;function Rr(e){A(e)}function Mr(e){if(Se(sr(e)))return e}function Ur(e,t){if("change"===e)return t}var Dr=!1;function Fr(){Lr&&(Lr.detachEvent("onpropertychange",Hr),zr=Lr=null)}function Hr(e){if("value"===e.propertyName&&Mr(zr))if(e=jr(zr,e,Pt(e)),se)A(e);else{se=!0;try{ae(Rr,e)}finally{se=!1,pe()}}}function Br(e,t,n){"focus"===e?(Fr(),zr=n,(Lr=t).attachEvent("onpropertychange",Hr)):"blur"===e&&Fr()}function $r(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Mr(zr)}function Vr(e,t){if("click"===e)return Mr(t)}function Wr(e,t){if("input"===e||"change"===e)return Mr(t)}J&&(Dr=In("input")&&(!document.documentMode||9<document.documentMode));var qr,Qr={eventTypes:Ir,_isInputEventSupported:Dr,extractEvents:function(e,t,n,r){var o=t?sr(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Ur;else if(Nr(o))if(Dr)a=Wr;else{a=$r;var l=Br}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Vr);if(a&&(a=a(e,t)))return jr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ne(o,"number",o.value)}},Kr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Yr={eventTypes:Kr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?ur(t):null)&&(t!==(i=tt(t))||5!==t.tag&&6!==t.tag)&&(t=null)):a=null,a===t)return null;if("mouseout"===e||"mouseover"===e)var l=tn,u=Kr.mouseLeave,c=Kr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=nn,u=Kr.pointerLeave,c=Kr.pointerEnter,s="pointer");if(e=null==a?o:sr(a),o=null==t?o:sr(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(r=l.getPooled(c,t,n,r)).type=s+"enter",r.target=o,r.relatedTarget=e,s=t,(l=a)&&s)e:{for(e=s,a=0,t=c=l;t;t=_t(t))a++;for(t=0,o=e;o;o=_t(o))t++;for(;0<a-t;)c=_t(c),a--;for(;0<t-a;)e=_t(e),t--;for(;a--;){if(c===e||c===e.alternate)break e;c=_t(c),e=_t(e)}c=null}else c=null;for(e=c,c=[];l&&l!==e&&(null===(a=l.alternate)||a!==e);)c.push(l),l=_t(l);for(l=[];s&&s!==e&&(null===(a=s.alternate)||a!==e);)l.push(s),s=_t(s);for(s=0;s<c.length;s++)Nt(c[s],"bubbled",u);for(s=l.length;0<s--;)Nt(l[s],"captured",r);return n===qr?(qr=null,[u]):(qr=n,[u,r])}};var Xr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Gr=Object.prototype.hasOwnProperty;function Zr(e,t){if(Xr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Gr.call(t,n[r])||!Xr(e[n[r]],t[n[r]]))return!1;return!0}var Jr=J&&"documentMode"in document&&11>=document.documentMode,eo={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},to=null,no=null,ro=null,oo=!1;function io(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return oo||null==to||to!==Wn(n)?null:("selectionStart"in(n=to)&&Yn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},ro&&Zr(ro,n)?null:(ro=n,(e=Rt.getPooled(eo.select,no,e,t)).type="select",e.target=to,jt(e),e))}var ao={eventTypes:eo,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Ln(i),o=h.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?sr(t):window,e){case"focus":(Nr(i)||"true"===i.contentEditable)&&(to=i,no=t,ro=null);break;case"blur":ro=no=to=null;break;case"mousedown":oo=!0;break;case"contextmenu":case"mouseup":case"dragend":return oo=!1,io(n,r);case"selectionchange":if(Jr)break;case"keydown":case"keyup":return io(n,r)}return null}};N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=fr,E=cr,T=sr,N.injectEventPluginsByName({SimpleEventPlugin:gn,EnterLeaveEventPlugin:Yr,ChangeEventPlugin:Qr,SelectEventPlugin:ao,BeforeInputEventPlugin:Or}),new Set;var lo=[],uo=-1;function co(e){0>uo||(e.current=lo[uo],lo[uo]=null,uo--)}function so(e,t){uo++,lo[uo]=e.current,e.current=t}var fo={},po={current:fo},ho={current:!1},mo=fo;function vo(e,t){var n=e.type.contextTypes;if(!n)return fo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function yo(e){return null!=(e=e.childContextTypes)}function go(e){co(ho),co(po)}function bo(e){co(ho),co(po)}function wo(e,t,n){if(po.current!==fo)throw Error(a(168));so(po,t),so(ho,n)}function ko(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,G(t)||"Unknown",i));return o({},n,{},r)}function xo(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||fo,mo=po.current,so(po,t),so(ho,ho.current),!0}function Eo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(t=ko(e,t,mo),r.__reactInternalMemoizedMergedChildContext=t,co(ho),co(po),so(po,t)):co(ho),so(ho,n)}var To=i.unstable_runWithPriority,So=i.unstable_scheduleCallback,Co=i.unstable_cancelCallback,Po=i.unstable_shouldYield,_o=i.unstable_requestPaint,Oo=i.unstable_now,Ao=i.unstable_getCurrentPriorityLevel,No=i.unstable_ImmediatePriority,Io=i.unstable_UserBlockingPriority,jo=i.unstable_NormalPriority,Lo=i.unstable_LowPriority,zo=i.unstable_IdlePriority,Ro={},Mo=void 0!==_o?_o:function(){},Uo=null,Do=null,Fo=!1,Ho=Oo(),Bo=1e4>Ho?Oo:function(){return Oo()-Ho};function $o(){switch(Ao()){case No:return 99;case Io:return 98;case jo:return 97;case Lo:return 96;case zo:return 95;default:throw Error(a(332))}}function Vo(e){switch(e){case 99:return No;case 98:return Io;case 97:return jo;case 96:return Lo;case 95:return zo;default:throw Error(a(332))}}function Wo(e,t){return e=Vo(e),To(e,t)}function qo(e,t,n){return e=Vo(e),So(e,t,n)}function Qo(e){return null===Uo?(Uo=[e],Do=So(No,Yo)):Uo.push(e),Ro}function Ko(){if(null!==Do){var e=Do;Do=null,Co(e)}Yo()}function Yo(){if(!Fo&&null!==Uo){Fo=!0;var e=0;try{var t=Uo;Wo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Uo=null}catch(t){throw null!==Uo&&(Uo=Uo.slice(e+1)),So(No,Ko),t}finally{Fo=!1}}}var Xo=3;function Go(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Zo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Jo={current:null},ei=null,ti=null,ni=null;function ri(){ni=ti=ei=null}function oi(e,t){var n=e.type._context;so(Jo,n._currentValue),n._currentValue=t}function ii(e){var t=Jo.current;co(Jo),e.type._context._currentValue=t}function ai(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function li(e,t){ei=e,ni=ti=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ha=!0),e.firstContext=null)}function ui(e,t){if(ni!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ni=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ti){if(null===ei)throw Error(a(308));ti=t,ei.dependencies={expirationTime:0,firstContext:t,responders:null}}else ti=ti.next=t;return e._currentValue}var ci=!1;function si(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function fi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function pi(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function di(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function hi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=si(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=si(e.memoizedState),o=n.updateQueue=si(n.memoizedState)):r=e.updateQueue=fi(o):null===o&&(o=n.updateQueue=fi(r));null===o||r===o?di(r,t):null===r.lastUpdate||null===o.lastUpdate?(di(r,t),di(o,t)):(di(r,t),o.lastUpdate=t)}function mi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=si(e.memoizedState):vi(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function vi(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=fi(t)),t}function yi(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:ci=!0}return r}function gi(e,t,n,r,o){ci=!1;for(var i=(t=vi(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(fu(s,u.suspenseConfig),c=yi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=yi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,pu(l),e.expirationTime=l,e.memoizedState=c}function bi(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),wi(t.firstEffect,n),t.firstEffect=t.lastEffect=null,wi(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function wi(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw Error(a(191,n));n.call(r)}e=e.nextEffect}}var ki=j.ReactCurrentBatchConfig,xi=(new r.Component).refs;function Ei(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ti={isMounted:function(e){return!!(e=e._reactInternalFiber)&&tt(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Zl(),o=ki.suspense;(o=pi(r=Jl(r,e,o),o)).payload=t,null!=n&&(o.callback=n),hi(e,o),eu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Zl(),o=ki.suspense;(o=pi(r=Jl(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),hi(e,o),eu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Zl(),r=ki.suspense;(r=pi(n=Jl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),hi(e,r),eu(e,n)}};function Si(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Zr(n,r)||!Zr(o,i))}function Ci(e,t,n){var r=!1,o=fo,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=yo(t)?mo:po.current,i=(r=null!=(r=t.contextTypes))?vo(e,o):fo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ti,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Pi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ti.enqueueReplaceState(t,t.state,null)}function _i(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=xi;var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=yo(t)?mo:po.current,o.context=vo(e,i)),null!==(i=e.updateQueue)&&(gi(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Ei(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Ti.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(gi(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Oi=Array.isArray;function Ai(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===xi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ni(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ii(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Iu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ai(e,t,n),r.return=e,r):((r=ju(n.type,n.key,n.props,null,e.mode,r)).ref=Ai(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ru(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Lu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case R:return(n=ju(t.type,t.key,t.props,null,e.mode,n)).ref=Ai(e,null,t),n.return=e,n;case M:return(t=Ru(t,e.mode,n)).return=e,t}if(Oi(t)||X(t))return(t=Lu(t,e.mode,n,null)).return=e,t;Ni(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case R:return n.key===o?n.type===U?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case M:return n.key===o?s(e,t,n,r):null}if(Oi(n)||X(n))return null!==o?null:f(e,t,n,r,null);Ni(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case R:return e=e.get(null===r.key?n:r.key)||null,r.type===U?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case M:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Oi(r)||X(r))return f(t,e=e.get(n)||null,r,o,null);Ni(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=d(o,f,l[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)null!==(f=p(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=X(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,m=l,v=l=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=d(o,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=p(o,g.value,c))&&(l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===U&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case R:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===U:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===U?i.props.children:i.props)).ref=Ai(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===U?((r=Lu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=ju(i.type,i.key,i.props,null,e.mode,u)).ref=Ai(e,r,i),u.return=e,e=u)}return l(e);case M:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ru(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=zu(i,e.mode,u)).return=e,e=r),l(e);if(Oi(i))return m(e,r,i,u);if(X(i))return v(e,r,i,u);if(s&&Ni(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var ji=Ii(!0),Li=Ii(!1),zi={},Ri={current:zi},Mi={current:zi},Ui={current:zi};function Di(e){if(e===zi)throw Error(a(174));return e}function Fi(e,t){so(Ui,t),so(Mi,e),so(Ri,zi);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:He(null,"");break;default:t=He(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}co(Ri),so(Ri,t)}function Hi(e){co(Ri),co(Mi),co(Ui)}function Bi(e){Di(Ui.current);var t=Di(Ri.current),n=He(t,e.type);t!==n&&(so(Mi,e),so(Ri,n))}function $i(e){Mi.current===e&&(co(Ri),co(Mi))}var Vi={current:0};function Wi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function qi(e,t){return{responder:e,props:t}}var Qi=j.ReactCurrentDispatcher,Ki=j.ReactCurrentBatchConfig,Yi=0,Xi=null,Gi=null,Zi=null,Ji=null,ea=null,ta=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0;function ua(){throw Error(a(321))}function ca(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Xr(e[n],t[n]))return!1;return!0}function sa(e,t,n,r,o,i){if(Yi=i,Xi=t,Zi=null!==e?e.memoizedState:null,Qi.current=null===Zi?Oa:Aa,t=n(r,o),ia){do{ia=!1,la+=1,Zi=null!==e?e.memoizedState:null,ta=Ji,ra=ea=Gi=null,Qi.current=Aa,t=n(r,o)}while(ia);aa=null,la=0}if(Qi.current=_a,(e=Xi).memoizedState=Ji,e.expirationTime=na,e.updateQueue=ra,e.effectTag|=oa,e=null!==Gi&&null!==Gi.next,Yi=0,ta=ea=Ji=Zi=Gi=Xi=null,na=0,ra=null,oa=0,e)throw Error(a(300));return t}function fa(){Qi.current=_a,Yi=0,ta=ea=Ji=Zi=Gi=Xi=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0}function pa(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ea?Ji=ea=e:ea=ea.next=e,ea}function da(){if(null!==ta)ta=(ea=ta).next,Zi=null!==(Gi=Zi)?Gi.next:null;else{if(null===Zi)throw Error(a(310));var e={memoizedState:(Gi=Zi).memoizedState,baseState:Gi.baseState,queue:Gi.queue,baseUpdate:Gi.baseUpdate,next:null};ea=null===ea?Ji=e:ea.next=e,Zi=Gi.next}return ea}function ha(e,t){return"function"==typeof t?t(e):t}function ma(e){var t=da(),n=t.queue;if(null===n)throw Error(a(311));if(n.lastRenderedReducer=e,0<la){var r=n.dispatch;if(null!==aa){var o=aa.get(n);if(void 0!==o){aa.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Xr(i,t.memoizedState)||(Ha=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Yi?(s||(s=!0,u=l,o=i),f>na&&pu(na=f)):(fu(f,c.suspenseConfig),i=c.eagerReducer===e?c.eagerState:e(i,c.action)),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=i),Xr(i,t.memoizedState)||(Ha=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function va(e){var t=pa();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ha,lastRenderedState:e}).dispatch=Pa.bind(null,Xi,e),[t.memoizedState,e]}function ya(e){return ma(ha)}function ga(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ra?(ra={lastEffect:null}).lastEffect=e.next=e:null===(t=ra.lastEffect)?ra.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ra.lastEffect=e),e}function ba(e,t,n,r){var o=pa();oa|=e,o.memoizedState=ga(t,n,void 0,void 0===r?null:r)}function wa(e,t,n,r){var o=da();r=void 0===r?null:r;var i=void 0;if(null!==Gi){var a=Gi.memoizedState;if(i=a.destroy,null!==r&&ca(r,a.deps))return void ga(0,n,i,r)}oa|=e,o.memoizedState=ga(t,n,i,r)}function ka(e,t){return ba(516,192,e,t)}function xa(e,t){return wa(516,192,e,t)}function Ea(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ta(){}function Sa(e,t){return pa().memoizedState=[e,void 0===t?null:t],e}function Ca(e,t){var n=da();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ca(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Pa(e,t,n){if(!(25>la))throw Error(a(301));var r=e.alternate;if(e===Xi||null!==r&&r===Xi)if(ia=!0,e={expirationTime:Yi,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===aa&&(aa=new Map),void 0===(n=aa.get(t)))aa.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=Zl(),i=ki.suspense;i={expirationTime:o=Jl(o,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var l=t.last;if(null===l)i.next=i;else{var u=l.next;null!==u&&(i.next=u),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Xr(s,c))return}catch(e){}eu(e,o)}}var _a={readContext:ui,useCallback:ua,useContext:ua,useEffect:ua,useImperativeHandle:ua,useLayoutEffect:ua,useMemo:ua,useReducer:ua,useRef:ua,useState:ua,useDebugValue:ua,useResponder:ua,useDeferredValue:ua,useTransition:ua},Oa={readContext:ui,useCallback:Sa,useContext:ui,useEffect:ka,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ba(4,36,Ea.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ba(4,36,e,t)},useMemo:function(e,t){var n=pa();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=pa();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pa.bind(null,Xi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},pa().memoizedState=e},useState:va,useDebugValue:Ta,useResponder:qi,useDeferredValue:function(e,t){var n=va(e),r=n[0],o=n[1];return ka((function(){i.unstable_next((function(){var n=Ki.suspense;Ki.suspense=void 0===t?null:t;try{o(e)}finally{Ki.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=va(!1),n=t[0],r=t[1];return[Sa((function(t){r(!0),i.unstable_next((function(){var n=Ki.suspense;Ki.suspense=void 0===e?null:e;try{r(!1),t()}finally{Ki.suspense=n}}))}),[e,n]),n]}},Aa={readContext:ui,useCallback:Ca,useContext:ui,useEffect:xa,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,wa(4,36,Ea.bind(null,t,e),n)},useLayoutEffect:function(e,t){return wa(4,36,e,t)},useMemo:function(e,t){var n=da();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ca(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ma,useRef:function(){return da().memoizedState},useState:ya,useDebugValue:Ta,useResponder:qi,useDeferredValue:function(e,t){var n=ya(),r=n[0],o=n[1];return xa((function(){i.unstable_next((function(){var n=Ki.suspense;Ki.suspense=void 0===t?null:t;try{o(e)}finally{Ki.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=ya(),n=t[0],r=t[1];return[Ca((function(t){r(!0),i.unstable_next((function(){var n=Ki.suspense;Ki.suspense=void 0===e?null:e;try{r(!1),t()}finally{Ki.suspense=n}}))}),[e,n]),n]}},Na=null,Ia=null,ja=!1;function La(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function za(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ra(e){if(ja){var t=Ia;if(t){var n=t;if(!za(e,t)){if(!(t=nr(n.nextSibling))||!za(e,t))return e.effectTag=-1025&e.effectTag|2,ja=!1,void(Na=e);La(Na,n)}Na=e,Ia=nr(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ja=!1,Na=e}}function Ma(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Na=e}function Ua(e){if(e!==Na)return!1;if(!ja)return Ma(e),ja=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Jn(t,e.memoizedProps))for(t=Ia;t;)La(e,t),t=nr(t.nextSibling);if(Ma(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ia=nr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ia=null}}else Ia=Na?nr(e.stateNode.nextSibling):null;return!0}function Da(){Ia=Na=null,ja=!1}var Fa=j.ReactCurrentOwner,Ha=!1;function Ba(e,t,n,r){t.child=null===e?Li(t,null,n,r):ji(t,e.child,n,r)}function $a(e,t,n,r,o){n=n.render;var i=t.ref;return li(t,o),r=sa(e,t,n,r,i,o),null===e||Ha?(t.effectTag|=1,Ba(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),il(e,t,o))}function Va(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Nu(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=ju(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Wa(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Zr)(o,r)&&e.ref===t.ref)?il(e,t,i):(t.effectTag|=1,(e=Iu(a,r)).ref=t.ref,e.return=t,t.child=e)}function Wa(e,t,n,r,o,i){return null!==e&&Zr(e.memoizedProps,r)&&e.ref===t.ref&&(Ha=!1,o<i)?il(e,t,i):Qa(e,t,n,r,i)}function qa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Qa(e,t,n,r,o){var i=yo(n)?mo:po.current;return i=vo(t,i),li(t,o),n=sa(e,t,n,r,i,o),null===e||Ha?(t.effectTag|=1,Ba(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),il(e,t,o))}function Ka(e,t,n,r,o){if(yo(n)){var i=!0;xo(t)}else i=!1;if(li(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Ci(t,n,r),_i(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=ui(c):c=vo(t,c=yo(n)?mo:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Pi(t,a,r,c),ci=!1;var p=t.memoizedState;u=a.state=p;var d=t.updateQueue;null!==d&&(gi(t,d,r,a,o),u=t.memoizedState),l!==r||p!==u||ho.current||ci?("function"==typeof s&&(Ei(t,n,s,r),u=t.memoizedState),(l=ci||Si(t,n,l,r,p,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:Zo(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=ui(c):c=vo(t,c=yo(n)?mo:po.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Pi(t,a,r,c),ci=!1,u=t.memoizedState,p=a.state=u,null!==(d=t.updateQueue)&&(gi(t,d,r,a,o),p=t.memoizedState),l!==r||u!==p||ho.current||ci?("function"==typeof s&&(Ei(t,n,s,r),p=t.memoizedState),(s=ci||Si(t,n,l,r,u,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ya(e,t,n,r,i,o)}function Ya(e,t,n,r,o,i){qa(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Eo(t,n,!1),il(e,t,i);r=t.stateNode,Fa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=ji(t,e.child,null,i),t.child=ji(t,null,l,i)):Ba(e,t,l,i),t.memoizedState=r.state,o&&Eo(t,n,!0),t.child}function Xa(e){var t=e.stateNode;t.pendingContext?wo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&wo(0,t.context,!1),Fi(e,t.containerInfo)}var Ga,Za,Ja,el={dehydrated:null,retryTime:0};function tl(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Vi.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),so(Vi,1&a),null===e){if(void 0!==i.fallback&&Ra(t),l){if(l=i.fallback,(i=Lu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Lu(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=el,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Li(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Iu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Iu(o,i,o.expirationTime)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=el,t.child=n,o}return n=ji(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=Lu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Lu(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=el,t.child=i,n}return t.memoizedState=null,t.child=ji(t,e,i.children,n)}function nl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ai(e.return,t)}function rl(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function ol(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ba(e,t,r.children,n),0!=(2&(r=Vi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&nl(e,n);else if(19===e.tag)nl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(so(Vi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Wi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),rl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Wi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}rl(t,!0,n,null,i,t.lastEffect);break;case"together":rl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function il(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&pu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Iu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Iu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function al(e){e.effectTag|=4}function ll(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ul(e){switch(e.tag){case 1:yo(e.type)&&go();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Hi(),bo(),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return $i(e),null;case 13:return co(Vi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return co(Vi),null;case 4:return Hi(),null;case 10:return ii(e),null;default:return null}}function cl(e,t){return{value:e,source:t,stack:Z(t)}}Ga=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Za=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Di(Ri.current),e=null,n){case"input":a=Ce(c,a),r=Ce(c,r),e=[];break;case"option":a=Ie(c,a),r=Ie(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Le(c,a),r=Le(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=Vn)}for(l in Hn(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(d.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,""+s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(d.hasOwnProperty(l)?(null!=s&&$n(i,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&al(t)}},Ja=function(e,t,n,r){n!==r&&al(t)};var sl="function"==typeof WeakSet?WeakSet:Set;function fl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=Z(n)),null!==n&&G(n.type),t=t.value,null!==e&&1===e.tag&&G(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function pl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Tu(e,t)}else t.current=null}function dl(e,t){switch(t.tag){case 0:case 11:case 15:hl(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Zo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}function hl(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ml(e,t,n){switch("function"==typeof _u&&_u(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Tu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:pl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Tu(e,t)}}(t,n);break;case 5:pl(t);break;case 4:bl(e,t,n)}}function vl(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&vl(t)}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function gl(e){e:{for(var t=e.return;null!==t;){if(yl(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Ve(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var i=5===o.tag||6===o.tag;if(i){var l=i?o.stateNode:o.stateNode.instance;if(n)if(r){var u=l;l=n,8===(i=t).nodeType?i.parentNode.insertBefore(u,l):i.insertBefore(u,l)}else t.insertBefore(l,n);else r?(8===(u=t).nodeType?(i=u.parentNode).insertBefore(l,u):(i=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=Vn)):t.appendChild(l)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function bl(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(ml(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(ml(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:hl(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[ar]=r,"input"===e&&"radio"===r.type&&null!=r.name&&_e(n,r),Bn(e,o),t=Bn(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?Dn(n,u):"dangerouslySetInnerHTML"===l?$e(n,u):"children"===l?Ve(n,u):xe(n,l,u,t)}switch(e){case"input":Oe(n,r);break;case"textarea":Re(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?je(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?je(n,!!r.multiple,r.defaultValue,!0):je(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw Error(a(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,Ct(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Fl=Bo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=Un("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}kl(t);break;case 19:kl(t);break;case 17:case 20:case 21:break;default:throw Error(a(163))}}function kl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new sl),t.forEach((function(t){var r=Cu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var xl="function"==typeof WeakMap?WeakMap:Map;function El(e,t,n){(n=pi(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,$l=r),fl(e,t)},n}function Tl(e,t,n){(n=pi(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return fl(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Vl?Vl=new Set([this]):Vl.add(this),fl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Sl,Cl=Math.ceil,Pl=j.ReactCurrentDispatcher,_l=j.ReactCurrentOwner,Ol=0,Al=null,Nl=null,Il=0,jl=0,Ll=null,zl=1073741823,Rl=1073741823,Ml=null,Ul=0,Dl=!1,Fl=0,Hl=null,Bl=!1,$l=null,Vl=null,Wl=!1,ql=null,Ql=90,Kl=null,Yl=0,Xl=null,Gl=0;function Zl(){return 0!=(48&Ol)?1073741821-(Bo()/10|0):0!==Gl?Gl:Gl=1073741821-(Bo()/10|0)}function Jl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Ol))return Il;if(null!==n)e=Go(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Go(e,150,100);break;case 97:case 96:e=Go(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Al&&e===Il&&--e,e}function eu(e,t){if(50<Yl)throw Yl=0,Xl=null,Error(a(185));if(null!==(e=tu(e,t))){var n=$o();1073741823===t?0!=(8&Ol)&&0==(48&Ol)?iu(e):(ru(e),0===Ol&&Ko()):ru(e),0==(4&Ol)||98!==n&&99!==n||(null===Kl?Kl=new Map([[e,t]]):(void 0===(n=Kl.get(e))||n>t)&&Kl.set(e,t))}}function tu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Al===o&&(pu(t),4===jl&&Du(o,Il)),Fu(o,t)),o}function nu(e){var t=e.lastExpiredTime;return 0!==t?t:Uu(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function ru(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Qo(iu.bind(null,e));else{var t=nu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Zl();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Ro&&Co(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Qo(iu.bind(null,e)):qo(r,ou.bind(null,e),{timeout:10*(1073741821-t)-Bo()}),e.callbackNode=t}}}function ou(e,t){if(Gl=0,t)return Hu(e,t=Zl()),ru(e),null;var n=nu(e);if(0!==n){if(t=e.callbackNode,0!=(48&Ol))throw Error(a(327));if(ku(),e===Al&&n===Il||uu(e,n),null!==Nl){var r=Ol;Ol|=16;for(var o=su();;)try{hu();break}catch(t){cu(e,t)}if(ri(),Ol=r,Pl.current=o,1===jl)throw t=Ll,uu(e,n),Du(e,n),ru(e),t;if(null===Nl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=jl,Al=null,r){case 0:case 1:throw Error(a(345));case 2:Hu(e,2<n?2:n);break;case 3:if(Du(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=yu(o)),1073741823===zl&&10<(o=Fl+500-Bo())){if(Dl){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,uu(e,n);break}}if(0!==(i=nu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=er(gu.bind(null,e),o);break}gu(e);break;case 4:if(Du(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=yu(o)),Dl&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,uu(e,n);break}if(0!==(o=nu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Rl?r=10*(1073741821-Rl)-Bo():1073741823===zl?r=0:(r=10*(1073741821-zl)-5e3,0>(r=(o=Bo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=er(gu.bind(null,e),r);break}gu(e);break;case 5:if(1073741823!==zl&&null!==Ml){i=zl;var l=Ml;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Bo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Du(e,n),e.timeoutHandle=er(gu.bind(null,e),r);break}}gu(e);break;default:throw Error(a(329))}if(ru(e),e.callbackNode===t)return ou.bind(null,e)}}return null}function iu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)gu(e);else{if(0!=(48&Ol))throw Error(a(327));if(ku(),e===Al&&t===Il||uu(e,t),null!==Nl){var n=Ol;Ol|=16;for(var r=su();;)try{du();break}catch(t){cu(e,t)}if(ri(),Ol=n,Pl.current=r,1===jl)throw n=Ll,uu(e,t),Du(e,t),ru(e),n;if(null!==Nl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Al=null,gu(e),ru(e)}}return null}function au(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&Ko()}}function lu(e,t){var n=Ol;Ol&=-2,Ol|=8;try{return e(t)}finally{0===(Ol=n)&&Ko()}}function uu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,tr(n)),null!==Nl)for(n=Nl.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&go();break;case 3:Hi(),bo();break;case 5:$i(r);break;case 4:Hi();break;case 13:case 19:co(Vi);break;case 10:ii(r)}n=n.return}Al=e,Nl=Iu(e.current,null),Il=t,jl=0,Ll=null,Rl=zl=1073741823,Ml=null,Ul=0,Dl=!1}function cu(e,t){for(;;){try{if(ri(),fa(),null===Nl||null===Nl.return)return jl=1,Ll=t,null;e:{var n=e,r=Nl.return,o=Nl,i=t;if(t=Il,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==i&&"object"==typeof i&&"function"==typeof i.then){var a=i,l=0!=(1&Vi.current),u=r;do{var c;if(c=13===u.tag){var s=u.memoizedState;if(null!==s)c=null!==s.dehydrated;else{var f=u.memoizedProps;c=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(c){var p=u.updateQueue;if(null===p){var d=new Set;d.add(a),u.updateQueue=d}else p.add(a);if(0==(2&u.mode)){if(u.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var h=pi(1073741823,null);h.tag=2,hi(o,h)}o.expirationTime=1073741823;break e}i=void 0,o=t;var m=n.pingCache;if(null===m?(m=n.pingCache=new xl,i=new Set,m.set(a,i)):void 0===(i=m.get(a))&&(i=new Set,m.set(a,i)),!i.has(o)){i.add(o);var v=Su.bind(null,n,a,o);a.then(v,v)}u.effectTag|=4096,u.expirationTime=t;break e}u=u.return}while(null!==u);i=Error((G(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Z(o))}5!==jl&&(jl=2),i=cl(i,o),u=r;do{switch(u.tag){case 3:a=i,u.effectTag|=4096,u.expirationTime=t,mi(u,El(u,a,t));break e;case 1:a=i;var y=u.type,g=u.stateNode;if(0==(64&u.effectTag)&&("function"==typeof y.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===Vl||!Vl.has(g)))){u.effectTag|=4096,u.expirationTime=t,mi(u,Tl(u,a,t));break e}}u=u.return}while(null!==u)}Nl=vu(Nl)}catch(e){t=e;continue}break}}function su(){var e=Pl.current;return Pl.current=_a,null===e?_a:e}function fu(e,t){e<zl&&2<e&&(zl=e),null!==t&&e<Rl&&2<e&&(Rl=e,Ml=t)}function pu(e){e>Ul&&(Ul=e)}function du(){for(;null!==Nl;)Nl=mu(Nl)}function hu(){for(;null!==Nl&&!Po();)Nl=mu(Nl)}function mu(e){var t=Sl(e.alternate,e,Il);return e.memoizedProps=e.pendingProps,null===t&&(t=vu(e)),_l.current=null,t}function vu(e){Nl=e;do{var t=Nl.alternate;if(e=Nl.return,0==(2048&Nl.effectTag)){e:{var n=t,r=Il,i=(t=Nl).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:yo(t.type)&&go();break;case 3:Hi(),bo(),(i=t.stateNode).pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(null===n||null===n.child)&&Ua(t)&&al(t);break;case 5:$i(t),r=Di(Ui.current);var l=t.type;if(null!==n&&null!=t.stateNode)Za(n,t,l,i,r),n.ref!==t.ref&&(t.effectTag|=128);else if(i){var u=Di(Ri.current);if(Ua(t)){var c=(i=t).stateNode;n=i.type;var s=i.memoizedProps,f=r;switch(c[ir]=i,c[ar]=s,l=void 0,r=c,n){case"iframe":case"object":case"embed":Sn("load",r);break;case"video":case"audio":for(c=0;c<et.length;c++)Sn(et[c],r);break;case"source":Sn("error",r);break;case"img":case"image":case"link":Sn("error",r),Sn("load",r);break;case"form":Sn("reset",r),Sn("submit",r);break;case"details":Sn("toggle",r);break;case"input":Pe(r,s),Sn("invalid",r),$n(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Sn("invalid",r),$n(f,"onChange");break;case"textarea":ze(r,s),Sn("invalid",r),$n(f,"onChange")}for(l in Hn(n,s),c=null,s)s.hasOwnProperty(l)&&(u=s[l],"children"===l?"string"==typeof u?r.textContent!==u&&(c=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(c=["children",""+u]):d.hasOwnProperty(l)&&null!=u&&$n(f,l));switch(n){case"input":Te(r),Ae(r,s,!0);break;case"textarea":Te(r),Me(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Vn)}l=c,i.updateQueue=l,(i=null!==l)&&al(t)}else{n=t,f=l,s=i,c=9===r.nodeType?r:r.ownerDocument,u===Ue&&(u=Fe(f)),u===Ue?"script"===f?((s=c.createElement("div")).innerHTML="<script><\/script>",c=s.removeChild(s.firstChild)):"string"==typeof s.is?c=c.createElement(f,{is:s.is}):(c=c.createElement(f),"select"===f&&(f=c,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):c=c.createElementNS(u,f),(s=c)[ir]=n,s[ar]=i,Ga(s,t),t.stateNode=s;var p=r,h=Bn(f=l,n=i);switch(f){case"iframe":case"object":case"embed":Sn("load",s),r=n;break;case"video":case"audio":for(r=0;r<et.length;r++)Sn(et[r],s);r=n;break;case"source":Sn("error",s),r=n;break;case"img":case"image":case"link":Sn("error",s),Sn("load",s),r=n;break;case"form":Sn("reset",s),Sn("submit",s),r=n;break;case"details":Sn("toggle",s),r=n;break;case"input":Pe(s,n),r=Ce(s,n),Sn("invalid",s),$n(p,"onChange");break;case"option":r=Ie(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=o({},n,{value:void 0}),Sn("invalid",s),$n(p,"onChange");break;case"textarea":ze(s,n),r=Le(s,n),Sn("invalid",s),$n(p,"onChange");break;default:r=n}Hn(f,r),c=void 0,u=f;var m=s,v=r;for(c in v)if(v.hasOwnProperty(c)){var y=v[c];"style"===c?Dn(m,y):"dangerouslySetInnerHTML"===c?null!=(y=y?y.__html:void 0)&&$e(m,y):"children"===c?"string"==typeof y?("textarea"!==u||""!==y)&&Ve(m,y):"number"==typeof y&&Ve(m,""+y):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(d.hasOwnProperty(c)?null!=y&&$n(p,c):null!=y&&xe(m,c,y,h))}switch(f){case"input":Te(s),Ae(s,n,!1);break;case"textarea":Te(s),Me(s);break;case"option":null!=n.value&&s.setAttribute("value",""+ke(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?je(r,!!n.multiple,s,!1):null!=n.defaultValue&&je(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Vn)}(i=Zn(l,i))&&al(t)}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(a(166));break;case 6:if(n&&null!=t.stateNode)Ja(0,t,n.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(a(166));r=Di(Ui.current),Di(Ri.current),Ua(t)?(l=(i=t).stateNode,r=i.memoizedProps,l[ir]=i,(i=l.nodeValue!==r)&&al(t)):(l=t,(i=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[ir]=l,t.stateNode=i)}break;case 11:break;case 13:if(co(Vi),i=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}i=null!==i,l=!1,null===n?void 0!==t.memoizedProps.fallback&&Ua(t):(l=null!==(r=n.memoizedState),i||null===r||null!==(r=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=r,r.nextEffect=s):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),i&&!l&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Vi.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),0!==Ul&&null!==Al&&(Du(Al,Il),Fu(Al,Ul)))),(i||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Hi();break;case 10:ii(t);break;case 9:case 14:break;case 17:yo(t.type)&&go();break;case 19:if(co(Vi),null===(i=t.memoizedState))break;if(l=0!=(64&t.effectTag),null===(s=i.rendering)){if(l)ll(i,!1);else if(0!==jl||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=Wi(n))){for(t.effectTag|=64,ll(i,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.effectTag|=4),null===i.lastEffect&&(t.firstEffect=null),t.lastEffect=i.lastEffect,i=r,l=t.child;null!==l;)n=i,(r=l).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),l=l.sibling;so(Vi,1&Vi.current|2),t=t.child;break e}n=n.sibling}}else{if(!l)if(null!==(n=Wi(s))){if(t.effectTag|=64,l=!0,null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),ll(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate){null!==(t=t.lastEffect=i.lastEffect)&&(t.nextEffect=null);break}}else Bo()>i.tailExpiration&&1<r&&(t.effectTag|=64,l=!0,ll(i,!1),t.expirationTime=t.childExpirationTime=r-1);i.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=i.last)?r.sibling=s:t.child=s,i.last=s)}if(null!==i.tail){0===i.tailExpiration&&(i.tailExpiration=Bo()+500),r=i.tail,i.rendering=r,i.tail=r.sibling,i.lastEffect=t.lastEffect,r.sibling=null,i=Vi.current,so(Vi,i=l?1&i|2:1&i),t=r;break e}break;case 20:case 21:break;default:throw Error(a(156,t.tag))}t=null}if(i=Nl,1===Il||1!==i.childExpirationTime){for(l=0,r=i.child;null!==r;)(n=r.expirationTime)>l&&(l=n),(s=r.childExpirationTime)>l&&(l=s),r=r.sibling;i.childExpirationTime=l}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Nl.firstEffect),null!==Nl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Nl.firstEffect),e.lastEffect=Nl.lastEffect),1<Nl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Nl:e.firstEffect=Nl,e.lastEffect=Nl))}else{if(null!==(t=ul(Nl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Nl.sibling))return t;Nl=e}while(null!==Nl);return 0===jl&&(jl=5),null}function yu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function gu(e){var t=$o();return Wo(99,bu.bind(null,e,t)),null}function bu(e,t){do{ku()}while(null!==ql);if(0!=(48&Ol))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=yu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Al&&(Nl=Al=null,Il=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Ol;Ol|=32,_l.current=null,Xn=Tn;var l=Kn();if(Yn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var p=0,d=-1,h=-1,m=0,v=0,y=l,g=null;t:for(;;){for(var b;y!==u||0!==s&&3!==y.nodeType||(d=p+s),y!==f||0!==c&&3!==y.nodeType||(h=p+c),3===y.nodeType&&(p+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===l)break t;if(g===u&&++m===s&&(d=p),g===f&&++v===c&&(h=p),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===d||-1===h?null:{start:d,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;Gn={focusedElem:l,selectionRange:u},Tn=!1,Hl=o;do{try{wu()}catch(e){if(null===Hl)throw Error(a(330));Tu(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);Hl=o;do{try{for(l=e,u=t;null!==Hl;){var w=Hl.effectTag;if(16&w&&Ve(Hl.stateNode,""),128&w){var k=Hl.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:gl(Hl),Hl.effectTag&=-3;break;case 6:gl(Hl),Hl.effectTag&=-3,wl(Hl.alternate,Hl);break;case 1024:Hl.effectTag&=-1025;break;case 1028:Hl.effectTag&=-1025,wl(Hl.alternate,Hl);break;case 4:wl(Hl.alternate,Hl);break;case 8:bl(l,s=Hl,u),vl(s)}Hl=Hl.nextEffect}}catch(e){if(null===Hl)throw Error(a(330));Tu(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);if(x=Gn,k=Kn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&Yn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!x.extend&&l>u&&(s=u,u=l,l=s),s=Qn(w,l),f=Qn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),l>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Gn=null,Tn=!!Xn,Xn=null,e.current=n,Hl=o;do{try{for(w=r;null!==Hl;){var E=Hl.effectTag;if(36&E){var T=Hl.alternate;switch(x=w,(k=Hl).tag){case 0:case 11:case 15:hl(16,32,k);break;case 1:var S=k.stateNode;if(4&k.effectTag)if(null===T)S.componentDidMount();else{var C=k.elementType===k.type?T.memoizedProps:Zo(k.type,T.memoizedProps);S.componentDidUpdate(C,T.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var P=k.updateQueue;null!==P&&bi(0,P,S);break;case 3:var _=k.updateQueue;if(null!==_){if(l=null,null!==k.child)switch(k.child.tag){case 5:l=k.child.stateNode;break;case 1:l=k.child.stateNode}bi(0,_,l)}break;case 5:var O=k.stateNode;null===T&&4&k.effectTag&&Zn(k.type,k.memoizedProps)&&O.focus();break;case 6:case 4:case 12:break;case 13:if(null===k.memoizedState){var A=k.alternate;if(null!==A){var N=A.memoizedState;if(null!==N){var I=N.dehydrated;null!==I&&Ct(I)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(a(163))}}if(128&E){k=void 0;var j=Hl.ref;if(null!==j){var L=Hl.stateNode;switch(Hl.tag){case 5:k=L;break;default:k=L}"function"==typeof j?j(k):j.current=k}}Hl=Hl.nextEffect}}catch(e){if(null===Hl)throw Error(a(330));Tu(Hl,e),Hl=Hl.nextEffect}}while(null!==Hl);Hl=null,Mo(),Ol=i}else e.current=n;if(Wl)Wl=!1,ql=e,Ql=t;else for(Hl=o;null!==Hl;)t=Hl.nextEffect,Hl.nextEffect=null,Hl=t;if(0===(t=e.firstPendingTime)&&(Vl=null),1073741823===t?e===Xl?Yl++:(Yl=0,Xl=e):Yl=0,"function"==typeof Pu&&Pu(n.stateNode,r),ru(e),Bl)throw Bl=!1,e=$l,$l=null,e;return 0!=(8&Ol)||Ko(),null}function wu(){for(;null!==Hl;){var e=Hl.effectTag;0!=(256&e)&&dl(Hl.alternate,Hl),0==(512&e)||Wl||(Wl=!0,qo(97,(function(){return ku(),null}))),Hl=Hl.nextEffect}}function ku(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Wo(e,xu)}}function xu(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&Ol))throw Error(a(331));var t=Ol;for(Ol|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:hl(128,0,n),hl(0,64,n)}}catch(t){if(null===e)throw Error(a(330));Tu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ol=t,Ko(),!0}function Eu(e,t,n){hi(e,t=El(e,t=cl(n,t),1073741823)),null!==(e=tu(e,1073741823))&&ru(e)}function Tu(e,t){if(3===e.tag)Eu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Eu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vl||!Vl.has(r))){hi(n,e=Tl(n,e=cl(t,e),1073741823)),null!==(n=tu(n,1073741823))&&ru(n);break}}n=n.return}}function Su(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Al===e&&Il===n?4===jl||3===jl&&1073741823===zl&&Bo()-Fl<500?uu(e,Il):Dl=!0:Uu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),ru(e)))}function Cu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Jl(t=Zl(),e,null)),null!==(e=tu(e,t))&&ru(e)}Sl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||ho.current)Ha=!0;else{if(r<n){switch(Ha=!1,t.tag){case 3:Xa(t),Da();break;case 5:if(Bi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yo(t.type)&&xo(t);break;case 4:Fi(t,t.stateNode.containerInfo);break;case 10:oi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?tl(e,t,n):(so(Vi,1&Vi.current),null!==(t=il(e,t,n))?t.sibling:null);so(Vi,1&Vi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return ol(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),so(Vi,Vi.current),!r)return null}return il(e,t,n)}Ha=!1}}else Ha=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=vo(t,po.current),li(t,n),o=sa(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,fa(),yo(r)){var i=!0;xo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&Ei(t,r,l,e),o.updater=Ti,t.stateNode=o,o._reactInternalFiber=t,_i(t,r,e,n),t=Ya(null,t,r,!0,i,n)}else t.tag=0,Ba(null,t,o,n),t=t.child;return t;case 16:if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Nu(e)?1:0;if(null!=e){if((e=e.$$typeof)===V)return 11;if(e===Q)return 14}return 2}(o),e=Zo(o,e),i){case 0:t=Qa(null,t,o,e,n);break;case 1:t=Ka(null,t,o,e,n);break;case 11:t=$a(null,t,o,e,n);break;case 14:t=Va(null,t,o,Zo(o.type,e),r,n);break;default:throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Qa(e,t,r,o=t.elementType===r?o:Zo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ka(e,t,r,o=t.elementType===r?o:Zo(r,o),n);case 3:if(Xa(t),null===(r=t.updateQueue))throw Error(a(282));if(o=null!==(o=t.memoizedState)?o.element:null,gi(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o)Da(),t=il(e,t,n);else{if((o=t.stateNode.hydrate)&&(Ia=nr(t.stateNode.containerInfo.firstChild),Na=t,o=ja=!0),o)for(n=Li(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ba(e,t,r,n),Da();t=t.child}return t;case 5:return Bi(t),null===e&&Ra(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,Jn(r,o)?l=null:null!==i&&Jn(r,i)&&(t.effectTag|=16),qa(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ba(e,t,l,n),t=t.child),t;case 6:return null===e&&Ra(t),null;case 13:return tl(e,t,n);case 4:return Fi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ji(t,null,r,n):Ba(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,$a(e,t,r,o=t.elementType===r?o:Zo(r,o),n);case 7:return Ba(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ba(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,oi(t,i=o.value),null!==l){var u=l.value;if(0===(i=Xr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!ho.current){t=il(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=pi(n,null)).tag=2,hi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ai(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}Ba(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,li(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Ba(e,t,r,n),t.child;case 14:return i=Zo(o=t.type,t.pendingProps),Va(e,t,o,i=Zo(o.type,i),r,n);case 15:return Wa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Zo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yo(r)?(e=!0,xo(t)):e=!1,li(t,n),Ci(t,r,o),_i(t,r,o,n),Ya(null,t,r,!0,e,n);case 19:return ol(e,t,n)}throw Error(a(156,t.tag))};var Pu=null,_u=null;function Ou(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Au(e,t,n,r){return new Ou(e,t,n,r)}function Nu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Iu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ju(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Nu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case U:return Lu(n.children,o,i,t);case $:l=8,o|=7;break;case D:l=8,o|=1;break;case F:return(e=Au(12,n,t,8|o)).elementType=F,e.type=F,e.expirationTime=i,e;case W:return(e=Au(13,n,t,o)).type=W,e.elementType=W,e.expirationTime=i,e;case q:return(e=Au(19,n,t,o)).elementType=q,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case H:l=10;break e;case B:l=9;break e;case V:l=11;break e;case Q:l=14;break e;case K:l=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Au(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Lu(e,t,n,r){return(e=Au(7,e,r,t)).expirationTime=n,e}function zu(e,t,n){return(e=Au(6,e,null,t)).expirationTime=n,e}function Ru(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Mu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Uu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Du(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Fu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Hu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Bu(e,t,n,r){var o=t.current,i=Zl(),l=ki.suspense;i=Jl(i,o,l);e:if(n){t:{if(tt(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=ko(n,c,u);break e}}n=u}else n=fo;return null===t.context?t.context=n:t.pendingContext=n,(t=pi(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),hi(o,t),eu(o,i),i}function $u(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Vu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Wu(e,t){Vu(e,t),(e=e.alternate)&&Vu(e,t)}function qu(e,t,n){var r=new Mu(e,t,n=null!=n&&!0===n.hydrate),o=Au(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,e[lr]=r.current,n&&0!==t&&function(e){var t=Ln(e);vt.forEach((function(n){zn(n,e,t)})),yt.forEach((function(n){zn(n,e,t)}))}(9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ku(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=$u(a);l.call(e)}}Bu(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=$u(a);u.call(e)}}lu((function(){Bu(t,a,e,o)}))}return $u(a)}function Yu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:M,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Xu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(a(200));return Yu(e,t,null,n)}qu.prototype.render=function(e,t){Bu(e,this._internalRoot,null,void 0===t?null:t)},qu.prototype.unmount=function(e){var t=this._internalRoot,n=void 0===e?null:e,r=t.containerInfo;Bu(null,t,null,(function(){r[lr]=null,null!==n&&n()}))},it=function(e){if(13===e.tag){var t=Go(Zl(),150,100);eu(e,t),Wu(e,t)}},at=function(e){if(13===e.tag){Zl();var t=Xo++;eu(e,t),Wu(e,t)}},lt=function(e){if(13===e.tag){var t=Zl();eu(e,t=Jl(t,e,null)),Wu(e,t)}},ee=function(e,t,n){switch(t){case"input":if(Oe(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=fr(r);if(!o)throw Error(a(90));Se(r),Oe(r,o)}}}break;case"textarea":Re(e,n);break;case"select":null!=(t=n.value)&&je(e,!!n.multiple,t,!1)}},ae=au,le=function(e,t,n,r){var o=Ol;Ol|=4;try{return Wo(98,e.bind(null,t,n,r))}finally{0===(Ol=o)&&Ko()}},ue=function(){0==(49&Ol)&&(function(){if(null!==Kl){var e=Kl;Kl=null,e.forEach((function(e,t){Hu(t,e),ru(t)})),Ko()}}(),ku())},ce=function(e,t){var n=Ol;Ol|=2;try{return e(t)}finally{0===(Ol=n)&&Ko()}};var Gu,Zu,Ju={createPortal:Xu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=ot(t))?null:e.stateNode},hydrate:function(e,t,n){if(!Qu(t))throw Error(a(200));return Ku(null,e,t,!0,n)},render:function(e,t,n){if(!Qu(t))throw Error(a(200));return Ku(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!Qu(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Ku(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!Qu(e))throw Error(a(40));return!!e._reactRootContainer&&(lu((function(){Ku(null,null,e,!1,(function(){e._reactRootContainer=null,e[lr]=null}))})),!0)},unstable_createPortal:function(){return Xu.apply(void 0,arguments)},unstable_batchedUpdates:au,flushSync:function(e,t){if(0!=(48&Ol))throw Error(a(187));var n=Ol;Ol|=1;try{return Wo(99,e.bind(null,t))}finally{Ol=n,Ko()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[cr,sr,fr,N.injectEventPluginsByName,p,jt,function(e){P(e,It)},oe,ie,An,A,ku,{current:!1}]}};Zu=(Gu={findFiberByHostInstance:ur,bundleType:0,version:"16.12.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Pu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},_u=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Gu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:j.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=ot(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Zu?Zu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var ec={default:Ju},tc=ec&&Ju||ec;e.exports=tc.default||tc},function(e,t,n){"use strict";e.exports=n(34)},function(e,t,n){"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if(Object.defineProperty(t,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var p=window.performance,d=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof p&&"function"==typeof p.now)t.unstable_now=function(){return p.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,b=null,w=-1,k=5,x=0;a=function(){return t.unstable_now()>=x},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,T=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+k;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},o=function(e,n){w=h((function(){e(t.unstable_now())}),n)},i=function(){m(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>_(a,n))void 0!==u&&0>_(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],A=[],N=1,I=null,j=3,L=!1,z=!1,R=!1;function M(e){for(var t=C(A);null!==t;){if(null===t.callback)P(A);else{if(!(t.startTime<=e))break;P(A),t.sortIndex=t.expirationTime,S(O,t)}t=C(A)}}function U(e){if(R=!1,M(e),!z)if(null!==C(O))z=!0,r(D);else{var t=C(A);null!==t&&o(U,t.startTime-e)}}function D(e,n){z=!1,R&&(R=!1,i()),L=!0;var r=j;try{for(M(n),I=C(O);null!==I&&(!(I.expirationTime>n)||e&&!a());){var l=I.callback;if(null!==l){I.callback=null,j=I.priorityLevel;var u=l(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?I.callback=u:I===C(O)&&P(O),M(n)}else P(O);I=C(O)}if(null!==I)var c=!0;else{var s=C(A);null!==s&&o(U,s.startTime-n),c=!1}return c}finally{I=null,j=r,L=!1}}function F(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var H=l;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:F(e)}else a=F(e),u=l;return e={id:N++,callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,S(A,e),null===C(O)&&e===C(A)&&(R?i():R=!0,o(U,u-l))):(e.sortIndex=a,S(O,e),z||L||(z=!0,r(D))),e},t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_shouldYield=function(){var e=t.unstable_now();M(e);var n=C(O);return n!==I&&null!==I&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<I.expirationTime||a()},t.unstable_requestPaint=H,t.unstable_continueExecution=function(){z||L||(z=!0,r(D))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_Profiling=null},function(e,t,n){"use strict";var r=n(36),o=n(37),i=n(38),a=n(44),l=n(46),u=n(47);e.exports=function e(){var t=[],n=a(),g={},b=!1,w=-1;return k.data=function(e,t){if(l(e))return 2===arguments.length?(m("data",b),g[e]=t,k):s.call(g,e)&&g[e]||null;if(e)return m("data",b),g=e,k;return g},k.freeze=x,k.attachers=t,k.use=function(e){var n;if(m("use",b),null==e);else if("function"==typeof e)l.apply(null,arguments);else{if("object"!=typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?a(e):o(e)}n&&(g.settings=r(g.settings||{},n));return k;function o(e){a(e.plugins),e.settings&&(n=r(n||{},e.settings))}function i(e){if("function"==typeof e)l(e);else{if("object"!=typeof e)throw new Error("Expected usable value, not `"+e+"`");"length"in e?l.apply(null,e):o(e)}}function a(e){var t,n;if(null==e);else{if(!("object"==typeof e&&"length"in e))throw new Error("Expected a list of plugins, not `"+e+"`");for(t=e.length,n=-1;++n<t;)i(e[n])}}function l(e,n){var o=E(e);o?(u(o[1])&&u(n)&&(n=r(o[1],n)),o[1]=n):t.push(c.call(arguments))}},k.parse=function(e){var t,n=i(e);if(x(),d("parse",t=k.Parser),p(t))return new t(String(n),n).parse();return t(String(n),n)},k.stringify=function(e,t){var n,r=i(t);if(x(),h("stringify",n=k.Compiler),v(e),p(n))return new n(e,r).compile();return n(e,r)},k.run=T,k.runSync=function(e,t){var n,r=!1;return T(e,t,(function(e,t){r=!0,o(e),n=t})),y("runSync","run",r),n},k.process=S,k.processSync=function(e){var t,n=!1;return x(),d("processSync",k.Parser),h("processSync",k.Compiler),S(t=i(e),(function(e){n=!0,o(e)})),y("processSync","process",n),t},k;function k(){for(var n=e(),o=t.length,i=-1;++i<o;)n.use.apply(null,t[i]);return n.data(r(!0,{},g)),n}function x(){var e,r,o,i;if(b)return k;for(;++w<t.length;)r=(e=t[w])[0],null,!1!==(o=e[1])&&(!0===o&&(e[1]=void 0),"function"==typeof(i=r.apply(k,e.slice(1)))&&n.use(i));return b=!0,w=1/0,k}function E(e){for(var n,r=t.length,o=-1;++o<r;)if((n=t[o])[0]===e)return n}function T(e,t,r){if(v(e),x(),r||"function"!=typeof t||(r=t,t=null),!r)return new Promise(o);function o(o,a){n.run(e,i(t),(function(t,n,i){n=n||e,t?a(t):o?o(n):r(null,n,i)}))}o(null,r)}function S(e,t){if(x(),d("process",k.Parser),h("process",k.Compiler),!t)return new Promise(n);function n(n,r){var o=i(e);f.run(k,{file:o},(function(e){e?r(e):n?n(o):t(null,o)}))}n(null,t)}}().freeze();var c=[].slice,s={}.hasOwnProperty,f=a().use((function(e,t){t.tree=e.parse(t.file)})).use((function(e,t,n){e.run(t.tree,t.file,(function(e,r,o){e?n(e):(t.tree=r,t.file=o,n())}))})).use((function(e,t){t.file.contents=e.stringify(t.tree,t.file)}));function p(e){return"function"==typeof e&&function(e){var t;for(t in e)return!0;return!1}(e.prototype)}function d(e,t){if("function"!=typeof t)throw new Error("Cannot `"+e+"` without `Parser`")}function h(e,t){if("function"!=typeof t)throw new Error("Cannot `"+e+"` without `Compiler`")}function m(e,t){if(t)throw new Error(["Cannot invoke `"+e+"` on a frozen processor.\nCreate a new ","processor first, by invoking it: use `processor()` instead of ","`processor`."].join(""))}function v(e){if(!e||!l(e.type))throw new Error("Expected node, got `"+e+"`")}function y(e,t,n){if(!n)throw new Error("`"+e+"` finished async. Use `"+t+"` instead")}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=Object.defineProperty,a=Object.getOwnPropertyDescriptor,l=function(e){return"function"==typeof Array.isArray?Array.isArray(e):"[object Array]"===o.call(e)},u=function(e){if(!e||"[object Object]"!==o.call(e))return!1;var t,n=r.call(e,"constructor"),i=e.constructor&&e.constructor.prototype&&r.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!n&&!i)return!1;for(t in e);return void 0===t||r.call(e,t)},c=function(e,t){i&&"__proto__"===t.name?i(e,t.name,{enumerable:!0,configurable:!0,value:t.newValue,writable:!0}):e[t.name]=t.newValue},s=function(e,t){if("__proto__"===t){if(!r.call(e,t))return;if(a)return a(e,t).value}return e[t]};e.exports=function e(){var t,n,r,o,i,a,f=arguments[0],p=1,d=arguments.length,h=!1;for("boolean"==typeof f&&(h=f,f=arguments[1]||{},p=2),(null==f||"object"!=typeof f&&"function"!=typeof f)&&(f={});p<d;++p)if(null!=(t=arguments[p]))for(n in t)r=s(f,n),f!==(o=s(t,n))&&(h&&o&&(u(o)||(i=l(o)))?(i?(i=!1,a=r&&l(r)?r:[]):a=r&&u(r)?r:{},c(f,{name:n,newValue:e(h,a,o)})):void 0!==o&&c(f,{name:n,newValue:o}));return f}},function(e,t,n){"use strict";e.exports=function(e){if(e)throw e}},function(e,t,n){"use strict";var r=n(39),o=n(41);e.exports=o;var i=o.prototype;function a(e,t,n){var o=this.path,i=new r(e,t,n);return o&&(i.name=o+":"+i.name,i.file=o),i.fatal=!1,this.messages.push(i),i}i.message=a,i.info=function(){var e=this.message.apply(this,arguments);return e.fatal=null,e},i.fail=function(){var e=this.message.apply(this,arguments);throw e.fatal=!0,e},i.warn=a},function(e,t,n){"use strict";var r=n(40);function o(){}e.exports=a,o.prototype=Error.prototype,a.prototype=new o;var i=a.prototype;function a(e,t,n){var o,i,a;"string"==typeof t&&(n=t,t=null),o=function(e){var t,n=[null,null];"string"==typeof e&&(-1===(t=e.indexOf(":"))?n[1]=e:(n[0]=e.slice(0,t),n[1]=e.slice(t+1)));return n}(n),i=r(t)||"1:1",a={start:{line:null,column:null},end:{line:null,column:null}},t&&t.position&&(t=t.position),t&&(t.start?(a=t,t=t.start):a.start=t),e.stack&&(this.stack=e.stack,e=e.message),this.message=e,this.name=i,this.reason=e,this.line=t?t.line:null,this.column=t?t.column:null,this.location=a,this.source=o[0],this.ruleId=o[1]}i.file="",i.name="",i.reason="",i.message="",i.stack="",i.fatal=null,i.column=null,i.line=null},function(e,t,n){"use strict";var r={}.hasOwnProperty;function o(e){return e&&"object"==typeof e||(e={}),a(e.line)+":"+a(e.column)}function i(e){return e&&"object"==typeof e||(e={}),o(e.start)+"-"+o(e.end)}function a(e){return e&&"number"==typeof e?e:1}e.exports=function(e){if(!e||"object"!=typeof e)return null;if(r.call(e,"position")||r.call(e,"type"))return i(e.position);if(r.call(e,"start")||r.call(e,"end"))return i(e);if(r.call(e,"line")||r.call(e,"column"))return o(e);return null}},function(e,t,n){"use strict";(function(t){var r=n(20),o=n(42),i=n(43);e.exports=c;var a={}.hasOwnProperty,l=c.prototype;l.toString=function(e){var t=this.contents||"";return i(t)?t.toString(e):String(t)};var u=["history","path","basename","stem","extname","dirname"];function c(e){var n,r,o;if(e){if("string"==typeof e||i(e))e={contents:e};else if("message"in e&&"messages"in e)return e}else e={};if(!(this instanceof c))return new c(e);for(this.data={},this.messages=[],this.history=[],this.cwd=t.cwd(),r=-1,o=u.length;++r<o;)n=u[r],a.call(e,n)&&(this[n]=e[n]);for(n in e)-1===u.indexOf(n)&&(this[n]=e[n])}function s(e,t){if(-1!==e.indexOf(r.sep))throw new Error("`"+t+"` cannot be a path: did not expect `"+r.sep+"`")}function f(e,t){if(!e)throw new Error("`"+t+"` cannot be empty")}function p(e,t){if(!e)throw new Error("Setting `"+t+"` requires `path` to be set too")}Object.defineProperty(l,"path",{get:function(){return this.history[this.history.length-1]},set:function(e){f(e,"path"),e!==this.path&&this.history.push(e)}}),Object.defineProperty(l,"dirname",{get:function(){return"string"==typeof this.path?r.dirname(this.path):void 0},set:function(e){p(this.path,"dirname"),this.path=r.join(e||"",this.basename)}}),Object.defineProperty(l,"basename",{get:function(){return"string"==typeof this.path?r.basename(this.path):void 0},set:function(e){f(e,"basename"),s(e,"basename"),this.path=r.join(this.dirname||"",e)}}),Object.defineProperty(l,"extname",{get:function(){return"string"==typeof this.path?r.extname(this.path):void 0},set:function(e){var t=e||"";if(s(t,"extname"),p(this.path,"extname"),t){if("."!==t.charAt(0))throw new Error("`extname` must start with `.`");if(-1!==t.indexOf(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=o(this.path,t)}}),Object.defineProperty(l,"stem",{get:function(){return"string"==typeof this.path?r.basename(this.path,this.extname):void 0},set:function(e){f(e,"stem"),s(e,"stem"),this.path=r.join(this.dirname||"",e+(this.extname||""))}})}).call(this,n(19))},function(e,t,n){"use strict";var r=n(20);e.exports=function(e,t){if("string"!=typeof e)return e;if(0===e.length)return e;var n=r.basename(e,r.extname(e))+t;return r.join(r.dirname(e),n)}},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){"use strict";var r=n(45);e.exports=i,i.wrap=r;var o=[].slice;function i(){var e=[],t={run:function(){var t=-1,n=o.call(arguments,0,-1),i=arguments[arguments.length-1];if("function"!=typeof i)throw new Error("Expected function as last argument, not "+i);function a(l){var u=e[++t],c=o.call(arguments,0),s=c.slice(1),f=n.length,p=-1;if(l)i(l);else{for(;++p<f;)null!==s[p]&&void 0!==s[p]||(s[p]=n[p]);n=s,u?r(u,a).apply(null,n):i.apply(null,[null].concat(n))}}a.apply(null,[null].concat(n))},use:function(n){if("function"!=typeof n)throw new Error("Expected `fn` to be a function, not "+n);return e.push(n),t}};return t}},function(e,t,n){"use strict";var r=[].slice;e.exports=function(e,t){var n;return function(){var t,a=r.call(arguments,0),l=e.length>a.length;l&&a.push(o);try{t=e.apply(null,a)}catch(e){if(l&&n)throw e;return o(e)}l||(t&&"function"==typeof t.then?t.then(i,o):t instanceof Error?o(t):i(t))};function o(){n||(n=!0,t.apply(null,arguments))}function i(e){o(null,e)}}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return"[object String]"===n.call(e)}},function(e,t,n){"use strict";var r=Object.prototype.toString;e.exports=function(e){var t;return"[object Object]"===r.call(e)&&(null===(t=Object.getPrototypeOf(e))||t===Object.getPrototypeOf({}))}},function(e,t,n){"use strict";var r=n(49),o=n(2),i=n(51);function a(e){var t=r(i);t.prototype.options=o(t.prototype.options,this.data("settings"),e),this.Parser=t}e.exports=a,a.Parser=i},function(e,t,n){"use strict";var r=n(2),o=n(50);e.exports=function(e){var t,n,i;for(n in o(l,e),o(a,l),t=l.prototype)(i=t[n])&&"object"==typeof i&&(t[n]="concat"in i?i.concat():r(i));return l;function a(t){return e.apply(this,t)}function l(){return this instanceof l?e.apply(this,arguments):new a(arguments)}}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){"use strict";var r=n(2),o=n(52),i=n(53),a=n(54),l=n(55),u=n(61);function c(e,t){this.file=t,this.offset={},this.options=r(this.options),this.setOptions({}),this.inList=!1,this.inBlock=!1,this.inLink=!1,this.atStart=!0,this.toOffset=i(t).toOffset,this.unescape=a(this,"escape"),this.decode=l(this)}e.exports=c;var s=c.prototype;function f(e){var t,n=[];for(t in e)n.push(t);return n}s.setOptions=n(62),s.parse=n(65),s.options=n(22),s.exitStart=o("atStart",!0),s.enterList=o("inList",!1),s.enterLink=o("inLink",!1),s.enterBlock=o("inBlock",!1),s.interruptParagraph=[["thematicBreak"],["atxHeading"],["fencedCode"],["blockquote"],["html"],["setextHeading",{commonmark:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],s.interruptList=[["atxHeading",{pedantic:!1}],["fencedCode",{pedantic:!1}],["thematicBreak",{pedantic:!1}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],s.interruptBlockquote=[["indentedCode",{commonmark:!0}],["fencedCode",{commonmark:!0}],["atxHeading",{commonmark:!0}],["setextHeading",{commonmark:!0}],["thematicBreak",{commonmark:!0}],["html",{commonmark:!0}],["list",{commonmark:!0}],["definition",{commonmark:!1}],["footnote",{commonmark:!1}]],s.blockTokenizers={newline:n(69),indentedCode:n(70),fencedCode:n(71),blockquote:n(72),atxHeading:n(73),thematicBreak:n(74),list:n(75),setextHeading:n(77),html:n(78),footnote:n(79),definition:n(81),table:n(82),paragraph:n(83)},s.inlineTokenizers={escape:n(84),autoLink:n(86),url:n(87),html:n(89),link:n(90),reference:n(91),strong:n(92),emphasis:n(94),deletion:n(97),code:n(99),break:n(101),text:n(103)},s.blockMethods=f(s.blockTokenizers),s.inlineMethods=f(s.inlineTokenizers),s.tokenizeBlock=u("block"),s.tokenizeInline=u("inline"),s.tokenizeFactory=u},function(e,t,n){"use strict";e.exports=function(e,t,n){return function(){var r=n||this,o=r[e];return r[e]=!t,function(){r[e]=o}}}},function(e,t,n){"use strict";function r(e){return function(t){var n=-1,r=e.length;if(t<0)return{};for(;++n<r;)if(e[n]>t)return{line:n+1,column:t-(e[n-1]||0)+1,offset:t};return{}}}function o(e){return function(t){var n=t&&t.line,r=t&&t.column;if(!isNaN(n)&&!isNaN(r)&&n-1 in e)return(e[n-2]||0)+r-1||0;return-1}}e.exports=function(e){var t=function(e){var t=[],n=e.indexOf("\n");for(;-1!==n;)t.push(n+1),n=e.indexOf("\n",n+1);return t.push(e.length+1),t}(String(e));return{toPosition:r(t),toOffset:o(t)}}},function(e,t,n){"use strict";e.exports=function(e,t){return function(n){var r,o=0,i=n.indexOf("\\"),a=e[t],l=[];for(;-1!==i;)l.push(n.slice(o,i)),o=i+1,(r=n.charAt(o))&&-1!==a.indexOf(r)||l.push("\\"),i=n.indexOf("\\",o);return l.push(n.slice(o)),l.join("")}}},function(e,t,n){"use strict";var r=n(2),o=n(11);e.exports=function(e){return i.raw=function(e,i,a){return o(e,r(a,{position:t(i),warning:n}))},i;function t(t){for(var n=e.offset,r=t.line,o=[];++r&&r in n;)o.push((n[r]||0)+1);return{start:t,indent:o}}function n(t,n,r){3!==r&&e.file.message(t,n)}function i(r,i,a){o(r,{position:t(i),warning:n,text:a,reference:a,textContext:e,referenceContext:e})}}},function(e){e.exports=JSON.parse('{"AElig":"Æ","AMP":"&","Aacute":"Á","Acirc":"Â","Agrave":"À","Aring":"Å","Atilde":"Ã","Auml":"Ä","COPY":"©","Ccedil":"Ç","ETH":"Ð","Eacute":"É","Ecirc":"Ê","Egrave":"È","Euml":"Ë","GT":">","Iacute":"Í","Icirc":"Î","Igrave":"Ì","Iuml":"Ï","LT":"<","Ntilde":"Ñ","Oacute":"Ó","Ocirc":"Ô","Ograve":"Ò","Oslash":"Ø","Otilde":"Õ","Ouml":"Ö","QUOT":"\\"","REG":"®","THORN":"Þ","Uacute":"Ú","Ucirc":"Û","Ugrave":"Ù","Uuml":"Ü","Yacute":"Ý","aacute":"á","acirc":"â","acute":"´","aelig":"æ","agrave":"à","amp":"&","aring":"å","atilde":"ã","auml":"ä","brvbar":"¦","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","curren":"¤","deg":"°","divide":"÷","eacute":"é","ecirc":"ê","egrave":"è","eth":"ð","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","iacute":"í","icirc":"î","iexcl":"¡","igrave":"ì","iquest":"¿","iuml":"ï","laquo":"«","lt":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","ntilde":"ñ","oacute":"ó","ocirc":"ô","ograve":"ò","ordf":"ª","ordm":"º","oslash":"ø","otilde":"õ","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\\"","raquo":"»","reg":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","thorn":"þ","times":"×","uacute":"ú","ucirc":"û","ugrave":"ù","uml":"¨","uuml":"ü","yacute":"ý","yen":"¥","yuml":"ÿ"}')},function(e){e.exports=JSON.parse('{"0":"�","128":"€","130":"‚","131":"ƒ","132":"„","133":"…","134":"†","135":"‡","136":"ˆ","137":"‰","138":"Š","139":"‹","140":"Œ","142":"Ž","145":"‘","146":"’","147":"“","148":"”","149":"•","150":"–","151":"—","152":"˜","153":"™","154":"š","155":"›","156":"œ","158":"ž","159":"Ÿ"}')},function(e,t,n){"use strict";e.exports=function(e){var t="string"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=102||t>=65&&t<=70||t>=48&&t<=57}},function(e,t,n){"use strict";var r=n(21),o=n(6);e.exports=function(e){return r(e)||o(e)}},function(e,t,n){"use strict";var r;e.exports=function(e){var t,n="&"+e+";";if((r=r||document.createElement("i")).innerHTML=n,59===(t=r.textContent).charCodeAt(t.length-1)&&"semi"!==e)return!1;return t!==n&&t}},function(e,t,n){"use strict";e.exports=function(e){return function(t,n){var i,a,l,u,c,s,f=this,p=f.offset,d=[],h=f[e+"Methods"],m=f[e+"Tokenizers"],v=n.line,y=n.column;if(!t)return d;k.now=b,k.file=f.file,g("");for(;t;){for(i=-1,a=h.length,c=!1;++i<a&&(u=h[i],!(l=m[u])||l.onlyAtStart&&!f.atStart||l.notInList&&f.inList||l.notInBlock&&f.inBlock||l.notInLink&&f.inLink||(s=t.length,l.apply(f,[k,t]),!(c=s!==t.length))););c||f.file.fail(new Error("Infinite loop"),k.now())}return f.eof=b(),d;function g(e){for(var t=-1,n=e.indexOf("\n");-1!==n;)v++,t=n,n=e.indexOf("\n",n+1);-1===t?y+=e.length:y=e.length-t,v in p&&(-1!==t?y+=p[v]:y<=p[v]&&(y=p[v]+1))}function b(){var e={line:v,column:y};return e.offset=f.toOffset(e),e}function w(e){this.start=e,this.end=b()}function k(e){var n,i=function(){var e=[],t=v+1;return function(){for(var n=v+1;t<n;)e.push((p[t]||0)+1),t++;return e}}(),a=(n=b(),function(e,t){var r=e.position,o=r?r.start:n,i=[],a=r&&r.end.line,l=n.line;if(e.position=new w(o),r&&t&&r.indent){if(i=r.indent,a<l){for(;++a<l;)i.push((p[a]||0)+1);i.push(n.column)}t=i.concat(t)}return e.position.indent=t||[],e}),l=b();return function(e){t.substring(0,e.length)!==e&&f.file.fail(new Error("Incorrectly eaten value: please report this warning on http://git.io/vg5Ft"),b())}(e),u.reset=c,c.test=s,u.test=s,t=t.substring(e.length),g(e),i=i(),u;function u(e,t){return a(function(e,t){var n=t?t.children:d,i=n[n.length-1];return i&&e.type===i.type&&e.type in r&&o(i)&&o(e)&&(e=r[e.type].call(f,i,e)),e!==i&&n.push(e),f.atStart&&0!==d.length&&f.exitStart(),e}(a(e),t),i)}function c(){var n=u.apply(null,arguments);return v=l.line,y=l.column,t=e+t,n}function s(){var n=a({});return v=l.line,y=l.column,t=e+t,n.position}}}};var r={text:function(e,t){return e.value+=t.value,e},blockquote:function(e,t){if(this.options.commonmark)return t;return e.children=e.children.concat(t.children),e}};function o(e){var t,n;return"text"!==e.type||!e.position||(t=e.position.start,n=e.position.end,t.line!==n.line||n.column-t.column===e.value.length)}},function(e,t,n){"use strict";var r=n(2),o=n(63),i=n(22);e.exports=function(e){var t,n,a=this.options;if(null==e)e={};else{if("object"!=typeof e)throw new Error("Invalid value `"+e+"` for setting `options`");e=r(e)}for(t in i){if(null==(n=e[t])&&(n=a[t]),"blocks"!==t&&"boolean"!=typeof n||"blocks"===t&&"object"!=typeof n)throw new Error("Invalid value `"+n+"` for setting `options."+t+"`");e[t]=n}return this.options=e,this.escape=o(e),this}},function(e,t,n){"use strict";e.exports=a;var r=["\\","`","*","{","}","[","]","(",")","#","+","-",".","!","_",">"],o=r.concat(["~","|"]),i=o.concat(["\n",'"',"$","%","&","'",",","/",":",";","<","=","?","@","^"]);function a(e){var t=e||{};return t.commonmark?i:t.gfm?o:r}a.default=r,a.gfm=o,a.commonmark=i},function(e){e.exports=JSON.parse('["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","legend","li","link","main","menu","menuitem","meta","nav","noframes","ol","optgroup","option","p","param","pre","section","source","title","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"]')},function(e,t,n){"use strict";var r=n(2),o=n(66);e.exports=function(){var e,t=String(this.file),n={line:1,column:1,offset:0},a=r(n);65279===(t=t.replace(i,"\n")).charCodeAt(0)&&(t=t.slice(1),a.column++,a.offset++);e={type:"root",children:this.tokenizeBlock(t,a),position:{start:n,end:this.eof||r(n)}},this.options.position||o(e,!0);return e};var i=/\r\n|\r/g},function(e,t,n){"use strict";var r=n(7);function o(e){delete e.position}function i(e){e.position=void 0}e.exports=function(e,t){return r(e,t?o:i),e}},function(e,t,n){"use strict";e.exports=o;var r=n(68);function o(e,t,n,o){var a;function l(e,r,u){var c,s=[];return(t&&!a(e,r,u[u.length-1]||null)||!1!==(s=i(n(e,u)))[0])&&e.children&&"skip"!==s[0]&&!1===(c=i(function(e,t){var n,r=o?-1:1,i=(o?e.length:-1)+r;for(;i>-1&&i<e.length;){if(!1===(n=l(e[i],i,t))[0])return n;i="number"==typeof n[1]?n[1]:i+r}}(e.children,u.concat(e))))[0]?c:s}"function"==typeof t&&"function"!=typeof n&&(o=n,n=t,t=null),a=r(t),l(e,null,[])}function i(e){return null!==e&&"object"==typeof e&&"length"in e?e:"number"==typeof e?[!0,e]:[e]}o.CONTINUE=!0,o.SKIP="skip",o.EXIT=!1},function(e,t,n){"use strict";function r(e){if("string"==typeof e)return function(e){return function(t){return Boolean(t&&t.type===e)}}(e);if(null==e)return a;if("object"==typeof e)return("length"in e?i:o)(e);if("function"==typeof e)return e;throw new Error("Expected function, string, or object as test")}function o(e){return function(t){var n;for(n in e)if(t[n]!==e[n])return!1;return!0}}function i(e){var t=function(e){for(var t=[],n=e.length,o=-1;++o<n;)t[o]=r(e[o]);return t}(e),n=t.length;return function(){var e=-1;for(;++e<n;)if(t[e].apply(this,arguments))return!0;return!1}}function a(){return!0}e.exports=r},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t,n){var o,i,a,l,u=t.charAt(0);if("\n"!==u)return;if(n)return!0;l=1,o=t.length,i=u,a="";for(;l<o&&(u=t.charAt(l),r(u));)a+=u,"\n"===u&&(i+=a,a=""),l++;e(i)}},function(e,t,n){"use strict";var r=n(12),o=n(13);e.exports=function(e,t,n){var r,a,l,u=-1,c=t.length,s="",f="",p="",d="";for(;++u<c;)if(r=t.charAt(u),l)if(l=!1,s+=p,f+=d,p="",d="","\n"===r)p=r,d=r;else for(s+=r,f+=r;++u<c;){if(!(r=t.charAt(u))||"\n"===r){d=r,p=r;break}s+=r,f+=r}else if(" "===r&&t.charAt(u+1)===r&&t.charAt(u+2)===r&&t.charAt(u+3)===r)p+=i,u+=3,l=!0;else if("\t"===r)p+=r,l=!0;else{for(a="";"\t"===r||" "===r;)a+=r,r=t.charAt(++u);if("\n"!==r)break;p+=a+r,d+=r}if(f)return!!n||e(s)({type:"code",lang:null,value:o(f)})};var i=r(" ",4)},function(e,t,n){"use strict";var r=n(13);e.exports=function(e,t,n){var o,i,a,l,u,c,s,f,p,d,h,m=this.options,v=t.length+1,y=0,g="";if(!m.gfm)return;for(;y<v&&(" "===(a=t.charAt(y))||"\t"===a);)g+=a,y++;if(d=y,"~"!==(a=t.charAt(y))&&"`"!==a)return;y++,i=a,o=1,g+=a;for(;y<v&&(a=t.charAt(y))===i;)g+=a,o++,y++;if(o<3)return;for(;y<v&&(" "===(a=t.charAt(y))||"\t"===a);)g+=a,y++;l="",u="";for(;y<v&&"\n"!==(a=t.charAt(y))&&"~"!==a&&"`"!==a;)" "===a||"\t"===a?u+=a:(l+=u+a,u=""),y++;if((a=t.charAt(y))&&"\n"!==a)return;if(n)return!0;(h=e.now()).column+=g.length,h.offset+=g.length,g+=l,l=this.decode.raw(this.unescape(l),h),u&&(g+=u);u="",f="",p="",c="",s="";for(;y<v;)if(a=t.charAt(y),c+=f,s+=p,f="",p="","\n"===a){for(c?(f+=a,p+=a):g+=a,u="",y++;y<v&&" "===(a=t.charAt(y));)u+=a,y++;if(f+=u,p+=u.slice(d),!(u.length>=4)){for(u="";y<v&&(a=t.charAt(y))===i;)u+=a,y++;if(f+=u,p+=u,!(u.length<o)){for(u="";y<v&&(" "===(a=t.charAt(y))||"\t"===a);)f+=a,p+=a,y++;if(!a||"\n"===a)break}}}else c+=a,p+=a,y++;return e(g+=c+f)({type:"code",lang:l||null,value:r(s)})}},function(e,t,n){"use strict";var r=n(3),o=n(14);e.exports=function(e,t,n){var i,a,l,u,c,s,f,p,d,h=this.offset,m=this.blockTokenizers,v=this.interruptBlockquote,y=e.now(),g=y.line,b=t.length,w=[],k=[],x=[],E=0;for(;E<b&&(" "===(a=t.charAt(E))||"\t"===a);)E++;if(">"!==t.charAt(E))return;if(n)return!0;E=0;for(;E<b;){for(u=t.indexOf("\n",E),f=E,p=!1,-1===u&&(u=b);E<b&&(" "===(a=t.charAt(E))||"\t"===a);)E++;if(">"===t.charAt(E)?(E++,p=!0," "===t.charAt(E)&&E++):E=f,c=t.slice(E,u),!p&&!r(c)){E=f;break}if(!p&&(l=t.slice(E),o(v,m,this,[e,l,!0])))break;s=f===E?c:t.slice(f,u),x.push(E-f),w.push(s),k.push(c),E=u+1}E=-1,b=x.length,i=e(w.join("\n"));for(;++E<b;)h[g]=(h[g]||0)+x[E],g++;return d=this.enterBlock(),k=this.tokenizeBlock(k.join("\n"),y),d(),i({type:"blockquote",children:k})}},function(e,t,n){"use strict";e.exports=function(e,t,n){var r,o,i,a=this.options,l=t.length+1,u=-1,c=e.now(),s="",f="";for(;++u<l;){if(" "!==(r=t.charAt(u))&&"\t"!==r){u--;break}s+=r}i=0;for(;++u<=l;){if("#"!==(r=t.charAt(u))){u--;break}s+=r,i++}if(i>6)return;if(!i||!a.pedantic&&"#"===t.charAt(u+1))return;l=t.length+1,o="";for(;++u<l;){if(" "!==(r=t.charAt(u))&&"\t"!==r){u--;break}o+=r}if(!a.pedantic&&0===o.length&&r&&"\n"!==r)return;if(n)return!0;s+=o,o="",f="";for(;++u<l&&(r=t.charAt(u))&&"\n"!==r;)if(" "===r||"\t"===r||"#"===r){for(;" "===r||"\t"===r;)o+=r,r=t.charAt(++u);for(;"#"===r;)o+=r,r=t.charAt(++u);for(;" "===r||"\t"===r;)o+=r,r=t.charAt(++u);u--}else f+=o+r,o="";return c.column+=s.length,c.offset+=s.length,e(s+=f+o)({type:"heading",depth:i,children:this.tokenizeInline(f,c)})}},function(e,t,n){"use strict";e.exports=function(e,t,n){var r,o,i,a,l=-1,u=t.length+1,c="";for(;++l<u&&("\t"===(r=t.charAt(l))||" "===r);)c+=r;if("*"!==r&&"-"!==r&&"_"!==r)return;o=r,c+=r,i=1,a="";for(;++l<u;)if((r=t.charAt(l))===o)i++,c+=a+o,a="";else{if(" "!==r)return i>=3&&(!r||"\n"===r)?(c+=a,!!n||e(c)({type:"thematicBreak"})):void 0;a+=r}}},function(e,t,n){"use strict";var r=n(3),o=n(12),i=n(6),a=n(23),l=n(76),u=n(14);e.exports=function(e,t,n){var o,a,l,c,s,f,p,d,g,b,w,k,x,E,T,S,C,P,_,O,A,N,I,j,L=this.options.commonmark,z=this.options.pedantic,R=this.blockTokenizers,M=this.interruptList,U=0,D=t.length,F=null,H=0;for(;U<D;){if("\t"===(c=t.charAt(U)))H+=4-H%4;else{if(" "!==c)break;H++}U++}if(H>=4)return;if(c=t.charAt(U),o=L?v:m,!0===h[c])s=c,l=!1;else{for(l=!0,a="";U<D&&(c=t.charAt(U),i(c));)a+=c,U++;if(c=t.charAt(U),!a||!0!==o[c])return;F=parseInt(a,10),s=c}if(" "!==(c=t.charAt(++U))&&"\t"!==c)return;if(n)return!0;U=0,E=[],T=[],S=[];for(;U<D;){for(f=t.indexOf("\n",U),p=U,d=!1,j=!1,-1===f&&(f=D),I=U+4,H=0;U<D;){if("\t"===(c=t.charAt(U)))H+=4-H%4;else{if(" "!==c)break;H++}U++}if(H>=4&&(j=!0),C&&H>=C.indent&&(j=!0),c=t.charAt(U),g=null,!j){if(!0===h[c])g=c,U++,H++;else{for(a="";U<D&&(c=t.charAt(U),i(c));)a+=c,U++;c=t.charAt(U),U++,a&&!0===o[c]&&(g=c,H+=a.length+1)}if(g)if("\t"===(c=t.charAt(U)))H+=4-H%4,U++;else if(" "===c){for(I=U+4;U<I&&" "===t.charAt(U);)U++,H++;U===I&&" "===t.charAt(U)&&(U-=3,H-=3)}else"\n"!==c&&""!==c&&(g=null)}if(g){if(!z&&s!==g)break;d=!0}else L||j||" "!==t.charAt(p)?L&&C&&(j=H>=C.indent||H>4):j=!0,d=!1,U=p;if(w=t.slice(p,f),b=p===U?w:t.slice(U,f),("*"===g||"_"===g||"-"===g)&&R.thematicBreak.call(this,e,w,!0))break;if(k=x,x=!r(b).length,j&&C)C.value=C.value.concat(S,w),T=T.concat(S,w),S=[];else if(d)0!==S.length&&(C.value.push(""),C.trail=S.concat()),C={value:[w],indent:H,trail:[]},E.push(C),T=T.concat(S,w),S=[];else if(x){if(k)break;S.push(w)}else{if(k)break;if(u(M,R,this,[e,w,!0]))break;C.value=C.value.concat(S,w),T=T.concat(S,w),S=[]}U=f+1}A=e(T.join("\n")).reset({type:"list",ordered:l,start:F,loose:null,children:[]}),P=this.enterList(),_=this.enterBlock(),O=!1,U=-1,D=E.length;for(;++U<D;)C=E[U].value.join("\n"),N=e.now(),(C=e(C)(y(this,C,N),A)).loose&&(O=!0),C=E[U].trail.join("\n"),U!==D-1&&(C+="\n"),e(C);return P(),_(),A.loose=O,A};var c=/\n\n(?!\s*$)/,s=/^\[([ \t]|x|X)][ \t]/,f=/^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/,p=/^([ \t]*)([*+-]|\d+[.)])([ \t]+)/,d=/^( {1,4}|\t)?/gm,h={"*":!0,"+":!0,"-":!0},m={".":!0},v={};function y(e,t,n){var r,o,i=e.offset,a=e.options.pedantic?g:b,l=null;return t=a.apply(null,arguments),e.options.gfm&&(r=t.match(s))&&(o=r[0].length,l="x"===r[1].toLowerCase(),i[n.line]+=o,t=t.slice(o)),{type:"listItem",loose:c.test(t)||"\n"===t.charAt(t.length-1),checked:l,children:e.tokenizeBlock(t,n)}}function g(e,t,n){var r=e.offset,o=n.line;return t=t.replace(p,i),o=n.line,t.replace(d,i);function i(e){return r[o]=(r[o]||0)+e.length,o++,""}}function b(e,t,n){var r,i,u,c,s,p,d,h=e.offset,m=n.line;for(c=(t=t.replace(f,(function(e,t,n,a,l){i=t+n+a,u=l,Number(n)<10&&i.length%2==1&&(n=" "+n);return(r=t+o(" ",n.length)+a)+u}))).split("\n"),(s=l(t,a(r).indent).split("\n"))[0]=u,h[m]=(h[m]||0)+i.length,m++,p=0,d=c.length;++p<d;)h[m]=(h[m]||0)+c[p].length-s[p].length,m++;return s.join("\n")}v["."]=!0,v[")"]=!0},function(e,t,n){"use strict";var r=n(3),o=n(12),i=n(23);e.exports=function(e,t){var n,a,l,u,c=e.split("\n"),s=c.length+1,f=1/0,p=[];c.unshift(o(" ",t)+"!");for(;s--;)if(a=i(c[s]),p[s]=a.stops,0!==r(c[s]).length){if(!a.indent){f=1/0;break}a.indent>0&&a.indent<f&&(f=a.indent)}if(f!==1/0)for(s=c.length;s--;){for(l=p[s],n=f;n&&!(n in l);)n--;u=0!==r(c[s]).length&&f&&n!==f?"\t":"",c[s]=u+c[s].slice(n in l?l[n]+1:0)}return c.shift(),c.join("\n")}},function(e,t,n){"use strict";e.exports=function(e,t,n){var o,i,a,l,u,c=e.now(),s=t.length,f=-1,p="";for(;++f<s;){if(" "!==(a=t.charAt(f))||f>=3){f--;break}p+=a}o="",i="";for(;++f<s;){if("\n"===(a=t.charAt(f))){f--;break}" "===a||"\t"===a?i+=a:(o+=i+a,i="")}if(c.column+=p.length,c.offset+=p.length,p+=o+i,a=t.charAt(++f),l=t.charAt(++f),"\n"!==a||!r[l])return;p+=a,i=l,u=r[l];for(;++f<s;){if((a=t.charAt(f))!==l){if("\n"!==a)return;f--;break}i+=a}if(n)return!0;return e(p+i)({type:"heading",depth:u,children:this.tokenizeInline(o,c)})};var r={};r["="]=1,r["-"]=2},function(e,t,n){"use strict";var r=n(24).openCloseTag;e.exports=function(e,t,n){var o,i,a,l,u,c,s,f=this.options.blocks,p=t.length,d=0,h=[[/^<(script|pre|style)(?=(\s|>|$))/i,/<\/(script|pre|style)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Za-z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+f.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(r.source+"\\s*$"),/^$/,!1]];for(;d<p&&("\t"===(l=t.charAt(d))||" "===l);)d++;if("<"!==t.charAt(d))return;o=-1===(o=t.indexOf("\n",d+1))?p:o,i=t.slice(d,o),a=-1,u=h.length;for(;++a<u;)if(h[a][0].test(i)){c=h[a];break}if(!c)return;if(n)return c[2];if(d=o,!c[1].test(i))for(;d<p;){if(o=-1===(o=t.indexOf("\n",d+1))?p:o,i=t.slice(d+1,o),c[1].test(i)){i&&(d=o);break}d=o}return s=t.slice(0,d),e(s)({type:"html",value:s})}},function(e,t,n){"use strict";var r=n(1),o=n(15);e.exports=a,a.notInList=!0,a.notInBlock=!0;var i=/^( {4}|\t)?/gm;function a(e,t,n){var a,l,u,c,s,f,p,d,h,m,v,y,g=this.offset;if(this.options.footnotes){for(a=0,l=t.length,u="",c=e.now(),s=c.line;a<l&&(h=t.charAt(a),r(h));)u+=h,a++;if("["===t.charAt(a)&&"^"===t.charAt(a+1)){for(a=(u+="[^").length,p="";a<l&&"]"!==(h=t.charAt(a));)"\\"===h&&(p+=h,a++,h=t.charAt(a)),p+=h,a++;if(p&&"]"===t.charAt(a)&&":"===t.charAt(a+1)){if(n)return!0;for(m=o(p),a=(u+=p+"]:").length;a<l&&("\t"===(h=t.charAt(a))||" "===h);)u+=h,a++;for(c.column+=u.length,c.offset+=u.length,p="",f="",d="";a<l;){if("\n"===(h=t.charAt(a))){for(d=h,a++;a<l&&"\n"===(h=t.charAt(a));)d+=h,a++;for(p+=d,d="";a<l&&" "===(h=t.charAt(a));)d+=h,a++;if(0===d.length)break;p+=d}p&&(f+=p,p=""),f+=h,a++}return u+=f,f=f.replace(i,(function(e){return g[s]=(g[s]||0)+e.length,s++,""})),v=e(u),y=this.enterBlock(),f=this.tokenizeBlock(f,c),y(),v({type:"footnoteDefinition",identifier:m,children:f})}}}}},function(e,t,n){"use strict";e.exports=function(e){return String(e).replace(/\s+/g," ")}},function(e,t,n){"use strict";var r=n(1),o=n(15);e.exports=i,i.notInList=!0,i.notInBlock=!0;function i(e,t,n){for(var r,i,u,c,s,f,p,d,h=this.options.commonmark,m=0,v=t.length,y="";m<v&&(" "===(c=t.charAt(m))||"\t"===c);)y+=c,m++;if("["===(c=t.charAt(m))){for(m++,y+=c,u="";m<v&&"]"!==(c=t.charAt(m));)"\\"===c&&(u+=c,m++,c=t.charAt(m)),u+=c,m++;if(u&&"]"===t.charAt(m)&&":"===t.charAt(m+1)){for(f=u,m=(y+=u+"]:").length,u="";m<v&&("\t"===(c=t.charAt(m))||" "===c||"\n"===c);)y+=c,m++;if(u="",r=y,"<"===(c=t.charAt(m))){for(m++;m<v&&a(c=t.charAt(m));)u+=c,m++;if((c=t.charAt(m))===a.delimiter)y+="<"+u+c,m++;else{if(h)return;m-=u.length+1,u=""}}if(!u){for(;m<v&&l(c=t.charAt(m));)u+=c,m++;y+=u}if(u){for(p=u,u="";m<v&&("\t"===(c=t.charAt(m))||" "===c||"\n"===c);)u+=c,m++;if(s=null,'"'===(c=t.charAt(m))?s='"':"'"===c?s="'":"("===c&&(s=")"),s){if(!u)return;for(m=(y+=u+c).length,u="";m<v&&(c=t.charAt(m))!==s;){if("\n"===c){if(m++,"\n"===(c=t.charAt(m))||c===s)return;u+="\n"}u+=c,m++}if((c=t.charAt(m))!==s)return;i=y,y+=u+c,m++,d=u,u=""}else u="",m=y.length;for(;m<v&&("\t"===(c=t.charAt(m))||" "===c);)y+=c,m++;return(c=t.charAt(m))&&"\n"!==c?void 0:!!n||(r=e(r).test().end,p=this.decode.raw(this.unescape(p),r,{nonTerminated:!1}),d&&(i=e(i).test().end,d=this.decode.raw(this.unescape(d),i)),e(y)({type:"definition",identifier:o(f),title:d||null,url:p}))}}}}function a(e){return">"!==e&&"["!==e&&"]"!==e}function l(e){return"["!==e&&"]"!==e&&!r(e)}a.delimiter=">"},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t,n){var o,i,a,l,u,c,s,f,p,d,h,m,v,y,g,b,w,k,x,E,T,S,C,P;if(!this.options.gfm)return;o=0,k=0,c=t.length+1,s=[];for(;o<c;){if(S=t.indexOf("\n",o),C=t.indexOf("|",o+1),-1===S&&(S=t.length),-1===C||C>S){if(k<2)return;break}s.push(t.slice(o,S)),k++,o=S+1}l=s.join("\n"),i=s.splice(1,1)[0]||[],o=0,c=i.length,k--,a=!1,h=[];for(;o<c;){if("|"===(p=i.charAt(o))){if(d=null,!1===a){if(!1===P)return}else h.push(a),a=!1;P=!1}else if("-"===p)d=!0,a=a||null;else if(":"===p)a="left"===a?"center":d&&null===a?"right":"left";else if(!r(p))return;o++}!1!==a&&h.push(a);if(h.length<1)return;if(n)return!0;w=-1,E=[],T=e(l).reset({type:"table",align:h,children:E});for(;++w<k;){for(x=s[w],u={type:"tableRow",children:[]},w&&e("\n"),e(x).reset(u,T),c=x.length+1,o=0,f="",m="",v=!0,y=null,g=null;o<c;)if("\t"!==(p=x.charAt(o))&&" "!==p){if(""===p||"|"===p)if(v)e(p);else{if(p&&g){f+=p,o++;continue}!m&&!p||v||(l=m,f.length>1&&(p?(l+=f.slice(0,f.length-1),f=f.charAt(f.length-1)):(l+=f,f="")),b=e.now(),e(l)({type:"tableCell",children:this.tokenizeInline(m,b)},u)),e(f+p),f="",m=""}else if(f&&(m+=f,f=""),m+=p,"\\"===p&&o!==c-2&&(m+=x.charAt(o+1),o++),"`"===p){for(y=1;x.charAt(o+1)===p;)m+=p,o++,y++;g?y>=g&&(g=0):g=y}v=!1,o++}else m?f+=p:e(p),o++;w||e("\n"+i)}return T}},function(e,t,n){"use strict";var r=n(3),o=n(6),i=n(13),a=n(14);e.exports=function(e,t,n){var l,u,c,s,f,p=this.options,d=p.commonmark,h=p.gfm,m=this.blockTokenizers,v=this.interruptParagraph,y=t.indexOf("\n"),g=t.length;for(;y<g;){if(-1===y){y=g;break}if("\n"===t.charAt(y+1))break;if(d){for(s=0,l=y+1;l<g;){if("\t"===(c=t.charAt(l))){s=4;break}if(" "!==c)break;s++,l++}if(s>=4){y=t.indexOf("\n",y+1);continue}}if(u=t.slice(y+1),a(v,m,this,[e,u,!0]))break;if(m.list.call(this,e,u,!0)&&(this.inList||d||h&&!o(r.left(u).charAt(0))))break;if(l=y,-1!==(y=t.indexOf("\n",y+1))&&""===r(t.slice(l,y))){y=l;break}}if(u=t.slice(0,y),""===r(u))return e(u),null;if(n)return!0;return f=e.now(),u=i(u),e(u)({type:"paragraph",children:this.tokenizeInline(u,f)})}},function(e,t,n){"use strict";var r=n(85);function o(e,t,n){var r,o;if("\\"===t.charAt(0)&&(r=t.charAt(1),-1!==this.escape.indexOf(r)))return!!n||(o="\n"===r?{type:"break"}:{type:"text",value:r},e("\\"+r)(o))}e.exports=o,o.locator=r},function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("\\",t)}},function(e,t,n){"use strict";var r=n(1),o=n(11),i=n(25);e.exports=l,l.locator=i,l.notInLink=!0;var a="mailto:".length;function l(e,t,n){var i,l,u,c,s,f,p,d,h,m,v;if("<"===t.charAt(0)){for(this,i="",l=t.length,u=0,c="",f=!1,p="",u++,i="<";u<l&&(s=t.charAt(u),!(r(s)||">"===s||"@"===s||":"===s&&"/"===t.charAt(u+1)));)c+=s,u++;if(c){if(p+=c,c="",p+=s=t.charAt(u),u++,"@"===s)f=!0;else{if(":"!==s||"/"!==t.charAt(u+1))return;p+="/",u++}for(;u<l&&(s=t.charAt(u),!r(s)&&">"!==s);)c+=s,u++;if(s=t.charAt(u),c&&">"===s)return!!n||(h=p+=c,i+=p+s,(d=e.now()).column++,d.offset++,f&&("mailto:"===p.slice(0,a).toLowerCase()?(h=h.substr(a),d.column+=a,d.offset+=a):p="mailto:"+p),m=this.inlineTokenizers,this.inlineTokenizers={text:m.text},v=this.enterLink(),h=this.tokenizeInline(h,d),this.inlineTokenizers=m,v(),e(i)({type:"link",title:null,url:o(p,{nonTerminated:!1}),children:h}))}}}},function(e,t,n){"use strict";var r=n(11),o=n(1),i=n(88);e.exports=u,u.locator=i,u.notInLink=!0;var a=["http://","https://","mailto:"],l=a.length;function u(e,t,n){var i,u,c,s,f,p,d,h,m,v,y,g;if(this.options.gfm){for(i="",s=-1,h=l;++s<h;)if(p=a[s],(d=t.slice(0,p.length)).toLowerCase()===p){i=d;break}if(i){for(s=i.length,h=t.length,m="",v=0;s<h&&(c=t.charAt(s),!o(c)&&"<"!==c)&&("."!==c&&","!==c&&":"!==c&&";"!==c&&'"'!==c&&"'"!==c&&")"!==c&&"]"!==c||(y=t.charAt(s+1))&&!o(y))&&("("!==c&&"["!==c||v++,")"!==c&&"]"!==c||!(--v<0));)m+=c,s++;if(m){if(u=i+=m,"mailto:"===p){if(-1===(f=m.indexOf("@"))||f===h-1)return;u=u.substr("mailto:".length)}return!!n||(g=this.enterLink(),u=this.tokenizeInline(u,e.now()),g(),e(i)({type:"link",title:null,url:r(i,{nonTerminated:!1}),children:u}))}}}}},function(e,t,n){"use strict";e.exports=function(e,t){var n,o=r.length,i=-1,a=-1;if(!this.options.gfm)return-1;for(;++i<o;)-1!==(n=e.indexOf(r[i],t))&&(n<a||-1===a)&&(a=n);return a};var r=["https://","http://","mailto:"]},function(e,t,n){"use strict";var r=n(21),o=n(25),i=n(24).tag;e.exports=u,u.locator=o;var a=/^<a /i,l=/^<\/a>/i;function u(e,t,n){var o,u,c=t.length;if(!("<"!==t.charAt(0)||c<3)&&(o=t.charAt(1),(r(o)||"?"===o||"!"===o||"/"===o)&&(u=t.match(i))))return!!n||(u=u[0],!this.inLink&&a.test(u)?this.inLink=!0:this.inLink&&l.test(u)&&(this.inLink=!1),e(u)({type:"html",value:u}))}},function(e,t,n){"use strict";var r=n(1),o=n(26);e.exports=u,u.locator=o;var i={}.hasOwnProperty,a={'"':'"',"'":"'"},l={};function u(e,t,n){var o,u,c,s,f,p,d,h,m,v,y,g,b,w,k,x,E,T,S,C="",P=0,_=t.charAt(0),O=this.options.pedantic,A=this.options.commonmark,N=this.options.gfm;if("!"===_&&(m=!0,C=_,_=t.charAt(++P)),"["===_&&(m||!this.inLink)){for(C+=_,k="",P++,g=t.length,w=0,(E=e.now()).column+=P,E.offset+=P;P<g;){if(p=_=t.charAt(P),"`"===_){for(u=1;"`"===t.charAt(P+1);)p+=_,P++,u++;c?u>=c&&(c=0):c=u}else if("\\"===_)P++,p+=t.charAt(P);else if(c&&!N||"["!==_){if((!c||N)&&"]"===_){if(!w){if(!O)for(;P<g&&(_=t.charAt(P+1),r(_));)p+=_,P++;if("("!==t.charAt(P+1))return;p+="(",o=!0,P++;break}w--}}else w++;k+=p,p="",P++}if(o){for(v=k,C+=k+p,P++;P<g&&(_=t.charAt(P),r(_));)C+=_,P++;if(_=t.charAt(P),h=A?l:a,k="",s=C,"<"===_){for(P++,s+="<";P<g&&">"!==(_=t.charAt(P));){if(A&&"\n"===_)return;k+=_,P++}if(">"!==t.charAt(P))return;C+="<"+k+">",x=k,P++}else{for(_=null,p="";P<g&&(_=t.charAt(P),!p||!i.call(h,_));){if(r(_)){if(!O)break;p+=_}else{if("("===_)w++;else if(")"===_){if(0===w)break;w--}k+=p,p="","\\"===_&&(k+="\\",_=t.charAt(++P)),k+=_}P++}x=k,P=(C+=k).length}for(k="";P<g&&(_=t.charAt(P),r(_));)k+=_,P++;if(_=t.charAt(P),C+=k,k&&i.call(h,_))if(P++,C+=_,k="",y=h[_],f=C,A){for(;P<g&&(_=t.charAt(P))!==y;)"\\"===_&&(k+="\\",_=t.charAt(++P)),P++,k+=_;if((_=t.charAt(P))!==y)return;for(b=k,C+=k+_,P++;P<g&&(_=t.charAt(P),r(_));)C+=_,P++}else for(p="";P<g;){if((_=t.charAt(P))===y)d&&(k+=y+p,p=""),d=!0;else if(d){if(")"===_){C+=k+y+p,b=k;break}r(_)?p+=_:(k+=y+p+_,p="",d=!1)}else k+=_;P++}if(")"===t.charAt(P))return!!n||(C+=")",x=this.decode.raw(this.unescape(x),e(s).test().end,{nonTerminated:!1}),b&&(f=e(f).test().end,b=this.decode.raw(this.unescape(b),f)),S={type:m?"image":"link",title:b||null,url:x},m?S.alt=this.decode.raw(this.unescape(v),E)||null:(T=this.enterLink(),S.children=this.tokenizeInline(v,E),T()),e(C)(S))}}}l['"']='"',l["'"]="'",l["("]=")"},function(e,t,n){"use strict";var r=n(1),o=n(26),i=n(15);e.exports=a,a.locator=o;function a(e,t,n){var o,a,l,u,c,s,f,p,d=t.charAt(0),h=0,m=t.length,v="",y="",g="link",b="shortcut";if("!"===d&&(g="image",y=d,d=t.charAt(++h)),"["===d){if(h++,y+=d,s="",this.options.footnotes&&"^"===t.charAt(h)){if("image"===g)return;y+="^",h++,g="footnote"}for(p=0;h<m;){if("["===(d=t.charAt(h)))f=!0,p++;else if("]"===d){if(!p)break;p--}"\\"===d&&(s+="\\",d=t.charAt(++h)),s+=d,h++}if(v=s,o=s,"]"===(d=t.charAt(h))){for(h++,v+=d,s="";h<m&&(d=t.charAt(h),r(d));)s+=d,h++;if(d=t.charAt(h),"footnote"!==g&&"["===d){for(a="",s+=d,h++;h<m&&"["!==(d=t.charAt(h))&&"]"!==d;)"\\"===d&&(a+="\\",d=t.charAt(++h)),a+=d,h++;"]"===(d=t.charAt(h))?(b=a?"full":"collapsed",s+=a+d,h++):a="",v+=s,s=""}else{if(!o)return;a=o}if("full"===b||!f)return v=y+v,"link"===g&&this.inLink?null:!!n||("footnote"===g&&-1!==o.indexOf(" ")?e(v)({type:"footnote",children:this.tokenizeInline(o,e.now())}):((l=e.now()).column+=y.length,l.offset+=y.length,u={type:g+"Reference",identifier:i(a="full"===b?a:o)},"link"!==g&&"image"!==g||(u.referenceType=b),"link"===g?(c=this.enterLink(),u.children=this.tokenizeInline(o,l),c()):"image"===g&&(u.alt=this.decode.raw(this.unescape(o),l)||null),e(v)(u)))}}}},function(e,t,n){"use strict";var r=n(3),o=n(1),i=n(93);e.exports=a,a.locator=i;function a(e,t,n){var i,a,l,u,c,s,f,p=0,d=t.charAt(p);if(!("*"!==d&&"_"!==d||t.charAt(++p)!==d||(a=this.options.pedantic,c=(l=d)+l,s=t.length,p++,u="",d="",a&&o(t.charAt(p)))))for(;p<s;){if(f=d,!((d=t.charAt(p))!==l||t.charAt(p+1)!==l||a&&o(f))&&(d=t.charAt(p+2))!==l){if(!r(u))return;return!!n||((i=e.now()).column+=2,i.offset+=2,e(c+u+c)({type:"strong",children:this.tokenizeInline(u,i)}))}a||"\\"!==d||(u+=d,d=t.charAt(++p)),u+=d,p++}}},function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("**",t),r=e.indexOf("__",t);if(-1===r)return n;if(-1===n)return r;return r<n?r:n}},function(e,t,n){"use strict";var r=n(3),o=n(95),i=n(1),a=n(96);e.exports=l,l.locator=a;function l(e,t,n){var a,l,u,c,s,f,p,d=0,h=t.charAt(d);if(!("*"!==h&&"_"!==h||(l=this.options.pedantic,s=h,u=h,f=t.length,d++,c="",h="",l&&i(t.charAt(d)))))for(;d<f;){if(p=h,!((h=t.charAt(d))!==u||l&&i(p))){if((h=t.charAt(++d))!==u){if(!r(c)||p===u)return;if(!l&&"_"===u&&o(h)){c+=u;continue}return!!n||((a=e.now()).column++,a.offset++,e(s+c+u)({type:"emphasis",children:this.tokenizeInline(c,a)}))}c+=u}l||"\\"!==h||(c+=h,h=t.charAt(++d)),c+=h,d++}}},function(e,t,n){"use strict";e.exports=function(e){return o.test("number"==typeof e?r(e):e.charAt(0))};var r=String.fromCharCode,o=/\w/},function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("*",t),r=e.indexOf("_",t);if(-1===r)return n;if(-1===n)return r;return r<n?r:n}},function(e,t,n){"use strict";var r=n(1),o=n(98);e.exports=i,i.locator=o;function i(e,t,n){var o,i,a,l="",u="",c="",s="";if(this.options.gfm&&"~"===t.charAt(0)&&"~"===t.charAt(1)&&!r(t.charAt(2)))for(o=1,i=t.length,(a=e.now()).column+=2,a.offset+=2;++o<i;){if(!("~"!==(l=t.charAt(o))||"~"!==u||c&&r(c)))return!!n||e("~~"+s+"~~")({type:"delete",children:this.tokenizeInline(s,a)});s+=u,c=u,u=l}}},function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("~~",t)}},function(e,t,n){"use strict";var r=n(1),o=n(100);e.exports=i,i.locator=o;function i(e,t,n){for(var o,i,a,l,u,c,s,f,p=t.length,d=0,h="",m="";d<p&&"`"===t.charAt(d);)h+="`",d++;if(h){for(u=h,l=d,h="",f=t.charAt(d),a=0;d<p;){if(c=f,f=t.charAt(d+1),"`"===c?(a++,m+=c):(a=0,h+=c),a&&"`"!==f){if(a===l){u+=h+m,s=!0;break}h+=m,m=""}d++}if(!s){if(l%2!=0)return;h=""}if(n)return!0;for(o="",i="",p=h.length,d=-1;++d<p;)c=h.charAt(d),r(c)?i+=c:(i&&(o&&(o+=i),i=""),o+=c);return e(u)({type:"inlineCode",value:o})}}},function(e,t,n){"use strict";e.exports=function(e,t){return e.indexOf("`",t)}},function(e,t,n){"use strict";var r=n(102);e.exports=o,o.locator=r;function o(e,t,n){for(var r,o=t.length,i=-1,a="";++i<o;){if("\n"===(r=t.charAt(i))){if(i<2)return;return!!n||e(a+=r)({type:"break"})}if(" "!==r)return;a+=r}}},function(e,t,n){"use strict";e.exports=function(e,t){var n=e.indexOf("\n",t);for(;n>t&&" "===e.charAt(n-1);)n--;return n}},function(e,t,n){"use strict";e.exports=function(e,t,n){var r,o,i,a,l,u,c,s,f,p;if(n)return!0;r=this.inlineMethods,a=r.length,o=this.inlineTokenizers,i=-1,f=t.length;for(;++i<a;)"text"!==(s=r[i])&&o[s]&&((c=o[s].locator)||e.file.fail("Missing locator: `"+s+"`"),-1!==(u=c.call(this,t,1))&&u<f&&(f=u));l=t.slice(0,f),p=e.now(),this.decode(l,p,(function(t,n,r){e(r||t)({type:"text",value:t})}))}},function(e,t,n){e.exports=n(105)()},function(e,t,n){"use strict";var r=n(106);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){var r=n(108);e.exports=function(){return function(e){return r(e,"list",(function(e,t){var n,r,o=0;for(n=0,r=t.length;n<r;n++)"list"===t[n].type&&(o+=1);for(n=0,r=e.children.length;n<r;n++){var i=e.children[n];i.index=n,i.ordered=e.ordered}e.depth=o})),e}}},function(e,t,n){"use strict";e.exports=function(e,t,n){var r=[];"function"==typeof t&&(n=t,t=null);function o(e){var i;return t&&e.type!==t||(i=n(e,r.concat())),e.children&&!1!==i?function(e,t){var n,i=e.length,a=-1;r.push(t);for(;++a<i;)if((n=e[a])&&!1===o(n))return!1;return r.pop(),!0}(e.children,e):i}o(e)}},function(e,t,n){"use strict";var r=n(7),o=/^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\s*\/?>$/i,i=/^<(\/?)([a-z]+)\s*>$/;e.exports=function(e){var t,n;return r(e,"html",(function(e,r,a){n!==a&&(t=[],n=a);var l=function(e){var t=e.value.match(o);return!!t&&t[1]}(e);if(l)return a.children.splice(r,1,{type:"virtualHtml",tag:l,position:e.position}),!0;var u=function(e,t){var n=e.value.match(i);return!!n&&{tag:n[2],opening:!n[1],node:e}}(e);if(!u)return!0;var c=function(e,t){var n=e.length;for(;n--;)if(e[n].tag===t)return e.splice(n,1)[0];return!1}(t,u.tag);return c?a.children.splice(r,0,function(e,t,n){var r=n.children.indexOf(e.node),o=n.children.indexOf(t.node),i=n.children.splice(r,o-r+1).slice(1,-1);return{type:"virtualHtml",children:i,tag:e.tag,position:{start:e.node.position.start,end:t.node.position.end,indent:[]}}}(u,c,a)):u.opening||t.push(u),!0}),!0),e}},function(e,t,n){"use strict";var r=n(7);function o(e,t,n,r){if("remove"===r)n.children.splice(t,1);else if("unwrap"===r){var o=[t,1];e.children&&(o=o.concat(e.children)),Array.prototype.splice.apply(n.children,o)}}t.ofType=function(e,t){return function(t){return e.forEach((function(e){return r(t,e,n,!0)})),t};function n(e,n,r){r&&o(e,n,r,t)}},t.ifNotMatch=function(e,t){return function(e){return r(e,n,!0),e};function n(n,r,i){i&&!e(n,r,i)&&o(n,r,i,t)}}},function(e,t,n){"use strict";var r=n(0),o=n(2),i=n(16),a={start:{line:1,column:1,offset:0},end:{line:1,column:1,offset:0}};function l(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,c=t.renderers[e.type];void 0===e.position&&(e.position=n.node&&n.node.position||a);var s=e.position.start,f=[e.type,s.line,s.column,o].join("-");if(!i.isValidElementType(c))throw new Error("Renderer for type `".concat(e.type,"` not defined or is not renderable"));var p=u(e,f,t,c,n,o);return r.createElement(c,p,p.children||d()||void 0);function d(){return e.children&&e.children.map((function(n,r){return l(n,t,{node:e,props:p},r)}))}}function u(e,t,n,i,a,u){var s,f={key:t},p="string"==typeof i;n.sourcePos&&e.position&&(f["data-sourcepos"]=[(s=e.position).start.line,":",s.start.column,"-",s.end.line,":",s.end.column].map(String).join("")),n.rawSourcePos&&!p&&(f.sourcePosition=e.position),n.includeNodeIndex&&a.node&&a.node.children&&!p&&(f.index=a.node.children.indexOf(e),f.parentChildCount=a.node.children.length);var d=null!==e.identifier&&void 0!==e.identifier?n.definitions[e.identifier]||{}:null;switch(e.type){case"root":c(f,{className:n.className});break;case"text":f.nodeKey=t,f.children=e.value;break;case"heading":f.level=e.depth;break;case"list":f.start=e.start,f.ordered=e.ordered,f.tight=!e.loose,f.depth=e.depth;break;case"listItem":f.checked=e.checked,f.tight=!e.loose,f.ordered=e.ordered,f.index=e.index,f.children=function(e,t){if(e.loose)return e.children;if(t.node&&e.index>0&&t.node.children[e.index-1].loose)return e.children;return function(e){return e.children.reduce((function(e,t){return e.concat("paragraph"===t.type?t.children||[]:[t])}),[])}(e)}(e,a).map((function(t,r){return l(t,n,{node:e,props:f},r)}));break;case"definition":c(f,{identifier:e.identifier,title:e.title,url:e.url});break;case"code":c(f,{language:e.lang&&e.lang.split(/\s/,1)[0]});break;case"inlineCode":f.children=e.value,f.inline=!0;break;case"link":c(f,{title:e.title||void 0,target:"function"==typeof n.linkTarget?n.linkTarget(e.url,e.children,e.title):n.linkTarget,href:n.transformLinkUri?n.transformLinkUri(e.url,e.children,e.title):e.url});break;case"image":c(f,{alt:e.alt||void 0,title:e.title||void 0,src:n.transformImageUri?n.transformImageUri(e.url,e.children,e.title,e.alt):e.url});break;case"linkReference":c(f,o(d,{href:n.transformLinkUri?n.transformLinkUri(d.href):d.href}));break;case"imageReference":c(f,{src:n.transformImageUri&&d.href?n.transformImageUri(d.href,e.children,d.title,e.alt):d.href,title:d.title||void 0,alt:e.alt||void 0});break;case"table":case"tableHead":case"tableBody":f.columnAlignment=e.align;break;case"tableRow":f.isHeader="tableHead"===a.node.type,f.columnAlignment=a.props.columnAlignment;break;case"tableCell":c(f,{isHeader:a.props.isHeader,align:a.props.columnAlignment[u]});break;case"virtualHtml":f.tag=e.tag;break;case"html":f.isBlock=e.position.start.line!==e.position.end.line,f.escapeHtml=n.escapeHtml,f.skipHtml=n.skipHtml;break;case"parsedHtml":var h;e.children&&(h=e.children.map((function(t,r){return l(t,n,{node:e,props:f},r)}))),f.escapeHtml=n.escapeHtml,f.skipHtml=n.skipHtml,f.element=function(e,t){var n=e.element;if(Array.isArray(n)){var o=r.Fragment||"div";return r.createElement(o,null,n)}if(n.props.children||t){var i=r.Children.toArray(n.props.children).concat(t);return r.cloneElement(n,null,i)}return r.cloneElement(n,null)}(e,h);break;default:c(f,o(e,{type:void 0,position:void 0,children:void 0}))}return!p&&e.value&&(f.value=e.value),f}function c(e,t){for(var n in t)void 0!==t[n]&&(e[n]=t[n])}e.exports=l},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,p=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.fundamental"):60117,b=r?Symbol.for("react.responder"):60118,w=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case p:case a:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case d:case y:case v:case c:return e;default:return t}}case i:return t}}}function x(e){return k(e)===p}t.typeOf=k,t.AsyncMode=f,t.ConcurrentMode=p,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=d,t.Fragment=a,t.Lazy=y,t.Memo=v,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===p||e===u||e===l||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w)},t.isAsyncMode=function(e){return x(e)||k(e)===f},t.isConcurrentMode=x,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===y},t.isMemo=function(e){return k(e)===v},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===u},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===h}},function(e,t,n){"use strict";var r=n(7);function o(e){var t=e.children;e.children=[{type:"tableHead",align:e.align,children:[t[0]],position:t[0].position}],t.length>1&&e.children.push({type:"tableBody",align:e.align,children:t.slice(1),position:{start:t[1].position.start,end:t[t.length-1].position.end}})}e.exports=function(e){return r(e,"table",o),e}},function(e,t,n){"use strict";e.exports=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(t.children||[]).reduce((function(t,n){return"definition"===n.type&&(t[n.identifier]={href:n.url,title:n.title}),e(n,t)}),n)}},function(e,t,n){"use strict";var r=["http","https","mailto","tel"];e.exports=function(e){var t=(e||"").trim(),n=t.charAt(0);if("#"===n||"/"===n)return t;var o=t.indexOf(":");if(-1===o)return t;for(var i=r.length,a=-1;++a<i;){var l=r[a];if(o===l.length&&t.slice(0,l.length).toLowerCase()===l)return t}return-1!==(a=t.indexOf("?"))&&o>a||-1!==(a=t.indexOf("#"))&&o>a?t:"javascript:void(0)"}},function(e,t,n){"use strict";var r=n(2),o=n(0),i=parseInt((o.version||"16").slice(0,2),10)>=16,a=o.createElement;function l(e,t){return a(e,u(t),t.children)}function u(e){return e["data-sourcepos"]?{"data-sourcepos":e["data-sourcepos"]}:{}}e.exports={break:"br",paragraph:"p",emphasis:"em",strong:"strong",thematicBreak:"hr",blockquote:"blockquote",delete:"del",link:"a",image:"img",linkReference:"a",imageReference:"img",table:l.bind(null,"table"),tableHead:l.bind(null,"thead"),tableBody:l.bind(null,"tbody"),tableRow:l.bind(null,"tr"),tableCell:function(e){var t=e.align?{textAlign:e.align}:void 0,n=u(e);return a(e.isHeader?"th":"td",t?r({style:t},n):n,e.children)},root:function(e){var t=!e.className,n=t&&o.Fragment||"div";return a(n,t?null:e,e.children)},text:function(e){return i?e.children:a("span",null,e.children)},list:function(e){var t=u(e);null!==e.start&&1!==e.start&&void 0!==e.start&&(t.start=e.start.toString());return a(e.ordered?"ol":"ul",t,e.children)},listItem:function(e){var t=null;if(null!==e.checked&&void 0!==e.checked){var n=e.checked;t=a("input",{type:"checkbox",checked:n,readOnly:!0})}return a("li",u(e),t,e.children)},definition:function(){return null},heading:function(e){return a("h".concat(e.level),u(e),e.children)},inlineCode:function(e){return a("code",u(e),e.children)},code:function(e){var t=e.language&&"language-".concat(e.language),n=a("code",t?{className:t}:null,e.value);return a("pre",u(e),n)},html:function(e){if(e.skipHtml)return null;var t=e.isBlock?"div":"span";if(e.escapeHtml){var n=o.Fragment||t;return a(n,null,e.value)}var r={dangerouslySetInnerHTML:{__html:e.value}};return a(t,r)},virtualHtml:function(e){return a(e.tag,u(e),e.children)},parsedHtml:function(e){return e["data-sourcepos"]?o.cloneElement(e.element,{"data-sourcepos":e["data-sourcepos"]}):e.element}}},function(e,t,n){"use strict";t.HtmlParser="undefined"==typeof Symbol?"__RMD_HTML_PARSER__":Symbol("__RMD_HTML_PARSER__")},function(e,t,n){"use strict";var r=n(119);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},,function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(27),a=n.n(i);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(4),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var d=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),a=t&&f(t),l=i||a;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var d=o[s];"."===d?p(o,s):".."===d?(p(o,s),c++):c&&(p(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};var h=function(e,t){if(!e)throw new Error("Invariant failed")};function m(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function w(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=d(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function k(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}function T(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&{},x||h(!1);var t,n=window.history,r=(-1===window.navigator.userAgent.indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?E:u,f=i.keyLength,p=void 0===f?6:f,d=e.basename?g(m(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return d&&y(i,d),w(i,r,n)}function S(){return Math.random().toString(36).substr(2,p)}var C=k();function P(e){s(D,e),D.length=n.length,C.notifyListeners(D.location,D.action)}function _(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||N(v(e.state))}function O(){N(v(T()))}var A=!1;function N(e){if(A)!1,P();else{C.confirmTransitionTo(e,"POP",c,(function(t){t?P({action:"POP",location:e}):function(e){var t=D.location,n=j.indexOf(t.key);-1===n&&0;var r=j.indexOf(e.key);-1===r&&0;var o=n-r;o&&(!0,z(o))}(e)}))}}var I=v(T()),j=[I.key];function L(e){return d+b(e)}function z(e){n.go(e)}var R=0;function M(e){1===(R+=e)&&1===e?(window.addEventListener("popstate",_),o&&window.addEventListener("hashchange",O)):0===R&&(window.removeEventListener("popstate",_),o&&window.removeEventListener("hashchange",O))}var U=!1;var D={length:n.length,action:"POP",location:I,createHref:L,push:function(e,t){var o=w(e,t,S(),D.location);C.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=L(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=j.indexOf(D.location.key),c=j.slice(0,u+1);c.push(o.key),c,P({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=w(e,t,S(),D.location);C.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=L(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=j.indexOf(D.location.key);-1!==u&&(j[u]=o.key),P({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&!1;var t=C.setPrompt(e);return U||(M(1),!0),function(){return U&&(!1,M(-1)),t()}},listen:function(e){var t=C.appendListener(e);return M(1),function(){M(-1),t()}}};return D}var C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:m},slash:{encodePath:m,decodePath:m}};function P(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function _(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function O(e){window.location.replace(P(window.location.href)+"#"+e)}function A(e){void 0===e&&(e={}),x||h(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?E:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?g(m(e.basename)):"",u=C[a],c=u.encodePath,f=u.decodePath;function p(){var e=f(_());return l&&(e=y(e,l)),w(e)}var d=k();function v(e){s(D,e),D.length=t.length,d.notifyListeners(D.location,D.action)}var T=!1,S=null;function A(){var e,t,n=_(),r=c(n);if(n!==r)O(r);else{var i=p(),a=D.location;if(!T&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===b(i))return;S=null,function(e){if(T)T=!1,v();else{d.confirmTransitionTo(e,"POP",o,(function(t){t?v({action:"POP",location:e}):function(e){var t=D.location,n=L.lastIndexOf(b(t));-1===n&&(n=0);var r=L.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(T=!0,z(o))}(e)}))}}(i)}}var N=_(),I=c(N);N!==I&&O(I);var j=p(),L=[b(j)];function z(e){t.go(e)}var R=0;function M(e){1===(R+=e)&&1===e?window.addEventListener("hashchange",A):0===R&&window.removeEventListener("hashchange",A)}var U=!1;var D={length:t.length,action:"POP",location:j,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=P(window.location.href)),n+"#"+c(l+b(e))},push:function(e,t){var n=w(e,void 0,void 0,D.location);d.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=b(n),r=c(l+t);if(_()!==r){S=t,function(e){window.location.hash=e}(r);var o=L.lastIndexOf(b(D.location)),i=L.slice(0,o+1);i.push(t),L=i,v({action:"PUSH",location:n})}else v()}}))},replace:function(e,t){var n=w(e,void 0,void 0,D.location);d.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=b(n),r=c(l+t);_()!==r&&(S=t,O(r));var o=L.indexOf(b(D.location));-1!==o&&(L[o]=t),v({action:"REPLACE",location:n})}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=d.setPrompt(e);return U||(M(1),U=!0),function(){return U&&(U=!1,M(-1)),t()}},listen:function(e){var t=d.appendListener(e);return M(1),function(){M(-1),t()}}};return D}function N(e,t,n){return Math.min(Math.max(e,t),n)}function I(e){void 0===e&&{};var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,u=void 0===l?6:l,c=k();function f(e){s(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function p(){return Math.random().toString(36).substr(2,u)}var d=N(a,0,o.length-1),h=o.map((function(e){return w(e,void 0,"string"==typeof e?p():e.key||p())})),m=b;function v(e){var t=N(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:h.length,action:"POP",location:h[d],index:d,entries:h,createHref:m,push:function(e,t){var r=w(e,t,p(),y.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=w(e,t,p(),y.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(y.entries[y.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&!1,c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var j=n(17),L=n.n(j),z=n(29),R=n.n(z);function M(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var U=o.a.createContext||function(e,t){var n,o,i="__create-react-context-"+R()()+"__",a=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=M(t.props.value),t}L()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}L()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((o={})[i]=c.a.object,o),{Provider:a,Consumer:l}},D=n(18),F=n.n(D);n(16);function H(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(30);var B=function(e){var t=U();return t.displayName=e,t}("Router"),$=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(B.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;o.a.Component;var V={},W=0;function q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=V[n]||(V[n]={});if(r[e])return r[e];var o=[],i={regexp:F()(e,o,t),keys:o};return W<1e4&&(r[e]=i,W++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}o.a.Component;function Q(e){return"/"===e.charAt(0)?e:"/"+e}function K(e,t){if(!e)return t;var n=Q(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function Y(e){return"string"==typeof e?e:b(e)}function X(e){return function(){h(!1)}}function G(){}o.a.Component;o.a.Component;o.a.useContext;o.a.Component;var Z=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=A(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement($,{history:this.history,children:this.props.children})},t}(o.a.Component);var J=function(e,t){return"function"==typeof e?e(t):e},ee=function(e,t){return"string"==typeof e?w(e,null,null,t):e},te=function(e){return e},ne=o.a.forwardRef;void 0===ne&&(ne=te);var re=ne((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=H(e,["innerRef","navigate","onClick"]),l=a.target,u=s({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=te!==ne&&t||n,o.a.createElement("a",u)}));var oe=ne((function(e,t){var n=e.component,r=void 0===n?re:n,i=e.replace,a=e.to,l=e.innerRef,u=H(e,["component","replace","to","innerRef"]);return o.a.createElement(B.Consumer,null,(function(e){e||h(!1);var n=e.history,c=ee(J(a,e.location),e.location),f=c?n.createHref(c):"",p=s({},u,{href:f,navigate:function(){var t=J(a,e.location);(i?n.replace:n.push)(t)}});return te!==ne?p.ref=t||l:p.innerRef=l,o.a.createElement(r,p)}))})),ie=function(e){return e},ae=o.a.forwardRef;void 0===ae&&(ae=ie);var le=ae((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,p=e.location,d=e.strict,m=e.style,v=e.to,y=e.innerRef,g=H(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(B.Consumer,null,(function(e){e||h(!1);var n=p||e.location,i=ee(J(v,n),n),b=i.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?q(n.pathname,{path:w,exact:c,strict:d}):null,x=!!(f?f(k,n):k),E=x?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,T=x?s({},m,{},l):m,S=s({"aria-current":x&&r||null,className:E,style:T,to:i},g);return ie!==ae?S.ref=t||y:S.innerRef=y,o.a.createElement(oe,S)}))})),ue=n(8);function ce(e){return(ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function se(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function fe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function pe(e,t){return!t||"object"!==ce(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function de(e){return(de=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function he(e,t){return(he=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var me=function(e){function t(){return se(this,t),pe(this,de(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&he(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"section-content"},o.a.createElement("h1",null,"react-scrollspy-nav"),o.a.createElement("p",null,o.a.createElement("b",null,"react-scrollspy-nav")," is a React component that provides smooth scrolling navigation to the page. It also acconuts for the factor that a React app may use different React router and therefore has different url patterns (for example the hash pathname in ",o.a.createElement("i",null,"HashRouter"),")."))}}])&&fe(n.prototype,r),i&&fe(n,i),t}(r.Component);function ve(e){return(ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ye(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ge(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function be(e,t){return!t||"object"!==ve(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function we(e){return(we=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ke(e,t){return(ke=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var xe=function(e){function t(){return ye(this,t),be(this,we(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ke(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"section-content"},o.a.createElement("h2",null,"Installation"),o.a.createElement("p",{className:"code-block"},"npm install --save react-scrollspy-nav"))}}])&&ge(n.prototype,r),i&&ge(n,i),t}(r.Component),Ee=n(28),Te=n.n(Ee);function Se(e){return(Se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Pe(e,t){return!t||"object"!==Se(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _e(e){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Oe(e,t){return(Oe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Ae=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Pe(this,_e(t).call(this,e))).state={content:""},n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Oe(e,t)}(t,e),n=t,(r=[{key:"componentWillMount",value:function(){var e=this;fetch("./markdown/example.md").then((function(e){return e.text()})).then((function(t){return e.setState({content:t})}))}},{key:"buildExampleCode",value:function(){return window.screen.availWidth>1e3?o.a.createElement("div",{className:"code-block"},o.a.createElement(Te.a,{source:this.state.content})):o.a.createElement("div",null,"Check out the code in Desktop screen")}},{key:"render",value:function(){return o.a.createElement("div",{className:"section-content"},o.a.createElement("h2",null,"Example"),this.buildExampleCode())}}])&&Ce(n.prototype,r),i&&Ce(n,i),t}(r.Component);function Ne(e){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ie(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function je(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Le(e,t){return!t||"object"!==Ne(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Re(e,t){return(Re=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Me=function(e){function t(){return Ie(this,t),Le(this,ze(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Re(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"section-content"},o.a.createElement("h2",null,"Configuration"),o.a.createElement("div",null,o.a.createElement("p",null,"Props that can be passed to Component ",o.a.createElement("b",null,"ScrollspyNav")," for configuration."),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"Name"),o.a.createElement("th",null,"Type"),o.a.createElement("th",null,"Description"),o.a.createElement("th",null,"Example Value"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"scrollTargetIds"),o.a.createElement("td",null,"Array"),o.a.createElement("td",null,"List of scroll targets ids"),o.a.createElement("td",null,'["section_1", "section_2", "section_3"]')),o.a.createElement("tr",null,o.a.createElement("td",null,"activeNavClass"),o.a.createElement("td",null,"String"),o.a.createElement("td",null,"Class name for styling the nav link that's currently active"),o.a.createElement("td",null,'"is-active"')),o.a.createElement("tr",null,o.a.createElement("td",null,"scrollDuration"),o.a.createElement("td",null,"String"),o.a.createElement("td",null,'Scroll duration for controlling how fast the nav click scrolls to its section. Default is "1000"'),o.a.createElement("td",null,'"1000"')),o.a.createElement("tr",null,o.a.createElement("td",null,"router"),o.a.createElement("td",null,"String"),o.a.createElement("td",null,"The name of router used in react app if any"),o.a.createElement("td",null,'"HashRouter"'))))))}}])&&je(n.prototype,r),i&&je(n,i),t}(r.Component);function Ue(e){return(Ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function De(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Fe(e,t){return!t||"object"!==Ue(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function He(e){return(He=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Be(e,t){return(Be=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var $e=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Fe(this,He(t).call(this,e))).props=e,n}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Be(e,t)}(t,e),n=t,(r=[{key:"render",value:function(){return o.a.createElement(Z,null,o.a.createElement("div",null,o.a.createElement("div",{className:"nav"},o.a.createElement(ue.default,{scrollTargetIds:["section_1","section_2","section_3"],activeNavClass:"is-active",router:"HashRouter"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(le,{to:"/"},o.a.createElement("span",null,"Home"))),o.a.createElement("li",null,o.a.createElement(le,{to:"#section_1"},o.a.createElement("span",null,"Usage"))),o.a.createElement("li",null,o.a.createElement(le,{to:"#section_2"},o.a.createElement("span",null,"Example"))),o.a.createElement("li",null,o.a.createElement(le,{to:"#section_3"},o.a.createElement("span",null,"Configuration")))))),o.a.createElement("div",{className:"content"},o.a.createElement("div",{id:"header"},o.a.createElement("span",null,o.a.createElement(me,null))),o.a.createElement("div",{id:"section_1"},o.a.createElement("span",null,o.a.createElement(xe,null))),o.a.createElement("div",{id:"section_2"},o.a.createElement("span",null,o.a.createElement(Ae,null))),o.a.createElement("div",{id:"section_3"},o.a.createElement("span",null,o.a.createElement(Me,null))))))}}])&&De(n.prototype,r),i&&De(n,i),t}(r.Component);a.a.render(o.a.createElement($e,null),document.getElementById("root"))},function(e,t){}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzLXdoaXRlc3BhY2UtY2hhcmFjdGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94dGVuZC9pbW11dGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RyaW0vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzLWRlY2ltYWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtdmlzaXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9TY3JvbGxzcHlOYXYuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGFyc2UtZW50aXRpZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlcGVhdC1zdHJpbmcvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RyaW0tdHJhaWxpbmctbGluZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdXRpbC9pbnRlcnJ1cHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdXRpbC9ub3JtYWxpemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtYnJvd3NlcmlmeS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtYWxwaGFiZXRpY2FsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL2RlZmF1bHRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3V0aWwvZ2V0LWluZGVudGF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3V0aWwvaHRtbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi9sb2NhdGUvdGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL2xvY2F0ZS9saW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi9yZWFjdC1tYXJrZG93bi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3VkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VuaWZpZWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V4dGVuZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFpbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmZpbGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZmaWxlLW1lc3NhZ2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtc3RyaW5naWZ5LXBvc2l0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92ZmlsZS9jb3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXBsYWNlLWV4dC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtYnVmZmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90cm91Z2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Ryb3VnaC93cmFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94LWlzLXN0cmluZy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VuaGVyaXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvcGFyc2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdGF0ZS10b2dnbGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZmaWxlLWxvY2F0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3VuZXNjYXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL2RlY29kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtaGV4YWRlY2ltYWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzLWFscGhhbnVtZXJpY2FsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wYXJzZS1lbnRpdGllcy9kZWNvZGUtZW50aXR5LmJyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3NldC1vcHRpb25zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXJrZG93bi1lc2NhcGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS1wb3NpdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC1wYXJlbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLWlzL2NvbnZlcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvbmV3bGluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9jb2RlLWluZGVudGVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2NvZGUtZmVuY2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2Jsb2NrcXVvdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvaGVhZGluZy1hdHguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvdGhlbWF0aWMtYnJlYWsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvbGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi91dGlsL3JlbW92ZS1pbmRlbnRhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9oZWFkaW5nLXNldGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9odG1sLWJsb2NrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2Zvb3Rub3RlLWRlZmluaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvbGxhcHNlLXdoaXRlLXNwYWNlL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2RlZmluaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvdGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvcGFyYWdyYXBoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2VzY2FwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi9sb2NhdGUvZXNjYXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2F1dG8tbGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS91cmwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvbG9jYXRlL3VybC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9odG1sLWlubGluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9saW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL3JlZmVyZW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9zdHJvbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvbG9jYXRlL3N0cm9uZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9lbXBoYXNpcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtd29yZC1jaGFyYWN0ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvbG9jYXRlL2VtcGhhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2RlbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi9sb2NhdGUvZGVsZXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL3Rva2VuaXplL2NvZGUtaW5saW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZW1hcmstcGFyc2UvbGliL2xvY2F0ZS9jb2RlLWlubGluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi90b2tlbml6ZS9icmVhay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVtYXJrLXBhcnNlL2xpYi9sb2NhdGUvYnJlYWsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlbWFyay1wYXJzZS9saWIvdG9rZW5pemUvdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWFya2Rvd24vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tZGFzdC1hZGQtbGlzdC1tZXRhZGF0YS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC12aXNpdC1wYXJlbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tYXJrZG93bi9saWIvcGx1Z2lucy9uYWl2ZS1odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tYXJrZG93bi9saWIvcGx1Z2lucy9kaXNhbGxvdy1ub2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tYXJrZG93bi9saWIvYXN0LXRvLXJlYWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi93cmFwLXRhYmxlLXJvd3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi9nZXQtZGVmaW5pdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi91cmktdHJhbnNmb3JtZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi9yZW5kZXJlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hcmtkb3duL2xpYi9zeW1ib2xzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXNtL3JlYWN0LXJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BYm91dC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Vc2FnZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9FeGFtcGxlLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0NvbmZpZ3VyYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwiYSIsImkiLCJ3aW5kb3ciLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjaGFyYWN0ZXIiLCJyZSIsInRlc3QiLCJmcm9tQ29kZSIsImNoYXJBdCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInRhcmdldCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsInN0ciIsInJlcGxhY2UiLCJsZWZ0IiwicmlnaHQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsIlR5cGVFcnJvciIsImFzc2lnbiIsInRlc3QxIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwibWFwIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJjb2RlIiwiY2hhckNvZGVBdCIsInZpc2l0IiwidmlzaXRQYXJlbnRzIiwiQ09OVElOVUUiLCJTS0lQIiwiRVhJVCIsInRyZWUiLCJ2aXNpdG9yIiwicmV2ZXJzZSIsIm5vZGUiLCJwYXJlbnRzIiwicGFyZW50IiwiaW5kZXgiLCJjaGlsZHJlbiIsImluZGV4T2YiLCJTY3JvbGxzcHlOYXYiLCJwcm9wcyIsInNjcm9sbFRhcmdldElkcyIsImFjdGl2ZU5hdkNsYXNzIiwic2Nyb2xsRHVyYXRpb24iLCJOdW1iZXIiLCJoZWFkZXJCYWNrZ3JvdW5kIiwib2Zmc2V0Iiwib25TY3JvbGwiLCJyb3V0ZXIiLCJob21lRGVmYXVsdExpbmsiLCJoYXNoSWRlbnRpZmllciIsInNjcm9sbFNlY3Rpb25PZmZzZXRUb3AiLCJ0aGlzIiwic2VjdGlvbklEIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm9mZnNldFRvcCIsInF1ZXJ5U2VsZWN0b3IiLCJzY3JvbGxIZWlnaHQiLCJwYWdlWU9mZnNldCIsImdldE5hdkxpbmtFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiY2xlYXJPdGhlck5hdkxpbmtBY3RpdmVTdHlsZSIsInJlbW92ZSIsImlubmVySGVpZ2h0IiwiYm9keSIsImN1cnJlbnRfdGltZSIsInN0YXJ0IiwiY2hhbmdlIiwiZHVyYXRpb24iLCJjdXJyZW50VGltZSIsImFuaW1hdGVTY3JvbGwiLCJlYXNlSW5PdXRRdWFkIiwic2Nyb2xsVG8iLCJzZXRUaW1lb3V0IiwibmF2SHJlZiIsImluY2x1ZGVzIiwiZXhjbHVkZVNlY3Rpb25JRCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibG9jYXRpb24iLCJoYXNoIiwicXVlcnlTZWxlY3RvckFsbCIsIm5hdkxpbmsiLCJnZXROYXZUb1NlY3Rpb25JRCIsImdldEF0dHJpYnV0ZSIsInNjcm9sbFRhcmdldFBvc2l0aW9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRhdGEtbmF2IiwiQ29tcG9uZW50IiwiZm9yIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsIml0ZXJhdG9yIiwiQSIsImIiLCJlIiwiZyIsImgiLCJmIiwiRXJyb3IiLCJrIiwiZnJhbWVzVG9Qb3AiLCJCIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiQyIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJEIiwiRSIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJIIiwiY29uc3RydWN0b3IiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkkiLCJjdXJyZW50IiwiY3VycmVudERpc3BhdGNoZXIiLCJKIiwiSyIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTCIsIkFycmF5IiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJ0eXBlIiwiX293bmVyIiwiTiIsIk8iLCJQIiwiUSIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlIiLCJwdXNoIiwiVSIsIlMiLCJUIiwiaXNBcnJheSIsIm5leHQiLCJkb25lIiwiZXNjYXBlIiwidG9TdHJpbmciLCJWIiwiYWEiLCJXIiwiTSIsImJhIiwicmVhZENvbnRleHQiLCJYIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiUHJvdmlkZXIiLCJDb25zdW1lciIsInVuc3RhYmxlX3JlYWQiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJyZW5kZXIiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJ1bnN0YWJsZV9Bc3luY01vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsImNyZWF0ZUVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIlkiLCJkZWZhdWx0IiwiWiIsImxlZ2FjeSIsImludmFsaWQiLCJkZWNpbWFsIiwiaGV4YWRlY2ltYWwiLCJhbHBoYW51bWVyaWNhbCIsImRlY29kZUVudGl0eSIsIm9wdGlvbnMiLCJvcHRpb24iLCJzZXR0aW5ncyIsImRlZmF1bHRzIiwicG9zaXRpb24iLCJpbmRlbnQiLCJlbnRpdHlDaGFyYWN0ZXJzIiwibmFtZWRFbnRpdHkiLCJ0ZXJtaW5hdGVkIiwiY2hhcmFjdGVycyIsInJlZmVyZW5jZSIsImZvbGxvd2luZyIsIndhcm5pbmciLCJyZWFzb24iLCJvdXRwdXQiLCJlbnRpdHkiLCJiZWdpbiIsInByZXYiLCJkaWZmIiwiZW5kIiwiYWRkaXRpb25hbCIsIm5vblRlcm1pbmF0ZWQiLCJoYW5kbGVUZXh0IiwidGV4dCIsImhhbmRsZVJlZmVyZW5jZSIsImhhbmRsZVdhcm5pbmciLCJ0ZXh0Q29udGV4dCIsInJlZmVyZW5jZUNvbnRleHQiLCJ3YXJuaW5nQ29udGV4dCIsInBvcyIsImxpbmVzIiwiY29sdW1uIiwibGluZSIsInF1ZXVlIiwibm93IiwibWVzc2FnZXMiLCJub29wIiwiaGV4YSIsInRlc3RzIiwib3duIiwiYXR0cmlidXRlIiwicGFyc2VJbnQiLCJiYXNlcyIsImRpc2FsbG93ZWQiLCJmbHVzaCIsInNsaWNlIiwicGFyc2UiLCJGdW5jdGlvbiIsImNhY2hlIiwicmVzIiwibnVtIiwibWF4Iiwic3Vic3RyIiwiaW50ZXJydXB0b3JzIiwidG9rZW5pemVycyIsImN0eCIsInBhcmFtcyIsImludGVycnVwdG9yIiwiY29uZmlnIiwiZm4iLCJib29sIiwiaWdub3JlIiwiYm9vbHMiLCJ1bmRlZmluZWQiLCJhcHBseSIsImNvbGxhcHNlV2hpdGVTcGFjZSIsInRvTG93ZXJDYXNlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiX19wcm90b19fIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsImNvbXBpbGUiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsInRva2VucyIsInBhdGgiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwiZXhlYyIsImVzY2FwZWQiLCJwcmVmaXgiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiZmxhZ3MiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwiYXR0YWNoS2V5cyIsInNlbnNpdGl2ZSIsInN0cmljdCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJjYWNoZWRTZXRUaW1lb3V0IiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwicHJvY2VzcyIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImNsZWFyVGltZW91dCIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImNvbmNhdCIsImRyYWluUXVldWUiLCJ0aW1lb3V0IiwibGVuIiwicnVuIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsImFycmF5IiwibmV4dFRpY2siLCJhcmdzIiwidGl0bGUiLCJicm93c2VyIiwiZW52IiwiYXJndiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJub3JtYWxpemVBcnJheSIsImFsbG93QWJvdmVSb290IiwidXAiLCJsYXN0Iiwic3BsaWNlIiwidW5zaGlmdCIsImZpbHRlciIsInhzIiwicmVzb2x2ZSIsInJlc29sdmVkUGF0aCIsInJlc29sdmVkQWJzb2x1dGUiLCJub3JtYWxpemUiLCJpc0Fic29sdXRlIiwidHJhaWxpbmdTbGFzaCIsInBhdGhzIiwicmVsYXRpdmUiLCJ0cmltIiwiYXJyIiwiZnJvbVBhcnRzIiwidG9QYXJ0cyIsIk1hdGgiLCJtaW4iLCJzYW1lUGFydHNMZW5ndGgiLCJvdXRwdXRQYXJ0cyIsInNlcCIsImRpcm5hbWUiLCJoYXNSb290IiwibWF0Y2hlZFNsYXNoIiwiYmFzZW5hbWUiLCJleHQiLCJleHRuYW1lIiwic3RhcnREb3QiLCJzdGFydFBhcnQiLCJwcmVEb3RTdGF0ZSIsImdmbSIsImNvbW1vbm1hcmsiLCJmb290bm90ZXMiLCJwZWRhbnRpYyIsImJsb2NrcyIsInNpemUiLCJzdG9wcyIsImZsb29yIiwib3BlblRhZyIsImNsb3NlVGFnIiwib3BlbkNsb3NlVGFnIiwidGFnIiwiZnJvbUluZGV4IiwibGluayIsImltYWdlIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiZXJyb3IiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJ4dGVuZCIsInVuaWZpZWQiLCJQcm9wVHlwZXMiLCJhZGRMaXN0TWV0YWRhdGEiLCJuYWl2ZUh0bWwiLCJkaXNhbGxvd05vZGUiLCJhc3RUb1JlYWN0Iiwid3JhcFRhYmxlUm93cyIsImdldERlZmluaXRpb25zIiwidXJpVHJhbnNmb3JtZXIiLCJkZWZhdWx0UmVuZGVyZXJzIiwiYWxsVHlwZXMiLCJSZWFjdE1hcmtkb3duIiwic3JjIiwicGFyc2VyT3B0aW9ucyIsImFsbG93ZWRUeXBlcyIsImRpc2FsbG93ZWRUeXBlcyIsInJlbmRlcmVycyIsInBhcnNlciIsInBsdWdpbnMiLCJyZWR1Y2UiLCJhcHBseVBhcnNlclBsdWdpbiIsInJhd0FzdCIsInJlbmRlclByb3BzIiwiZGVmaW5pdGlvbnMiLCJhc3RQbHVnaW5zIiwicmVtb3ZhbE1ldGhvZCIsInVud3JhcERpc2FsbG93ZWQiLCJvZlR5cGUiLCJhbGxvd05vZGUiLCJpZk5vdE1hdGNoIiwicmVuZGVySHRtbCIsImVzY2FwZUh0bWwiLCJza2lwSHRtbCIsImhhc0h0bWxQYXJzZXIiLCJzb21lIiwiaXRlbSIsImlkZW50aXR5IiwiSHRtbFBhcnNlciIsImRldGVybWluZUFzdFBsdWdpbnMiLCJ0cmFuc2Zvcm1lZEFzdCIsInJ1blN5bmMiLCJhc3QiLCJwbHVnaW4iLCJ1c2UiLCJzb3VyY2VQb3MiLCJyYXdTb3VyY2VQb3MiLCJ0cmFuc2Zvcm1MaW5rVXJpIiwicHJvcFR5cGVzIiwiY2xhc3NOYW1lIiwic3RyaW5nIiwiYXJyYXlPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwibGlua1RhcmdldCIsInRyYW5zZm9ybUltYWdlVXJpIiwidHlwZXMiLCJnbG9iYWwiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsIk1lbW8iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiY2EiLCJkYSIsImVhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJmYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwiaGEiLCJyZWdpc3RyYXRpb25OYW1lIiwiaWEiLCJqYSIsImRlcGVuZGVuY2llcyIsImthIiwib25FcnJvciIsImxhIiwibWEiLCJuYSIsIm9hIiwicGEiLCJxYSIsInNhIiwidWEiLCJ2YSIsIndhIiwiY3VycmVudFRhcmdldCIsInJhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJCYSIsIkNhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkRhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJFYSIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJTYSIsIlRhIiwiVWEiLCJXYSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiWGEiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJNYXAiLCJsYiIsIm1iIiwibmIiLCJvYiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInNiIiwidGIiLCJ1YiIsInZiIiwicWIiLCJpc05hTiIsInJiIiwicGIiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIndiIiwibm9kZU5hbWUiLCJ5YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwieGIiLCJ6YiIsImNoZWNrZWQiLCJBYiIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQmIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQ2IiLCJFYiIsIkZiIiwiR2IiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkliIiwiSGIiLCJKYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiS2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkxiIiwiTWIiLCJOYiIsInRleHRDb250ZW50IiwieGxpbmtIcmVmIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJUYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiVWIiLCJWYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIldiIiwiWGIiLCJZYiIsInN0eWxlIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiY2MiLCJlYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImZjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJnYyIsImljIiwiY2hpbGQiLCJzaWJsaW5nIiwiaGMiLCJqYyIsImtjIiwibGMiLCJtYyIsIm5jIiwib2MiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwidWMiLCJ2YyIsInpjIiwiYmxvY2tlZE9uIiwidG9wTGV2ZWxUeXBlIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwiQWMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJCYyIsIkNjIiwiRWMiLCJGYyIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJHYyIsIkhjIiwiSWMiLCJKYyIsInNoaWZ0IiwiS2MiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJMYyIsIk1jIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsIk5jIiwiT2MiLCJkaXNwYXRjaENvbmZpZyIsIlBjIiwiX3RhcmdldEluc3QiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIlVjIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiV2MiLCJldmVudFBvb2wiLCJYYyIsImRlc3RydWN0b3IiLCJWYyIsImdldFBvb2xlZCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiWWMiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiWmMiLCJjbGlwYm9hcmREYXRhIiwiJGMiLCJ2aWV3IiwiZGV0YWlsIiwiYWQiLCJyZWxhdGVkVGFyZ2V0IiwiYmQiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJjZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJkZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJlZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJnZCIsImdldE1vZGlmaWVyU3RhdGUiLCJoZCIsImlkIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImxvY2FsZSIsIndoaWNoIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiYnV0dG9uIiwiYnV0dG9ucyIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwib2QiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJwZCIsImRhdGFUcmFuc2ZlciIsInFkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInJkIiwic2QiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInRkIiwidWQiLCJ2ZCIsIndkIiwieWQiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsIkVkIiwiZ2V0RXZlbnRQcmlvcml0eSIsIkZkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJHZCIsIkhkIiwiSmQiLCJLZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJEYyIsIlJkIiwiU2QiLCJXZWFrTWFwIiwieGMiLCJTZXQiLCJ5YyIsImhhcyIsIlRkIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJVZCIsIlZkIiwiV2QiLCJzZXRQcm9wZXJ0eSIsInN1YnN0cmluZyIsIlhkIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJZZCIsIlpkIiwiaXMiLCIkZCIsImFlIiwiYmUiLCJjZSIsImRlIiwibmV4dFNpYmxpbmciLCJmZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJnZSIsImNvbnRlbnRFZGl0YWJsZSIsImxlIiwibWUiLCJuZSIsImF1dG9Gb2N1cyIsIm9lIiwiX19odG1sIiwicGUiLCJxZSIsInNlIiwicHJldmlvdXNTaWJsaW5nIiwidGUiLCJyYW5kb20iLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsIkhlIiwiZG9jdW1lbnRNb2RlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwiTWUiLCJOZSIsIk9lIiwiUGUiLCJTZSIsIlFlIiwiY2hhciIsIlJlIiwiVGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsInVybCIsIndlZWsiLCJVZSIsIlZlIiwiV2UiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRldGFjaEV2ZW50IiwiZGYiLCJlZiIsImF0dGFjaEV2ZW50IiwiZmYiLCJnZiIsImhmIiwibGYiLCJqZiIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJrZiIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwibWYiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJzZWxlY3QiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInhmIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJ5ZiIsIm9uU2VsZWN0IiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiT2YiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlBmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiUWYiLCJ1bnN0YWJsZV9ub3ciLCJSZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiU2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlRmIiwiVWYiLCJWZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiV2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJ2ZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwid2ciLCJ4ZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ5ZyIsInpnIiwiYmFzZVN0YXRlIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0RWZmZWN0IiwibGFzdEVmZmVjdCIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJBZyIsIkJnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJuZXh0RWZmZWN0IiwiQ2ciLCJEZyIsInVwZGF0ZVF1ZXVlIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlNnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIlBnIiwiUWciLCJSZyIsIlRnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiVWciLCJzdGF0ZSIsIlZnIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiV2ciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlhnIiwiWWciLCJfc3RyaW5nUmVmIiwiWmciLCIkZyIsImFoIiwiYmgiLCJlbGVtZW50VHlwZSIsImNoIiwiaW1wbGVtZW50YXRpb24iLCJkaCIsImVoIiwidGEiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwia2giLCJsaCIsIm1oIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsIm5oIiwib2giLCJwaCIsInFoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwicmgiLCJyZXNwb25kZXIiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsImJhc2VVcGRhdGUiLCJPaCIsIlBoIiwiUWgiLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJSaCIsIlNoIiwiVGgiLCJVaCIsImRlc3Ryb3kiLCJkZXBzIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidW5zdGFibGVfbmV4dCIsImNpIiwiZGkiLCJlaSIsImZpIiwiZ2kiLCJoaSIsInBlbmRpbmdQcm9wcyIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwidmkiLCJ3aSIsInBlbmRpbmdDb250ZXh0IiwiSGkiLCJKaSIsIktpIiwieGkiLCJyZXRyeVRpbWUiLCJ5aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ6aSIsIkFpIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIkJpIiwiQ2kiLCJMaSIsIk1pIiwiTmkiLCJzdGFjayIsIm9uQ2xpY2siLCJvbmNsaWNrIiwiT2kiLCJXZWFrU2V0IiwiUGkiLCJTaSIsIlJpIiwiVGkiLCJVaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVmkiLCJXaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiUWkiLCJYaSIsIllpIiwiWmkiLCIkaSIsImluc3RhbmNlIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImFqIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsImJqIiwiZGlzcGxheSIsImNqIiwiZGoiLCJ0aGVuIiwiZWoiLCJmaiIsImVsZW1lbnQiLCJnaiIsImhqIiwiaWoiLCJjb21wb25lbnREaWRDYXRjaCIsImpqIiwiY29tcG9uZW50U3RhY2siLCJnayIsImtqIiwiY2VpbCIsImxqIiwibWoiLCJ3aiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsInRpbWVvdXRNcyIsIktqIiwiTGoiLCJNaiIsIk5qIiwiT2oiLCJsYXN0RXhwaXJlZFRpbWUiLCJQaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJVaiIsIlZqIiwiV2oiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZEV4cGlyYXRpb25UaW1lIiwibGFzdFN1c3BlbmRlZFRpbWUiLCJYaiIsInRpbWVvdXRIYW5kbGUiLCJZaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJaaiIsImJrIiwiY2siLCJwaW5nQ2FjaGUiLCJkayIsImVrIiwiZmsiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImlrIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIkRiIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImprIiwiZWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiRGgiLCJkYyIsImZkIiwiaGsiLCJFaCIsIkZoIiwieGsiLCJEaSIsIkVpIiwiRmkiLCJ4ZCIsIkdpIiwia2siLCJsayIsIm1rIiwiaGlkZGVuIiwiX2N0b3IiLCJWYSIsIm5rIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwicGsiLCJwZW5kaW5nQ2hpbGRyZW4iLCJxayIsInJrIiwic2siLCJ0ayIsInVrIiwidmsiLCJ3YyIsIl9pbnRlcm5hbFJvb3QiLCJ3ayIsInprIiwiaGFzQXR0cmlidXRlIiwieWsiLCJBayIsIkJrIiwidW5tb3VudCIsImZvcm0iLCJhayIsIkNrIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsImZsdXNoU3luYyIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJvayIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiRGsiLCJFayIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfUHJvZmlsaW5nIiwiYmFpbCIsInZmaWxlIiwidHJvdWdoIiwicGxhaW4iLCJhdHRhY2hlcnMiLCJ0cmFuc2Zvcm1lcnMiLCJuYW1lc3BhY2UiLCJmcm96ZW4iLCJmcmVlemVJbmRleCIsInByb2Nlc3NvciIsImFzc2VydFVuZnJvemVuIiwiZnJlZXplIiwiYWRkUGx1Z2luIiwiYWRkTGlzdCIsImFkZFByZXNldCIsImVudHJ5IiwiZmluZCIsImRvYyIsIlBhcnNlciIsImZpbGUiLCJhc3NlcnRQYXJzZXIiLCJuZXdhYmxlIiwiQ29tcGlsZXIiLCJhc3NlcnRDb21waWxlciIsImFzc2VydE5vZGUiLCJjb21wbGV0ZSIsImFzc2VydERvbmUiLCJwcm9jZXNzU3luYyIsImRlc3RpbmF0aW9uIiwidmFsdWVzIiwidHJhbnNmb3JtZXIiLCJJbmZpbml0eSIsIlByb21pc2UiLCJleGVjdXRvciIsInJlamVjdCIsInBpcGVsaW5lIiwiY29udGVudHMiLCJhc3luY05hbWUiLCJoYXNPd24iLCJ0b1N0ciIsImdPUEQiLCJpc1BsYWluT2JqZWN0IiwiaGFzT3duQ29uc3RydWN0b3IiLCJoYXNJc1Byb3RvdHlwZU9mIiwibmV3VmFsdWUiLCJ3cml0YWJsZSIsImdldFByb3BlcnR5IiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJkZWVwIiwiVk1lc3NhZ2UiLCJWRmlsZSIsInByb3RvIiwibWVzc2FnZSIsIm9yaWdpbiIsImZpbGVQYXRoIiwiZmF0YWwiLCJpbmZvIiwiZmFpbCIsIndhcm4iLCJWTWVzc2FnZVByb3RvdHlwZSIsInBhcnNlT3JpZ2luIiwicnVsZUlkIiwicG9pbnQiLCJidWZmZXIiLCJlbmNvZGluZyIsInByb3AiLCJoaXN0b3J5IiwiYXNzZXJ0UGFydCIsInBhcnQiLCJhc3NlcnROb25FbXB0eSIsImFzc2VydFBhdGgiLCJzdGVtIiwibnBhdGgiLCJuRmlsZU5hbWUiLCJpc0J1ZmZlciIsInJlYWRGbG9hdExFIiwiaXNTbG93QnVmZmVyIiwiX2lzQnVmZmVyIiwid3JhcCIsImZucyIsIm1pZGRsZXdhcmUiLCJpbnZva2VkIiwidW5oZXJpdCIsIkxvY2FsIiwiaW5oZXJpdHMiLCJTdXBlciIsIkZyb20iLCJwYXJhbWV0ZXJzIiwiY3RvciIsInN1cGVyQ3RvciIsInN1cGVyXyIsIlRlbXBDdG9yIiwidG9nZ2xlIiwidmZpbGVMb2NhdGlvbiIsInVuZXNjYXBlIiwiZGVjb2RlIiwidG9rZW5pemVyIiwic2V0T3B0aW9ucyIsImluTGlzdCIsImluQmxvY2siLCJpbkxpbmsiLCJhdFN0YXJ0IiwidG9PZmZzZXQiLCJleGl0U3RhcnQiLCJlbnRlckxpc3QiLCJlbnRlckxpbmsiLCJlbnRlckJsb2NrIiwiaW50ZXJydXB0UGFyYWdyYXBoIiwiaW50ZXJydXB0TGlzdCIsImludGVycnVwdEJsb2NrcXVvdGUiLCJibG9ja1Rva2VuaXplcnMiLCJuZXdsaW5lIiwiaW5kZW50ZWRDb2RlIiwiZmVuY2VkQ29kZSIsImJsb2NrcXVvdGUiLCJhdHhIZWFkaW5nIiwidGhlbWF0aWNCcmVhayIsImxpc3QiLCJzZXRleHRIZWFkaW5nIiwiaHRtbCIsImZvb3Rub3RlIiwiZGVmaW5pdGlvbiIsInRhYmxlIiwicGFyYWdyYXBoIiwiaW5saW5lVG9rZW5pemVycyIsImF1dG9MaW5rIiwic3Ryb25nIiwiZW1waGFzaXMiLCJkZWxldGlvbiIsImJyZWFrIiwiYmxvY2tNZXRob2RzIiwiaW5saW5lTWV0aG9kcyIsInRva2VuaXplQmxvY2siLCJ0b2tlbml6ZUlubGluZSIsInRva2VuaXplRmFjdG9yeSIsIm9mZnNldFRvUG9zaXRpb25GYWN0b3J5IiwiaW5kaWNlcyIsInBvc2l0aW9uVG9PZmZzZXRGYWN0b3J5IiwidG9Qb3NpdGlvbiIsImVudGl0aWVzIiwiZGVjb2RlciIsInJhdyIsIm9mZnNldHMiLCJoYW5kbGVyIiwiYWxwaGFiZXRpY2FsIiwiZWwiLCJtZXRob2QiLCJtYXRjaGVkIiwidmFsdWVMZW5ndGgiLCJzZWxmIiwibWV0aG9kcyIsImVhdCIsInVwZGF0ZVBvc2l0aW9uIiwib25seUF0U3RhcnQiLCJub3RJbkxpc3QiLCJub3RJbkJsb2NrIiwibm90SW5MaW5rIiwiZW9mIiwic3VidmFsdWUiLCJsYXN0SW5kZXgiLCJQb3NpdGlvbiIsImJlZm9yZSIsImluZGVudGF0aW9uIiwiZ2V0T2Zmc2V0IiwiY29tYmluZWQiLCJ2YWxpZGF0ZUVhdCIsInJlc2V0IiwiTUVSR0VBQkxFX05PREVTIiwibWVyZ2VhYmxlIiwiZXNjYXBlcyIsInJlbW92ZVBvc2l0aW9uIiwiY29udGVudCIsIkVYUFJFU1NJT05fTElORV9CUkVBS1MiLCJoYXJkIiwic29mdCIsImZvcmNlIiwiY29udmVydCIsIm9uZSIsInN1YnJlc3VsdCIsInRvUmVzdWx0Iiwic3RlcCIsImFsbCIsIkJvb2xlYW4iLCJ0eXBlRmFjdG9yeSIsImFueUZhY3RvcnkiLCJtYXRjaGVzRmFjdG9yeSIsImNoZWNrcyIsInJlc3VsdHMiLCJjb252ZXJ0QWxsIiwid2hpdGVzcGFjZSIsInNpbGVudCIsImJsYW5rUXVldWUiLCJzdWJ2YWx1ZVF1ZXVlIiwiY29udGVudFF1ZXVlIiwiQ09ERV9JTkRFTlQiLCJsYW5nIiwiZmVuY2VDb3VudCIsImZsYWciLCJleGRlbnRlZENvbnRlbnQiLCJjbG9zaW5nIiwiZXhkZW50ZWRDbG9zaW5nIiwiaW50ZXJydXB0IiwicmVzdCIsIm5leHRJbmRleCIsInN0YXJ0SW5kZXgiLCJwcmVmaXhlZCIsImV4aXQiLCJjdXJyZW50TGluZSIsImluZGVudHMiLCJkZXB0aCIsIm1hcmtlckNvdW50IiwiZ2V0SW5kZW50IiwicmVtb3ZlSW5kZW50IiwibWFya2VycyIsIm9yZGVyZWQiLCJjdXJyZW50TWFya2VyIiwicHJldkVtcHR5IiwiZW1wdHkiLCJpdGVtcyIsImFsbExpbmVzIiwiZW1wdHlMaW5lcyIsImVudGVyVG9wIiwiZXhpdEJsb2NrcXVvdGUiLCJpc0xvb3NlIiwiaW5kZW50ZWQiLCJpbnRlcnVwdG9ycyIsIkxJU1RfT1JERVJFRF9DT01NT05NQVJLX01BUktFUlMiLCJMSVNUX09SREVSRURfTUFSS0VSUyIsIkxJU1RfVU5PUkRFUkVEX01BUktFUlMiLCJUQUJfU0laRSIsInRyYWlsIiwibG9vc2UiLCJsaXN0SXRlbSIsIkVYUFJFU1NJT05fTE9PU0VfTElTVF9JVEVNIiwiRVhQUkVTU0lPTl9UQVNLX0lURU0iLCJFWFBSRVNTSU9OX0JVTExFVCIsIkVYUFJFU1NJT05fUEVEQU5USUNfQlVMTEVUIiwiRVhQUkVTU0lPTl9JTklUSUFMX0lOREVOVCIsInRhc2siLCJwZWRhbnRpY0xpc3RJdGVtIiwibm9ybWFsTGlzdEl0ZW0iLCJyZXBsYWNlciIsIiQwIiwiYnVsbGV0IiwidHJpbW1lZExpbmVzIiwiJDEiLCIkMiIsIiQzIiwiJDQiLCJtYXhpbXVtIiwicGFkZGluZyIsIm1pbkluZGVudCIsIm1hdHJpeCIsIlNFVEVYVF9NQVJLRVJTIiwic2VxdWVuY2UiLCJzZXF1ZW5jZXMiLCJmb290bm90ZURlZmluaXRpb24iLCJFWFBSRVNTSU9OX0lOSVRJQUxfVEFCIiwic3VicXVldWUiLCJpZGVudGlmaWVyIiwiQ19CUkFDS0VUX09QRU4iLCJiZWZvcmVVUkwiLCJiZWZvcmVUaXRsZSIsImlzRW5jbG9zZWRVUkxDaGFyYWN0ZXIiLCJpc1VuY2xvc2VkVVJMQ2hhcmFjdGVyIiwiYWxpZ25tZW50cyIsImFsaWdubWVudCIsInJvdyIsImhhc0Rhc2giLCJhbGlnbiIsImNlbGwiLCJwcmVhbWJsZSIsIm9wZW5pbmciLCJsaW5lQ291bnQiLCJyb3dzIiwibGluZUluZGV4IiwicGlwZUluZGV4IiwiZmlyc3QiLCJ0cmltVHJhaWxpbmdMaW5lcyIsImxvY2F0ZSIsImxvY2F0b3IiLCJNQUlMVE9fTEVOR1RIIiwiaGFzQXRDaGFyYWN0ZXIiLCJQUk9UT0NPTFMiLCJQUk9UT0NPTFNfTEVOR1RIIiwicHJvdG9jb2wiLCJwYXJlbkNvdW50IiwibmV4dENoYXJhY3RlciIsImlubGluZUhUTUwiLCJFWFBSRVNTSU9OX0hUTUxfTElOS19PUEVOIiwiRVhQUkVTU0lPTl9IVE1MX0xJTktfQ0xPU0UiLCJMSU5LX01BUktFUlMiLCJDT01NT05NQVJLX0xJTktfTUFSS0VSUyIsImNsb3NlZCIsImhhc01hcmtlciIsImlzSW1hZ2UiLCJhbHQiLCJicmFja2V0ZWQiLCJpbnRybyIsInJlZmVyZW5jZVR5cGUiLCJ1bmRlcnNjb3JlIiwid29yZCIsInN0cmlrZXRocm91Z2giLCJwcmV2aW91cyIsInByZWNlZGluZyIsImlubGluZUNvZGUiLCJvcGVuaW5nQ291bnQiLCJmb3VuZCIsInRpY2tRdWV1ZSIsImhhcmRCcmVhayIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwic3ltYm9sIiwiYW55IiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwidmlzaXRXaXRoUGFyZW50cyIsImxpc3ROb2RlIiwic2VsZkNsb3NpbmdSZSIsInNpbXBsZVRhZ1JlIiwib3BlbiIsImN1cnJlbnRQYXJlbnQiLCJzZWxmQ2xvc2luZyIsImdldFNlbGZDbG9zaW5nIiwiZ2V0U2ltcGxlVGFnIiwibWF0Y2hpbmciLCJtYXRjaGluZ1RhZyIsImZpbmRBbmRQdWxsIiwiZnJvbU5vZGUiLCJ0b05vZGUiLCJ0b0luZGV4IiwidmlydHVhbCIsInVudGFuZ2xlIiwiZGlzYWxsb3ciLCJSZWFjdCIsIlJlYWN0SXMiLCJkZWZhdWx0Tm9kZVBvc2l0aW9uIiwicmVuZGVyZXIiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJub2RlUHJvcHMiLCJnZXROb2RlUHJvcHMiLCJyZXNvbHZlQ2hpbGRyZW4iLCJjaGlsZE5vZGUiLCJpc1RhZ1JlbmRlcmVyIiwic291cmNlUG9zaXRpb24iLCJpbmNsdWRlTm9kZUluZGV4IiwicGFyZW50Q2hpbGRDb3VudCIsImFzc2lnbkRlZmluZWQiLCJub2RlS2V5IiwibGV2ZWwiLCJ0aWdodCIsInVud3JhcFBhcmFncmFwaHMiLCJnZXRMaXN0SXRlbUNoaWxkcmVuIiwibGFuZ3VhZ2UiLCJpbmxpbmUiLCJjb2x1bW5BbGlnbm1lbnQiLCJpc0hlYWRlciIsImlzQmxvY2siLCJwYXJzZWRDaGlsZHJlbiIsIm1lcmdlTm9kZUNoaWxkcmVuIiwiYXR0cnMiLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdXNwZW5zZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImRlZnMiLCJwcm90b2NvbHMiLCJ1cmkiLCJjb2xvbiIsInN1cHBvcnRzU3RyaW5nUmVuZGVyIiwiU2ltcGxlUmVuZGVyZXIiLCJnZXRDb3JlUHJvcHMiLCJsaW5rUmVmZXJlbmNlIiwiaW1hZ2VSZWZlcmVuY2UiLCJ0YWJsZUhlYWQiLCJ0YWJsZUJvZHkiLCJ0YWJsZVJvdyIsInRhYmxlQ2VsbCIsInRleHRBbGlnbiIsImNvcmVQcm9wcyIsInVzZUZyYWdtZW50IiwiY2hlY2tib3giLCJyZWFkT25seSIsImhlYWRpbmciLCJjb21wIiwidmlydHVhbEh0bWwiLCJwYXJzZWRIdG1sIiwiX2luaGVyaXRzTG9vc2UiLCJfZXh0ZW5kcyIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwiaGFzVHJhaWxpbmdTbGFzaCIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiY29uZGl0aW9uIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiX2tleSIsImNhblVzZURPTSIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJnZXRIaXN0b3J5U3RhdGUiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwiYWxsS2V5cyIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyaWVzIiwibmV4dEVudHJpZXMiLCJjYW5HbyIsImNyZWF0ZUV2ZW50RW1pdHRlciIsImhhbmRsZXJzIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJfdGhpczIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwibWVtbyIsImNyZWF0ZVVSTCIsInN0YXRpY0hhbmRsZXIiLCJtZXRob2ROYW1lIiwiSGFzaFJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIiLCJfcmVmMiRjb21wb25lbnQiLCJmb3J3YXJkUmVmU2hpbSQxIiwiZm9yd2FyZFJlZiQxIiwiTmF2TGluayIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJBYm91dCIsIlVzYWdlIiwiRXhhbXBsZSIsImZldGNoIiwicmVzcG9uc2UiLCJzY3JlZW4iLCJh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Q0FDQSwwREFDQSx3RUFFRCw0QkFDQyw4Q0FDQSxzQ0FDQSwyRkFDQSw0Q0FFRCw0QkFDQyw4Q0FDQSxzQ0FDQSxnSUFDQSx1Q0FFRCw0QkFDQyxzQ0FDQSxzQ0FDQSwyRUFDQSxzRCxnQ0F2Q29CalksYSxvekJDZ0Vic2pFLEcsWUF4RGIsV0FBWXptRSxHQUFPLGEsNEZBQUEsVUFDakIsMEJBQU1BLEtBRURBLE1BQVFBLEVBSEksRSxpU0FPakIsT0F1Qkksa0JBQUMsRUFBRCxLQUNFLDZCQUNFLHlCQUFLb2IsVUFBVSxPQUNiLGtCQUFDcmIsR0FBQSxRQUFELENBQWNFLGdCQUFpQixDQUFDLFlBQWEsWUFBYSxhQUFjQyxlQUFlLFlBQVlNLE9BQU8sY0FDeEcsNEJBQ0UsNEJBQUksa0JBQUMya0UsR0FBRCxDQUFTcm1FLEdBQUcsS0FBSSx3Q0FDcEIsNEJBQUksa0JBQUNxbUUsR0FBRCxDQUFTcm1FLEdBQUcsY0FBYSx5Q0FDN0IsNEJBQUksa0JBQUNxbUUsR0FBRCxDQUFTcm1FLEdBQUcsY0FBYSwyQ0FDN0IsNEJBQUksa0JBQUNxbUUsR0FBRCxDQUFTcm1FLEdBQUcsY0FBYSxvREFLbkMseUJBQUtzYyxVQUFVLFdBQ1gseUJBQUt3WCxHQUFHLFVBQVMsOEJBQU0sa0JBQUMsR0FBRCxRQUN2Qix5QkFBS0EsR0FBRyxhQUFZLDhCQUFNLGtCQUFDLEdBQUQsUUFDMUIseUJBQUtBLEdBQUcsYUFBWSw4QkFBTSxrQkFBQyxHQUFELFFBQzFCLHlCQUFLQSxHQUFHLGFBQVksOEJBQU0sa0JBQUMsR0FBRCxnQixnQ0FoRHhCenZCLGFDTGxCdWpFLElBQVMxOUQsT0FBTyxrQkFBQyxHQUFELE1BQVFsSSxTQUFTQyxlQUFlLFUiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIHtcblx0XHR2YXIgYSA9IGZhY3RvcnkoKTtcblx0XHRmb3IodmFyIGkgaW4gYSkgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyA/IGV4cG9ydHMgOiByb290KVtpXSA9IGFbaV07XG5cdH1cbn0pKHdpbmRvdywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDMxKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gd2hpdGVzcGFjZVxuXG52YXIgZnJvbUNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlXG52YXIgcmUgPSAvXFxzL1xuXG4vLyBDaGVjayBpZiB0aGUgZ2l2ZW4gY2hhcmFjdGVyIGNvZGUsIG9yIHRoZSBjaGFyYWN0ZXIgY29kZSBhdCB0aGUgZmlyc3Rcbi8vIGNoYXJhY3RlciwgaXMgYSB3aGl0ZXNwYWNlIGNoYXJhY3Rlci5cbmZ1bmN0aW9uIHdoaXRlc3BhY2UoY2hhcmFjdGVyKSB7XG4gIHJldHVybiByZS50ZXN0KFxuICAgIHR5cGVvZiBjaGFyYWN0ZXIgPT09ICdudW1iZXInID8gZnJvbUNvZGUoY2hhcmFjdGVyKSA6IGNoYXJhY3Rlci5jaGFyQXQoMClcbiAgKVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cbiIsIlxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gdHJpbTtcblxuZnVuY3Rpb24gdHJpbShzdHIpe1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMqfFxccyokL2csICcnKTtcbn1cblxuZXhwb3J0cy5sZWZ0ID0gZnVuY3Rpb24oc3RyKXtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKTtcbn07XG5cbmV4cG9ydHMucmlnaHQgPSBmdW5jdGlvbihzdHIpe1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xccyokLywgJycpO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkZWNpbWFsXG5cbi8vIENoZWNrIGlmIHRoZSBnaXZlbiBjaGFyYWN0ZXIgY29kZSwgb3IgdGhlIGNoYXJhY3RlciBjb2RlIGF0IHRoZSBmaXJzdFxuLy8gY2hhcmFjdGVyLCBpcyBkZWNpbWFsLlxuZnVuY3Rpb24gZGVjaW1hbChjaGFyYWN0ZXIpIHtcbiAgdmFyIGNvZGUgPSB0eXBlb2YgY2hhcmFjdGVyID09PSAnc3RyaW5nJyA/IGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApIDogY2hhcmFjdGVyXG5cbiAgcmV0dXJuIGNvZGUgPj0gNDggJiYgY29kZSA8PSA1NyAvKiAwLTkgKi9cbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZpc2l0XG5cbnZhciB2aXNpdFBhcmVudHMgPSByZXF1aXJlKCd1bmlzdC11dGlsLXZpc2l0LXBhcmVudHMnKVxuXG52YXIgQ09OVElOVUUgPSB2aXNpdFBhcmVudHMuQ09OVElOVUVcbnZhciBTS0lQID0gdmlzaXRQYXJlbnRzLlNLSVBcbnZhciBFWElUID0gdmlzaXRQYXJlbnRzLkVYSVRcblxudmlzaXQuQ09OVElOVUUgPSBDT05USU5VRVxudmlzaXQuU0tJUCA9IFNLSVBcbnZpc2l0LkVYSVQgPSBFWElUXG5cbmZ1bmN0aW9uIHZpc2l0KHRyZWUsIHRlc3QsIHZpc2l0b3IsIHJldmVyc2UpIHtcbiAgaWYgKHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2aXNpdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV2ZXJzZSA9IHZpc2l0b3JcbiAgICB2aXNpdG9yID0gdGVzdFxuICAgIHRlc3QgPSBudWxsXG4gIH1cblxuICB2aXNpdFBhcmVudHModHJlZSwgdGVzdCwgb3ZlcmxvYWQsIHJldmVyc2UpXG5cbiAgZnVuY3Rpb24gb3ZlcmxvYWQobm9kZSwgcGFyZW50cykge1xuICAgIHZhciBwYXJlbnQgPSBwYXJlbnRzW3BhcmVudHMubGVuZ3RoIC0gMV1cbiAgICB2YXIgaW5kZXggPSBwYXJlbnQgPyBwYXJlbnQuY2hpbGRyZW4uaW5kZXhPZihub2RlKSA6IG51bGxcbiAgICByZXR1cm4gdmlzaXRvcihub2RlLCBpbmRleCwgcGFyZW50KVxuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBTY3JvbGxzcHlOYXYgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMucHJvcHMgPSBwcm9wcztcbiAgICB0aGlzLnNjcm9sbFRhcmdldElkcyA9IHRoaXMucHJvcHMuc2Nyb2xsVGFyZ2V0SWRzO1xuICAgIHRoaXMuYWN0aXZlTmF2Q2xhc3MgPSB0aGlzLnByb3BzLmFjdGl2ZU5hdkNsYXNzO1xuICAgIHRoaXMuc2Nyb2xsRHVyYXRpb24gPSBOdW1iZXIodGhpcy5wcm9wcy5zY3JvbGxEdXJhdGlvbikgfHwgMTAwMDtcbiAgICB0aGlzLmhlYWRlckJhY2tncm91bmQgPSB0aGlzLnByb3BzLmhlYWRlckJhY2tncm91bmQgPT09IFwidHJ1ZVwiID8gdHJ1ZSA6IGZhbHNlO1xuICAgIHRoaXMub2Zmc2V0ID0gdGhpcy5wcm9wcy5vZmZzZXQgfHwgMDtcblxuICAgIHRoaXMub25TY3JvbGwgPSB0aGlzLm9uU2Nyb2xsLmJpbmQodGhpcyk7XG5cbiAgICBpZih0aGlzLnByb3BzLnJvdXRlciAmJiB0aGlzLnByb3BzLnJvdXRlciA9PT0gXCJIYXNoUm91dGVyXCIpIHtcbiAgICAgIHRoaXMuaG9tZURlZmF1bHRMaW5rID0gXCIjL1wiO1xuICAgICAgdGhpcy5oYXNoSWRlbnRpZmllciA9IFwiIy8jXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaG9tZURlZmF1bHRMaW5rID0gXCIvXCI7XG4gICAgICB0aGlzLmhhc2hJZGVudGlmaWVyID0gXCIjXCI7XG4gICAgfVxuICB9XG5cbiAgb25TY3JvbGwoKSB7XG4gICAgbGV0IHNjcm9sbFNlY3Rpb25PZmZzZXRUb3A7XG4gICAgdGhpcy5zY3JvbGxUYXJnZXRJZHMubWFwKChzZWN0aW9uSUQsIGluZGV4KSA9PiB7XG4gICAgICBzY3JvbGxTZWN0aW9uT2Zmc2V0VG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VjdGlvbklEKS5vZmZzZXRUb3AgLSAodGhpcy5oZWFkZXJCYWNrZ3JvdW5kID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImRpdltkYXRhLW5hdj0nbGlzdCddXCIpLnNjcm9sbEhlaWdodCA6IDApO1xuICBcbiAgICAgIGlmICh3aW5kb3cucGFnZVlPZmZzZXQgPj0gc2Nyb2xsU2VjdGlvbk9mZnNldFRvcCAmJiB3aW5kb3cucGFnZVlPZmZzZXQgPCBzY3JvbGxTZWN0aW9uT2Zmc2V0VG9wICsgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VjdGlvbklEKS5zY3JvbGxIZWlnaHQpIHtcbiAgICAgICAgdGhpcy5nZXROYXZMaW5rRWxlbWVudChzZWN0aW9uSUQpLmNsYXNzTGlzdC5hZGQodGhpcy5hY3RpdmVOYXZDbGFzcyk7XG4gICAgICAgIHRoaXMuY2xlYXJPdGhlck5hdkxpbmtBY3RpdmVTdHlsZShzZWN0aW9uSUQpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmdldE5hdkxpbmtFbGVtZW50KHNlY3Rpb25JRCkuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmFjdGl2ZU5hdkNsYXNzKTtcbiAgICAgIH1cbiAgXG4gICAgICBpZiAod2luZG93LmlubmVySGVpZ2h0ICsgd2luZG93LnBhZ2VZT2Zmc2V0ID49IGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0ICYmIGluZGV4ID09PSB0aGlzLnNjcm9sbFRhcmdldElkcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHRoaXMuZ2V0TmF2TGlua0VsZW1lbnQoc2VjdGlvbklEKS5jbGFzc0xpc3QuYWRkKHRoaXMuYWN0aXZlTmF2Q2xhc3MpO1xuICAgICAgICB0aGlzLmNsZWFyT3RoZXJOYXZMaW5rQWN0aXZlU3R5bGUoc2VjdGlvbklEKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGVhc2VJbk91dFF1YWQoY3VycmVudF90aW1lLCBzdGFydCwgY2hhbmdlLCBkdXJhdGlvbikge1xuICAgICAgY3VycmVudF90aW1lIC89IGR1cmF0aW9uLzI7XG4gICAgICBpZiAoY3VycmVudF90aW1lIDwgMSkgcmV0dXJuIGNoYW5nZS8yKmN1cnJlbnRfdGltZSpjdXJyZW50X3RpbWUgKyBzdGFydDtcbiAgICAgIGN1cnJlbnRfdGltZS0tO1xuICAgICAgcmV0dXJuIC1jaGFuZ2UvMiAqIChjdXJyZW50X3RpbWUqKGN1cnJlbnRfdGltZS0yKSAtIDEpICsgc3RhcnQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIFBlcmZvcm0gc2Nyb2xsIGFuaW1hdGlvbiB3aXRoIGdpdmVuIHN0YXJ0IHBsYWNlLCBlbmQgcGxhY2UgYW5kIGR1cmF0aW9uXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBzdGFydFxuICAgKiBAcGFyYW0ge051bWJlcn0gdG9cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGR1cmF0aW9uXG4gICAqL1xuICBzY3JvbGxUbyhzdGFydCwgdG8sIGR1cmF0aW9uKSB7XG4gICAgbGV0IGNoYW5nZSA9IHRvIC0gc3RhcnQsXG4gICAgICAgIGN1cnJlbnRUaW1lID0gMCxcbiAgICAgICAgaW5jcmVtZW50ID0gMTA7XG5cbiAgICBsZXQgYW5pbWF0ZVNjcm9sbCA9ICgpID0+IHtcbiAgICAgICAgY3VycmVudFRpbWUgKz0gaW5jcmVtZW50O1xuICAgICAgICBsZXQgdmFsID0gdGhpcy5lYXNlSW5PdXRRdWFkKGN1cnJlbnRUaW1lLCBzdGFydCwgY2hhbmdlLCBkdXJhdGlvbik7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCB2YWwpO1xuICAgICAgICBpZihjdXJyZW50VGltZSA8IGR1cmF0aW9uKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGFuaW1hdGVTY3JvbGwsIGluY3JlbWVudCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYW5pbWF0ZVNjcm9sbCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbmF2IGxpbmsgZWxlbWVudCB3aXRoIGEgZ2l2ZW4gc2VjdGlvbklEIHRoYXQgdGhlIG5hdiBsaW5rIGxpbmtzIHRvXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzZWN0aW9uSURcbiAgICovXG4gIGdldE5hdkxpbmtFbGVtZW50KHNlY3Rpb25JRCkge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBhW2hyZWY9JyR7dGhpcy5oYXNoSWRlbnRpZmllcn0ke3NlY3Rpb25JRH0nXWApO1xuICB9XG5cbiAgLyoqXG4gICAqIEdpdmVuIGEgbmF2IGhyZWYgdXJsLCBnZXQgaXRzIGNsZWFuIHNlY3Rpb25JRCBiYXNlZCBvbiBpZiB0aGVyZSBpcyBoYXNoIHJvdXRlciBpZGVudGlmaWVyIG9yIG5vdFxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmF2SHJlZlxuICAgKi9cbiAgZ2V0TmF2VG9TZWN0aW9uSUQobmF2SHJlZikge1xuICAgIHJldHVybiBuYXZIcmVmLmluY2x1ZGVzKHRoaXMuaGFzaElkZW50aWZpZXIpID8gbmF2SHJlZi5yZXBsYWNlKHRoaXMuaGFzaElkZW50aWZpZXIsIFwiXCIpIDogXCJcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhciB0aGUgaGlnaGxpZ2h0IHN0eWxlIG9uIHRoZSBub24tY3VycmVudCB2aWV3ZWQgbmF2IGVsZW1lbnRzXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBleGNsdWRlU2VjdGlvbklEIFxuICAgKi9cbiAgY2xlYXJPdGhlck5hdkxpbmtBY3RpdmVTdHlsZShleGNsdWRlU2VjdGlvbklEKSB7XG4gICAgdGhpcy5zY3JvbGxUYXJnZXRJZHMubWFwKChzZWN0aW9uSUQsIGluZGV4KSA9PiB7XG4gICAgICBpZiAoc2VjdGlvbklEICE9PSBleGNsdWRlU2VjdGlvbklEKSB7XG4gICAgICAgIHRoaXMuZ2V0TmF2TGlua0VsZW1lbnQoc2VjdGlvbklEKS5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuYWN0aXZlTmF2Q2xhc3MpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGFbaHJlZj0nJHt0aGlzLmhvbWVEZWZhdWx0TGlua30jJ11gKSkge1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgYVtocmVmPScke3RoaXMuaG9tZURlZmF1bHRMaW5rfSMnXWApLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5zY3JvbGxUbyh3aW5kb3cucGFnZVlPZmZzZXQsIDAsIHRoaXMuc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IFwiXCI7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2W2RhdGEtbmF2PSdsaXN0J11cIikucXVlcnlTZWxlY3RvckFsbChcImFcIikuZm9yRWFjaCggKG5hdkxpbmspID0+IHtcbiAgICAgIG5hdkxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgc2VjdGlvbklEID0gdGhpcy5nZXROYXZUb1NlY3Rpb25JRChuYXZMaW5rLmdldEF0dHJpYnV0ZShcImhyZWZcIikpO1xuXG4gICAgICAgIGlmKHNlY3Rpb25JRCkge1xuICAgICAgICAgIGxldCBzY3JvbGxUYXJnZXRQb3NpdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNlY3Rpb25JRCkub2Zmc2V0VG9wIC0gKHRoaXMuaGVhZGVyQmFja2dyb3VuZCA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXZbZGF0YS1uYXY9J2xpc3QnXVwiKS5zY3JvbGxIZWlnaHQgOiAwKTtcbiAgICAgICAgICB0aGlzLnNjcm9sbFRvKHdpbmRvdy5wYWdlWU9mZnNldCwgc2Nyb2xsVGFyZ2V0UG9zaXRpb24gKyB0aGlzLm9mZnNldCwgdGhpcy5zY3JvbGxEdXJhdGlvbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5zY3JvbGxUbyh3aW5kb3cucGFnZVlPZmZzZXQsIDAsIHRoaXMuc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5vblNjcm9sbCk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCB0aGlzLm9uU2Nyb2xsKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4oXG4gICAgICA8ZGl2IGRhdGEtbmF2PVwibGlzdFwiPlxuICAgICAgICB7IHRoaXMucHJvcHMuY2hpbGRyZW4gfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTY3JvbGxzcHlOYXY7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjUuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMjtuJiZTeW1ib2wuZm9yKFwicmVhY3QucGxhY2Vob2xkZXJcIik7XG52YXIgej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQShhLGIsZCxjLGUsZyxoLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtkLGMsZSxnLGgsZl0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIEIoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxkPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTA7YzxiO2MrKylkKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtBKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO20oSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsLGN1cnJlbnREaXNwYXRjaGVyOm51bGx9LEo9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxLPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBMKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilKLmNhbGwoYixjKSYmIUsuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaz1BcnJheShmKSxsPTA7bDxmO2wrKylrW2xdPWFyZ3VtZW50c1tsKzJdO2UuY2hpbGRyZW49a31pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkkuY3VycmVudH19XG5mdW5jdGlvbiBNKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsZCxjKXt2YXIgZT10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZXx8XCJib29sZWFuXCI9PT1lKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZChjLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtlPWFbaF07dmFyIGY9YitUKGUsaCk7Zys9UyhlLGYsZCxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPXomJmFbel18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxoKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFYoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGQpe3ZhciBjPWEucmVzdWx0LGU9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VyhhLGMsZCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihOKGEpJiYoYT1NKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVyhhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGFhLGIpO1IoYil9ZnVuY3Rpb24gYmEoYSxiKXt2YXIgZD1JLmN1cnJlbnREaXNwYXRjaGVyO251bGw9PT1kP0IoXCIyNzdcIik6dm9pZCAwO3JldHVybiBkLnJlYWRDb250ZXh0KGEsYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZCk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGQpO1UoYSxWLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VyhhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLHVuc3RhYmxlX3JlYWQ6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTthLkNvbnN1bWVyPWE7YS51bnN0YWJsZV9yZWFkPWJhLmJpbmQobnVsbCxhKTtyZXR1cm4gYX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LHVuc3RhYmxlX0FzeW5jTW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsY3JlYXRlRWxlbWVudDpMLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1tKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZixmPUkuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpO1xudmFyIGs9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGs9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilKLmNhbGwoYixjKSYmIUsuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWs/a1tjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2s9QXJyYXkoYyk7Zm9yKHZhciBsPTA7bDxjO2wrKylrW2xdPWFyZ3VtZW50c1tsKzJdO2UuY2hpbGRyZW49a31yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1MLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuNS4wXCIsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudE93bmVyOkksXG5hc3NpZ246bX19LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIid1c2Ugc3RyaWN0J1xuXG52YXIgbGVnYWN5ID0gcmVxdWlyZSgnY2hhcmFjdGVyLWVudGl0aWVzLWxlZ2FjeScpXG52YXIgaW52YWxpZCA9IHJlcXVpcmUoJ2NoYXJhY3Rlci1yZWZlcmVuY2UtaW52YWxpZCcpXG52YXIgZGVjaW1hbCA9IHJlcXVpcmUoJ2lzLWRlY2ltYWwnKVxudmFyIGhleGFkZWNpbWFsID0gcmVxdWlyZSgnaXMtaGV4YWRlY2ltYWwnKVxudmFyIGFscGhhbnVtZXJpY2FsID0gcmVxdWlyZSgnaXMtYWxwaGFudW1lcmljYWwnKVxudmFyIGRlY29kZUVudGl0eSA9IHJlcXVpcmUoJy4vZGVjb2RlLWVudGl0eScpXG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VFbnRpdGllc1xuXG52YXIgb3duID0ge30uaGFzT3duUHJvcGVydHlcbnZhciBmcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlXG52YXIgbm9vcCA9IEZ1bmN0aW9uLnByb3RvdHlwZVxuXG4vLyBEZWZhdWx0IHNldHRpbmdzLlxudmFyIGRlZmF1bHRzID0ge1xuICB3YXJuaW5nOiBudWxsLFxuICByZWZlcmVuY2U6IG51bGwsXG4gIHRleHQ6IG51bGwsXG4gIHdhcm5pbmdDb250ZXh0OiBudWxsLFxuICByZWZlcmVuY2VDb250ZXh0OiBudWxsLFxuICB0ZXh0Q29udGV4dDogbnVsbCxcbiAgcG9zaXRpb246IHt9LFxuICBhZGRpdGlvbmFsOiBudWxsLFxuICBhdHRyaWJ1dGU6IGZhbHNlLFxuICBub25UZXJtaW5hdGVkOiB0cnVlXG59XG5cbi8vIENoYXJhY3RlcnMuXG52YXIgdGFiID0gOSAvLyAnXFx0J1xudmFyIGxpbmVGZWVkID0gMTAgLy8gJ1xcbidcbnZhciBmb3JtRmVlZCA9IDEyIC8vICAnXFxmJ1xudmFyIHNwYWNlID0gMzIgLy8gJyAnXG52YXIgYW1wZXJzYW5kID0gMzggLy8gICcmJ1xudmFyIHNlbWljb2xvbiA9IDU5IC8vICAnOydcbnZhciBsZXNzVGhhbiA9IDYwIC8vICAnPCdcbnZhciBlcXVhbHNUbyA9IDYxIC8vICAnPSdcbnZhciBudW1iZXJTaWduID0gMzUgLy8gICcjJ1xudmFyIHVwcGVyY2FzZVggPSA4OCAvLyAgJ1gnXG52YXIgbG93ZXJjYXNlWCA9IDEyMCAvLyAgJ3gnXG52YXIgcmVwbGFjZW1lbnRDaGFyYWN0ZXIgPSA2NTUzMyAvLyAn77+9J1xuXG4vLyBSZWZlcmVuY2UgdHlwZXMuXG52YXIgbmFtZSA9ICduYW1lZCdcbnZhciBoZXhhID0gJ2hleGFkZWNpbWFsJ1xudmFyIGRlY2kgPSAnZGVjaW1hbCdcblxuLy8gTWFwIG9mIGJhc2VzLlxudmFyIGJhc2VzID0ge31cblxuYmFzZXNbaGV4YV0gPSAxNlxuYmFzZXNbZGVjaV0gPSAxMFxuXG4vLyBNYXAgb2YgdHlwZXMgdG8gdGVzdHMuXG4vLyBFYWNoIHR5cGUgb2YgY2hhcmFjdGVyIHJlZmVyZW5jZSBhY2NlcHRzIGRpZmZlcmVudCBjaGFyYWN0ZXJzLlxuLy8gVGhpcyB0ZXN0IGlzIHVzZWQgdG8gZGV0ZWN0IHdoZXRoZXIgYSByZWZlcmVuY2UgaGFzIGVuZGVkIChhcyB0aGUgc2VtaWNvbG9uXG4vLyBpcyBub3Qgc3RyaWN0bHkgbmVlZGVkKS5cbnZhciB0ZXN0cyA9IHt9XG5cbnRlc3RzW25hbWVdID0gYWxwaGFudW1lcmljYWxcbnRlc3RzW2RlY2ldID0gZGVjaW1hbFxudGVzdHNbaGV4YV0gPSBoZXhhZGVjaW1hbFxuXG4vLyBXYXJuaW5nIHR5cGVzLlxudmFyIG5hbWVkTm90VGVybWluYXRlZCA9IDFcbnZhciBudW1lcmljTm90VGVybWluYXRlZCA9IDJcbnZhciBuYW1lZEVtcHR5ID0gM1xudmFyIG51bWVyaWNFbXB0eSA9IDRcbnZhciBuYW1lZFVua25vd24gPSA1XG52YXIgbnVtZXJpY0Rpc2FsbG93ZWQgPSA2XG52YXIgbnVtZXJpY1Byb2hpYml0ZWQgPSA3XG5cbi8vIFdhcm5pbmcgbWVzc2FnZXMuXG52YXIgbWVzc2FnZXMgPSB7fVxuXG5tZXNzYWdlc1tuYW1lZE5vdFRlcm1pbmF0ZWRdID1cbiAgJ05hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzIG11c3QgYmUgdGVybWluYXRlZCBieSBhIHNlbWljb2xvbidcbm1lc3NhZ2VzW251bWVyaWNOb3RUZXJtaW5hdGVkXSA9XG4gICdOdW1lcmljIGNoYXJhY3RlciByZWZlcmVuY2VzIG11c3QgYmUgdGVybWluYXRlZCBieSBhIHNlbWljb2xvbidcbm1lc3NhZ2VzW25hbWVkRW1wdHldID0gJ05hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzIGNhbm5vdCBiZSBlbXB0eSdcbm1lc3NhZ2VzW251bWVyaWNFbXB0eV0gPSAnTnVtZXJpYyBjaGFyYWN0ZXIgcmVmZXJlbmNlcyBjYW5ub3QgYmUgZW1wdHknXG5tZXNzYWdlc1tuYW1lZFVua25vd25dID0gJ05hbWVkIGNoYXJhY3RlciByZWZlcmVuY2VzIG11c3QgYmUga25vd24nXG5tZXNzYWdlc1tudW1lcmljRGlzYWxsb3dlZF0gPVxuICAnTnVtZXJpYyBjaGFyYWN0ZXIgcmVmZXJlbmNlcyBjYW5ub3QgYmUgZGlzYWxsb3dlZCdcbm1lc3NhZ2VzW251bWVyaWNQcm9oaWJpdGVkXSA9XG4gICdOdW1lcmljIGNoYXJhY3RlciByZWZlcmVuY2VzIGNhbm5vdCBiZSBvdXRzaWRlIHRoZSBwZXJtaXNzaWJsZSBVbmljb2RlIHJhbmdlJ1xuXG4vLyBXcmFwIHRvIGVuc3VyZSBjbGVhbiBwYXJhbWV0ZXJzIGFyZSBnaXZlbiB0byBgcGFyc2VgLlxuZnVuY3Rpb24gcGFyc2VFbnRpdGllcyh2YWx1ZSwgb3B0aW9ucykge1xuICB2YXIgc2V0dGluZ3MgPSB7fVxuICB2YXIgb3B0aW9uXG4gIHZhciBrZXlcblxuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge31cbiAgfVxuXG4gIGZvciAoa2V5IGluIGRlZmF1bHRzKSB7XG4gICAgb3B0aW9uID0gb3B0aW9uc1trZXldXG4gICAgc2V0dGluZ3Nba2V5XSA9XG4gICAgICBvcHRpb24gPT09IG51bGwgfHwgb3B0aW9uID09PSB1bmRlZmluZWQgPyBkZWZhdWx0c1trZXldIDogb3B0aW9uXG4gIH1cblxuICBpZiAoc2V0dGluZ3MucG9zaXRpb24uaW5kZW50IHx8IHNldHRpbmdzLnBvc2l0aW9uLnN0YXJ0KSB7XG4gICAgc2V0dGluZ3MuaW5kZW50ID0gc2V0dGluZ3MucG9zaXRpb24uaW5kZW50IHx8IFtdXG4gICAgc2V0dGluZ3MucG9zaXRpb24gPSBzZXR0aW5ncy5wb3NpdGlvbi5zdGFydFxuICB9XG5cbiAgcmV0dXJuIHBhcnNlKHZhbHVlLCBzZXR0aW5ncylcbn1cblxuLy8gUGFyc2UgZW50aXRpZXMuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZnVuY3Rpb24gcGFyc2UodmFsdWUsIHNldHRpbmdzKSB7XG4gIHZhciBhZGRpdGlvbmFsID0gc2V0dGluZ3MuYWRkaXRpb25hbFxuICB2YXIgbm9uVGVybWluYXRlZCA9IHNldHRpbmdzLm5vblRlcm1pbmF0ZWRcbiAgdmFyIGhhbmRsZVRleHQgPSBzZXR0aW5ncy50ZXh0XG4gIHZhciBoYW5kbGVSZWZlcmVuY2UgPSBzZXR0aW5ncy5yZWZlcmVuY2VcbiAgdmFyIGhhbmRsZVdhcm5pbmcgPSBzZXR0aW5ncy53YXJuaW5nXG4gIHZhciB0ZXh0Q29udGV4dCA9IHNldHRpbmdzLnRleHRDb250ZXh0XG4gIHZhciByZWZlcmVuY2VDb250ZXh0ID0gc2V0dGluZ3MucmVmZXJlbmNlQ29udGV4dFxuICB2YXIgd2FybmluZ0NvbnRleHQgPSBzZXR0aW5ncy53YXJuaW5nQ29udGV4dFxuICB2YXIgcG9zID0gc2V0dGluZ3MucG9zaXRpb25cbiAgdmFyIGluZGVudCA9IHNldHRpbmdzLmluZGVudCB8fCBbXVxuICB2YXIgbGVuZ3RoID0gdmFsdWUubGVuZ3RoXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIGxpbmVzID0gLTFcbiAgdmFyIGNvbHVtbiA9IHBvcy5jb2x1bW4gfHwgMVxuICB2YXIgbGluZSA9IHBvcy5saW5lIHx8IDFcbiAgdmFyIHF1ZXVlID0gJydcbiAgdmFyIHJlc3VsdCA9IFtdXG4gIHZhciBlbnRpdHlDaGFyYWN0ZXJzXG4gIHZhciBuYW1lZEVudGl0eVxuICB2YXIgdGVybWluYXRlZFxuICB2YXIgY2hhcmFjdGVyc1xuICB2YXIgY2hhcmFjdGVyXG4gIHZhciByZWZlcmVuY2VcbiAgdmFyIGZvbGxvd2luZ1xuICB2YXIgd2FybmluZ1xuICB2YXIgcmVhc29uXG4gIHZhciBvdXRwdXRcbiAgdmFyIGVudGl0eVxuICB2YXIgYmVnaW5cbiAgdmFyIHN0YXJ0XG4gIHZhciB0eXBlXG4gIHZhciB0ZXN0XG4gIHZhciBwcmV2XG4gIHZhciBuZXh0XG4gIHZhciBkaWZmXG4gIHZhciBlbmRcblxuICBpZiAodHlwZW9mIGFkZGl0aW9uYWwgPT09ICdzdHJpbmcnKSB7XG4gICAgYWRkaXRpb25hbCA9IGFkZGl0aW9uYWwuY2hhckNvZGVBdCgwKVxuICB9XG5cbiAgLy8gQ2FjaGUgdGhlIGN1cnJlbnQgcG9pbnQuXG4gIHByZXYgPSBub3coKVxuXG4gIC8vIFdyYXAgYGhhbmRsZVdhcm5pbmdgLlxuICB3YXJuaW5nID0gaGFuZGxlV2FybmluZyA/IHBhcnNlRXJyb3IgOiBub29wXG5cbiAgLy8gRW5zdXJlIHRoZSBhbGdvcml0aG0gd2Fsa3Mgb3ZlciB0aGUgZmlyc3QgY2hhcmFjdGVyIGFuZCB0aGUgZW5kIChpbmNsdXNpdmUpLlxuICBpbmRleC0tXG4gIGxlbmd0aCsrXG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAvLyBJZiB0aGUgcHJldmlvdXMgY2hhcmFjdGVyIHdhcyBhIG5ld2xpbmUuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gbGluZUZlZWQpIHtcbiAgICAgIGNvbHVtbiA9IGluZGVudFtsaW5lc10gfHwgMVxuICAgIH1cblxuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJDb2RlQXQoaW5kZXgpXG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBhbXBlcnNhbmQpIHtcbiAgICAgIGZvbGxvd2luZyA9IHZhbHVlLmNoYXJDb2RlQXQoaW5kZXggKyAxKVxuXG4gICAgICAvLyBUaGUgYmVoYXZpb3VyIGRlcGVuZHMgb24gdGhlIGlkZW50aXR5IG9mIHRoZSBuZXh0IGNoYXJhY3Rlci5cbiAgICAgIGlmIChcbiAgICAgICAgZm9sbG93aW5nID09PSB0YWIgfHxcbiAgICAgICAgZm9sbG93aW5nID09PSBsaW5lRmVlZCB8fFxuICAgICAgICBmb2xsb3dpbmcgPT09IGZvcm1GZWVkIHx8XG4gICAgICAgIGZvbGxvd2luZyA9PT0gc3BhY2UgfHxcbiAgICAgICAgZm9sbG93aW5nID09PSBhbXBlcnNhbmQgfHxcbiAgICAgICAgZm9sbG93aW5nID09PSBsZXNzVGhhbiB8fFxuICAgICAgICBmb2xsb3dpbmcgIT09IGZvbGxvd2luZyB8fFxuICAgICAgICAoYWRkaXRpb25hbCAmJiBmb2xsb3dpbmcgPT09IGFkZGl0aW9uYWwpXG4gICAgICApIHtcbiAgICAgICAgLy8gTm90IGEgY2hhcmFjdGVyIHJlZmVyZW5jZS5cbiAgICAgICAgLy8gTm8gY2hhcmFjdGVycyBhcmUgY29uc3VtZWQsIGFuZCBub3RoaW5nIGlzIHJldHVybmVkLlxuICAgICAgICAvLyBUaGlzIGlzIG5vdCBhbiBlcnJvciwgZWl0aGVyLlxuICAgICAgICBxdWV1ZSArPSBmcm9tQ2hhckNvZGUoY2hhcmFjdGVyKVxuICAgICAgICBjb2x1bW4rK1xuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHN0YXJ0ID0gaW5kZXggKyAxXG4gICAgICBiZWdpbiA9IHN0YXJ0XG4gICAgICBlbmQgPSBzdGFydFxuXG4gICAgICBpZiAoZm9sbG93aW5nID09PSBudW1iZXJTaWduKSB7XG4gICAgICAgIC8vIE51bWVyaWNhbCBlbnRpdHkuXG4gICAgICAgIGVuZCA9ICsrYmVnaW5cblxuICAgICAgICAvLyBUaGUgYmVoYXZpb3VyIGZ1cnRoZXIgZGVwZW5kcyBvbiB0aGUgbmV4dCBjaGFyYWN0ZXIuXG4gICAgICAgIGZvbGxvd2luZyA9IHZhbHVlLmNoYXJDb2RlQXQoZW5kKVxuXG4gICAgICAgIGlmIChmb2xsb3dpbmcgPT09IHVwcGVyY2FzZVggfHwgZm9sbG93aW5nID09PSBsb3dlcmNhc2VYKSB7XG4gICAgICAgICAgLy8gQVNDSUkgaGV4IGRpZ2l0cy5cbiAgICAgICAgICB0eXBlID0gaGV4YVxuICAgICAgICAgIGVuZCA9ICsrYmVnaW5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBBU0NJSSBkaWdpdHMuXG4gICAgICAgICAgdHlwZSA9IGRlY2lcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTmFtZWQgZW50aXR5LlxuICAgICAgICB0eXBlID0gbmFtZVxuICAgICAgfVxuXG4gICAgICBlbnRpdHlDaGFyYWN0ZXJzID0gJydcbiAgICAgIGVudGl0eSA9ICcnXG4gICAgICBjaGFyYWN0ZXJzID0gJydcbiAgICAgIHRlc3QgPSB0ZXN0c1t0eXBlXVxuICAgICAgZW5kLS1cblxuICAgICAgd2hpbGUgKCsrZW5kIDwgbGVuZ3RoKSB7XG4gICAgICAgIGZvbGxvd2luZyA9IHZhbHVlLmNoYXJDb2RlQXQoZW5kKVxuXG4gICAgICAgIGlmICghdGVzdChmb2xsb3dpbmcpKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuXG4gICAgICAgIGNoYXJhY3RlcnMgKz0gZnJvbUNoYXJDb2RlKGZvbGxvd2luZylcblxuICAgICAgICAvLyBDaGVjayBpZiB3ZSBjYW4gbWF0Y2ggYSBsZWdhY3kgbmFtZWQgcmVmZXJlbmNlLlxuICAgICAgICAvLyBJZiBzbywgd2UgY2FjaGUgdGhhdCBhcyB0aGUgbGFzdCB2aWFibGUgbmFtZWQgcmVmZXJlbmNlLlxuICAgICAgICAvLyBUaGlzIGVuc3VyZXMgd2UgZG8gbm90IG5lZWQgdG8gd2FsayBiYWNrd2FyZHMgbGF0ZXIuXG4gICAgICAgIGlmICh0eXBlID09PSBuYW1lICYmIG93bi5jYWxsKGxlZ2FjeSwgY2hhcmFjdGVycykpIHtcbiAgICAgICAgICBlbnRpdHlDaGFyYWN0ZXJzID0gY2hhcmFjdGVyc1xuICAgICAgICAgIGVudGl0eSA9IGxlZ2FjeVtjaGFyYWN0ZXJzXVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRlcm1pbmF0ZWQgPSB2YWx1ZS5jaGFyQ29kZUF0KGVuZCkgPT09IHNlbWljb2xvblxuXG4gICAgICBpZiAodGVybWluYXRlZCkge1xuICAgICAgICBlbmQrK1xuXG4gICAgICAgIG5hbWVkRW50aXR5ID0gdHlwZSA9PT0gbmFtZSA/IGRlY29kZUVudGl0eShjaGFyYWN0ZXJzKSA6IGZhbHNlXG5cbiAgICAgICAgaWYgKG5hbWVkRW50aXR5KSB7XG4gICAgICAgICAgZW50aXR5Q2hhcmFjdGVycyA9IGNoYXJhY3RlcnNcbiAgICAgICAgICBlbnRpdHkgPSBuYW1lZEVudGl0eVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGRpZmYgPSAxICsgZW5kIC0gc3RhcnRcblxuICAgICAgaWYgKCF0ZXJtaW5hdGVkICYmICFub25UZXJtaW5hdGVkKSB7XG4gICAgICAgIC8vIEVtcHR5LlxuICAgICAgfSBlbHNlIGlmICghY2hhcmFjdGVycykge1xuICAgICAgICAvLyBBbiBlbXB0eSAocG9zc2libGUpIGVudGl0eSBpcyB2YWxpZCwgdW5sZXNzIGl04oCZcyBudW1lcmljICh0aHVzIGFuXG4gICAgICAgIC8vIGFtcGVyc2FuZCBmb2xsb3dlZCBieSBhbiBvY3RvdGhvcnApLlxuICAgICAgICBpZiAodHlwZSAhPT0gbmFtZSkge1xuICAgICAgICAgIHdhcm5pbmcobnVtZXJpY0VtcHR5LCBkaWZmKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IG5hbWUpIHtcbiAgICAgICAgLy8gQW4gYW1wZXJzYW5kIGZvbGxvd2VkIGJ5IGFueXRoaW5nIHVua25vd24sIGFuZCBub3QgdGVybWluYXRlZCwgaXNcbiAgICAgICAgLy8gaW52YWxpZC5cbiAgICAgICAgaWYgKHRlcm1pbmF0ZWQgJiYgIWVudGl0eSkge1xuICAgICAgICAgIHdhcm5pbmcobmFtZWRVbmtub3duLCAxKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIElmIHRoZXJlcyBzb21ldGhpbmcgYWZ0ZXIgYW4gZW50aXR5IG5hbWUgd2hpY2ggaXMgbm90IGtub3duLCBjYXBcbiAgICAgICAgICAvLyB0aGUgcmVmZXJlbmNlLlxuICAgICAgICAgIGlmIChlbnRpdHlDaGFyYWN0ZXJzICE9PSBjaGFyYWN0ZXJzKSB7XG4gICAgICAgICAgICBlbmQgPSBiZWdpbiArIGVudGl0eUNoYXJhY3RlcnMubGVuZ3RoXG4gICAgICAgICAgICBkaWZmID0gMSArIGVuZCAtIGJlZ2luXG4gICAgICAgICAgICB0ZXJtaW5hdGVkID0gZmFsc2VcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBJZiB0aGUgcmVmZXJlbmNlIGlzIG5vdCB0ZXJtaW5hdGVkLCB3YXJuLlxuICAgICAgICAgIGlmICghdGVybWluYXRlZCkge1xuICAgICAgICAgICAgcmVhc29uID0gZW50aXR5Q2hhcmFjdGVycyA/IG5hbWVkTm90VGVybWluYXRlZCA6IG5hbWVkRW1wdHlcblxuICAgICAgICAgICAgaWYgKHNldHRpbmdzLmF0dHJpYnV0ZSkge1xuICAgICAgICAgICAgICBmb2xsb3dpbmcgPSB2YWx1ZS5jaGFyQ29kZUF0KGVuZClcblxuICAgICAgICAgICAgICBpZiAoZm9sbG93aW5nID09PSBlcXVhbHNUbykge1xuICAgICAgICAgICAgICAgIHdhcm5pbmcocmVhc29uLCBkaWZmKVxuICAgICAgICAgICAgICAgIGVudGl0eSA9IG51bGxcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChhbHBoYW51bWVyaWNhbChmb2xsb3dpbmcpKSB7XG4gICAgICAgICAgICAgICAgZW50aXR5ID0gbnVsbFxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdhcm5pbmcocmVhc29uLCBkaWZmKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB3YXJuaW5nKHJlYXNvbiwgZGlmZilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZWZlcmVuY2UgPSBlbnRpdHlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdGVybWluYXRlZCkge1xuICAgICAgICAgIC8vIEFsbCBub24tdGVybWluYXRlZCBudW1lcmljIGVudGl0aWVzIGFyZSBub3QgcmVuZGVyZWQsIGFuZCB0cmlnZ2VyIGFcbiAgICAgICAgICAvLyB3YXJuaW5nLlxuICAgICAgICAgIHdhcm5pbmcobnVtZXJpY05vdFRlcm1pbmF0ZWQsIGRpZmYpXG4gICAgICAgIH1cblxuICAgICAgICAvLyBXaGVuIHRlcm1pbmF0ZWQgYW5kIG51bWJlciwgcGFyc2UgYXMgZWl0aGVyIGhleGFkZWNpbWFsIG9yIGRlY2ltYWwuXG4gICAgICAgIHJlZmVyZW5jZSA9IHBhcnNlSW50KGNoYXJhY3RlcnMsIGJhc2VzW3R5cGVdKVxuXG4gICAgICAgIC8vIFRyaWdnZXIgYSB3YXJuaW5nIHdoZW4gdGhlIHBhcnNlZCBudW1iZXIgaXMgcHJvaGliaXRlZCwgYW5kIHJlcGxhY2VcbiAgICAgICAgLy8gd2l0aCByZXBsYWNlbWVudCBjaGFyYWN0ZXIuXG4gICAgICAgIGlmIChwcm9oaWJpdGVkKHJlZmVyZW5jZSkpIHtcbiAgICAgICAgICB3YXJuaW5nKG51bWVyaWNQcm9oaWJpdGVkLCBkaWZmKVxuICAgICAgICAgIHJlZmVyZW5jZSA9IGZyb21DaGFyQ29kZShyZXBsYWNlbWVudENoYXJhY3RlcilcbiAgICAgICAgfSBlbHNlIGlmIChyZWZlcmVuY2UgaW4gaW52YWxpZCkge1xuICAgICAgICAgIC8vIFRyaWdnZXIgYSB3YXJuaW5nIHdoZW4gdGhlIHBhcnNlZCBudW1iZXIgaXMgZGlzYWxsb3dlZCwgYW5kIHJlcGxhY2VcbiAgICAgICAgICAvLyBieSBhbiBhbHRlcm5hdGl2ZS5cbiAgICAgICAgICB3YXJuaW5nKG51bWVyaWNEaXNhbGxvd2VkLCBkaWZmKVxuICAgICAgICAgIHJlZmVyZW5jZSA9IGludmFsaWRbcmVmZXJlbmNlXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFBhcnNlIHRoZSBudW1iZXIuXG4gICAgICAgICAgb3V0cHV0ID0gJydcblxuICAgICAgICAgIC8vIFRyaWdnZXIgYSB3YXJuaW5nIHdoZW4gdGhlIHBhcnNlZCBudW1iZXIgc2hvdWxkIG5vdCBiZSB1c2VkLlxuICAgICAgICAgIGlmIChkaXNhbGxvd2VkKHJlZmVyZW5jZSkpIHtcbiAgICAgICAgICAgIHdhcm5pbmcobnVtZXJpY0Rpc2FsbG93ZWQsIGRpZmYpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gU3RyaW5naWZ5IHRoZSBudW1iZXIuXG4gICAgICAgICAgaWYgKHJlZmVyZW5jZSA+IDB4ZmZmZikge1xuICAgICAgICAgICAgcmVmZXJlbmNlIC09IDB4MTAwMDBcbiAgICAgICAgICAgIG91dHB1dCArPSBmcm9tQ2hhckNvZGUoKHJlZmVyZW5jZSA+Pj4gKDEwICYgMHgzZmYpKSB8IDB4ZDgwMClcbiAgICAgICAgICAgIHJlZmVyZW5jZSA9IDB4ZGMwMCB8IChyZWZlcmVuY2UgJiAweDNmZilcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZWZlcmVuY2UgPSBvdXRwdXQgKyBmcm9tQ2hhckNvZGUocmVmZXJlbmNlKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEZvdW5kIGl0IVxuICAgICAgLy8gRmlyc3QgZWF0IHRoZSBxdWV1ZWQgY2hhcmFjdGVycyBhcyBub3JtYWwgdGV4dCwgdGhlbiBlYXQgYW4gZW50aXR5LlxuICAgICAgaWYgKHJlZmVyZW5jZSkge1xuICAgICAgICBmbHVzaCgpXG5cbiAgICAgICAgcHJldiA9IG5vdygpXG4gICAgICAgIGluZGV4ID0gZW5kIC0gMVxuICAgICAgICBjb2x1bW4gKz0gZW5kIC0gc3RhcnQgKyAxXG4gICAgICAgIHJlc3VsdC5wdXNoKHJlZmVyZW5jZSlcbiAgICAgICAgbmV4dCA9IG5vdygpXG4gICAgICAgIG5leHQub2Zmc2V0KytcblxuICAgICAgICBpZiAoaGFuZGxlUmVmZXJlbmNlKSB7XG4gICAgICAgICAgaGFuZGxlUmVmZXJlbmNlLmNhbGwoXG4gICAgICAgICAgICByZWZlcmVuY2VDb250ZXh0LFxuICAgICAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICAgICAge3N0YXJ0OiBwcmV2LCBlbmQ6IG5leHR9LFxuICAgICAgICAgICAgdmFsdWUuc2xpY2Uoc3RhcnQgLSAxLCBlbmQpXG4gICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgcHJldiA9IG5leHRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIHdlIGNvdWxkIG5vdCBmaW5kIGEgcmVmZXJlbmNlLCBxdWV1ZSB0aGUgY2hlY2tlZCBjaGFyYWN0ZXJzIChhc1xuICAgICAgICAvLyBub3JtYWwgY2hhcmFjdGVycyksIGFuZCBtb3ZlIHRoZSBwb2ludGVyIHRvIHRoZWlyIGVuZC5cbiAgICAgICAgLy8gVGhpcyBpcyBwb3NzaWJsZSBiZWNhdXNlIHdlIGNhbiBiZSBjZXJ0YWluIG5laXRoZXIgbmV3bGluZXMgbm9yXG4gICAgICAgIC8vIGFtcGVyc2FuZHMgYXJlIGluY2x1ZGVkLlxuICAgICAgICBjaGFyYWN0ZXJzID0gdmFsdWUuc2xpY2Uoc3RhcnQgLSAxLCBlbmQpXG4gICAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcnNcbiAgICAgICAgY29sdW1uICs9IGNoYXJhY3RlcnMubGVuZ3RoXG4gICAgICAgIGluZGV4ID0gZW5kIC0gMVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBIYW5kbGUgYW55dGhpbmcgb3RoZXIgdGhhbiBhbiBhbXBlcnNhbmQsIGluY2x1ZGluZyBuZXdsaW5lcyBhbmQgRU9GLlxuICAgICAgaWYgKFxuICAgICAgICBjaGFyYWN0ZXIgPT09IDEwIC8vIExpbmUgZmVlZFxuICAgICAgKSB7XG4gICAgICAgIGxpbmUrK1xuICAgICAgICBsaW5lcysrXG4gICAgICAgIGNvbHVtbiA9IDBcbiAgICAgIH1cblxuICAgICAgaWYgKGNoYXJhY3RlciA9PT0gY2hhcmFjdGVyKSB7XG4gICAgICAgIHF1ZXVlICs9IGZyb21DaGFyQ29kZShjaGFyYWN0ZXIpXG4gICAgICAgIGNvbHVtbisrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmbHVzaCgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gUmV0dXJuIHRoZSByZWR1Y2VkIG5vZGVzLCBhbmQgYW55IHBvc3NpYmxlIHdhcm5pbmdzLlxuICByZXR1cm4gcmVzdWx0LmpvaW4oJycpXG5cbiAgLy8gR2V0IGN1cnJlbnQgcG9zaXRpb24uXG4gIGZ1bmN0aW9uIG5vdygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGluZTogbGluZSxcbiAgICAgIGNvbHVtbjogY29sdW1uLFxuICAgICAgb2Zmc2V0OiBpbmRleCArIChwb3Mub2Zmc2V0IHx8IDApXG4gICAgfVxuICB9XG5cbiAgLy8g4oCcVGhyb3figJ0gYSBwYXJzZS1lcnJvcjogYSB3YXJuaW5nLlxuICBmdW5jdGlvbiBwYXJzZUVycm9yKGNvZGUsIG9mZnNldCkge1xuICAgIHZhciBwb3NpdGlvbiA9IG5vdygpXG5cbiAgICBwb3NpdGlvbi5jb2x1bW4gKz0gb2Zmc2V0XG4gICAgcG9zaXRpb24ub2Zmc2V0ICs9IG9mZnNldFxuXG4gICAgaGFuZGxlV2FybmluZy5jYWxsKHdhcm5pbmdDb250ZXh0LCBtZXNzYWdlc1tjb2RlXSwgcG9zaXRpb24sIGNvZGUpXG4gIH1cblxuICAvLyBGbHVzaCBgcXVldWVgIChub3JtYWwgdGV4dCkuXG4gIC8vIE1hY3JvIGludm9rZWQgYmVmb3JlIGVhY2ggZW50aXR5IGFuZCBhdCB0aGUgZW5kIG9mIGB2YWx1ZWAuXG4gIC8vIERvZXMgbm90aGluZyB3aGVuIGBxdWV1ZWAgaXMgZW1wdHkuXG4gIGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIGlmIChxdWV1ZSkge1xuICAgICAgcmVzdWx0LnB1c2gocXVldWUpXG5cbiAgICAgIGlmIChoYW5kbGVUZXh0KSB7XG4gICAgICAgIGhhbmRsZVRleHQuY2FsbCh0ZXh0Q29udGV4dCwgcXVldWUsIHtzdGFydDogcHJldiwgZW5kOiBub3coKX0pXG4gICAgICB9XG5cbiAgICAgIHF1ZXVlID0gJydcbiAgICB9XG4gIH1cbn1cblxuLy8gQ2hlY2sgaWYgYGNoYXJhY3RlcmAgaXMgb3V0c2lkZSB0aGUgcGVybWlzc2libGUgdW5pY29kZSByYW5nZS5cbmZ1bmN0aW9uIHByb2hpYml0ZWQoY29kZSkge1xuICByZXR1cm4gKGNvZGUgPj0gMHhkODAwICYmIGNvZGUgPD0gMHhkZmZmKSB8fCBjb2RlID4gMHgxMGZmZmZcbn1cblxuLy8gQ2hlY2sgaWYgYGNoYXJhY3RlcmAgaXMgZGlzYWxsb3dlZC5cbmZ1bmN0aW9uIGRpc2FsbG93ZWQoY29kZSkge1xuICByZXR1cm4gKFxuICAgIChjb2RlID49IDB4MDAwMSAmJiBjb2RlIDw9IDB4MDAwOCkgfHxcbiAgICBjb2RlID09PSAweDAwMGIgfHxcbiAgICAoY29kZSA+PSAweDAwMGQgJiYgY29kZSA8PSAweDAwMWYpIHx8XG4gICAgKGNvZGUgPj0gMHgwMDdmICYmIGNvZGUgPD0gMHgwMDlmKSB8fFxuICAgIChjb2RlID49IDB4ZmRkMCAmJiBjb2RlIDw9IDB4ZmRlZikgfHxcbiAgICAoY29kZSAmIDB4ZmZmZikgPT09IDB4ZmZmZiB8fFxuICAgIChjb2RlICYgMHhmZmZmKSA9PT0gMHhmZmZlXG4gIClcbn1cbiIsIi8qIVxuICogcmVwZWF0LXN0cmluZyA8aHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQvcmVwZWF0LXN0cmluZz5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNSwgSm9uIFNjaGxpbmtlcnQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFJlc3VsdHMgY2FjaGVcbiAqL1xuXG52YXIgcmVzID0gJyc7XG52YXIgY2FjaGU7XG5cbi8qKlxuICogRXhwb3NlIGByZXBlYXRgXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXBlYXQ7XG5cbi8qKlxuICogUmVwZWF0IHRoZSBnaXZlbiBgc3RyaW5nYCB0aGUgc3BlY2lmaWVkIGBudW1iZXJgXG4gKiBvZiB0aW1lcy5cbiAqXG4gKiAqKkV4YW1wbGU6KipcbiAqXG4gKiBgYGBqc1xuICogdmFyIHJlcGVhdCA9IHJlcXVpcmUoJ3JlcGVhdC1zdHJpbmcnKTtcbiAqIHJlcGVhdCgnQScsIDUpO1xuICogLy89PiBBQUFBQVxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGBzdHJpbmdgIFRoZSBzdHJpbmcgdG8gcmVwZWF0XG4gKiBAcGFyYW0ge051bWJlcn0gYG51bWJlcmAgVGhlIG51bWJlciBvZiB0aW1lcyB0byByZXBlYXQgdGhlIHN0cmluZ1xuICogQHJldHVybiB7U3RyaW5nfSBSZXBlYXRlZCBzdHJpbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcmVwZWF0KHN0ciwgbnVtKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4cGVjdGVkIGEgc3RyaW5nJyk7XG4gIH1cblxuICAvLyBjb3ZlciBjb21tb24sIHF1aWNrIHVzZSBjYXNlc1xuICBpZiAobnVtID09PSAxKSByZXR1cm4gc3RyO1xuICBpZiAobnVtID09PSAyKSByZXR1cm4gc3RyICsgc3RyO1xuXG4gIHZhciBtYXggPSBzdHIubGVuZ3RoICogbnVtO1xuICBpZiAoY2FjaGUgIT09IHN0ciB8fCB0eXBlb2YgY2FjaGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2FjaGUgPSBzdHI7XG4gICAgcmVzID0gJyc7XG4gIH0gZWxzZSBpZiAocmVzLmxlbmd0aCA+PSBtYXgpIHtcbiAgICByZXR1cm4gcmVzLnN1YnN0cigwLCBtYXgpO1xuICB9XG5cbiAgd2hpbGUgKG1heCA+IHJlcy5sZW5ndGggJiYgbnVtID4gMSkge1xuICAgIGlmIChudW0gJiAxKSB7XG4gICAgICByZXMgKz0gc3RyO1xuICAgIH1cblxuICAgIG51bSA+Pj0gMTtcbiAgICBzdHIgKz0gc3RyO1xuICB9XG5cbiAgcmVzICs9IHN0cjtcbiAgcmVzID0gcmVzLnN1YnN0cigwLCBtYXgpO1xuICByZXR1cm4gcmVzO1xufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gdHJpbVRyYWlsaW5nTGluZXNcblxudmFyIGxpbmUgPSAnXFxuJ1xuXG4vLyBSZW1vdmUgZmluYWwgbmV3bGluZSBjaGFyYWN0ZXJzIGZyb20gYHZhbHVlYC5cbmZ1bmN0aW9uIHRyaW1UcmFpbGluZ0xpbmVzKHZhbHVlKSB7XG4gIHZhciB2YWwgPSBTdHJpbmcodmFsdWUpXG4gIHZhciBpbmRleCA9IHZhbC5sZW5ndGhcblxuICB3aGlsZSAodmFsLmNoYXJBdCgtLWluZGV4KSA9PT0gbGluZSkge1xuICAgIC8vIEVtcHR5XG4gIH1cblxuICByZXR1cm4gdmFsLnNsaWNlKDAsIGluZGV4ICsgMSlcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBpbnRlcnJ1cHQ7XG5cbmZ1bmN0aW9uIGludGVycnVwdChpbnRlcnJ1cHRvcnMsIHRva2VuaXplcnMsIGN0eCwgcGFyYW1zKSB7XG4gIHZhciBib29scyA9IFsncGVkYW50aWMnLCAnY29tbW9ubWFyayddO1xuICB2YXIgY291bnQgPSBib29scy5sZW5ndGg7XG4gIHZhciBsZW5ndGggPSBpbnRlcnJ1cHRvcnMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAtMTtcbiAgdmFyIGludGVycnVwdG9yO1xuICB2YXIgY29uZmlnO1xuICB2YXIgZm47XG4gIHZhciBvZmZzZXQ7XG4gIHZhciBib29sO1xuICB2YXIgaWdub3JlO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaW50ZXJydXB0b3IgPSBpbnRlcnJ1cHRvcnNbaW5kZXhdO1xuICAgIGNvbmZpZyA9IGludGVycnVwdG9yWzFdIHx8IHt9O1xuICAgIGZuID0gaW50ZXJydXB0b3JbMF07XG4gICAgb2Zmc2V0ID0gLTE7XG4gICAgaWdub3JlID0gZmFsc2U7XG5cbiAgICB3aGlsZSAoKytvZmZzZXQgPCBjb3VudCkge1xuICAgICAgYm9vbCA9IGJvb2xzW29mZnNldF07XG5cbiAgICAgIGlmIChjb25maWdbYm9vbF0gIT09IHVuZGVmaW5lZCAmJiBjb25maWdbYm9vbF0gIT09IGN0eC5vcHRpb25zW2Jvb2xdKSB7XG4gICAgICAgIGlnbm9yZSA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpZ25vcmUpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmICh0b2tlbml6ZXJzW2ZuXS5hcHBseShjdHgsIHBhcmFtcykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNvbGxhcHNlV2hpdGVTcGFjZSA9IHJlcXVpcmUoJ2NvbGxhcHNlLXdoaXRlLXNwYWNlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbm9ybWFsaXplO1xuXG4vKiBOb3JtYWxpemUgYW4gaWRlbnRpZmllci4gIENvbGxhcHNlcyBtdWx0aXBsZSB3aGl0ZSBzcGFjZVxuICogY2hhcmFjdGVycyBpbnRvIGEgc2luZ2xlIHNwYWNlLCBhbmQgcmVtb3ZlcyBjYXNpbmcuICovXG5mdW5jdGlvbiBub3JtYWxpemUodmFsdWUpIHtcbiAgcmV0dXJuIGNvbGxhcHNlV2hpdGVTcGFjZSh2YWx1ZSkudG9Mb3dlckNhc2UoKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLy8gLmRpcm5hbWUsIC5iYXNlbmFtZSwgYW5kIC5leHRuYW1lIG1ldGhvZHMgYXJlIGV4dHJhY3RlZCBmcm9tIE5vZGUuanMgdjguMTEuMSxcbi8vIGJhY2twb3J0ZWQgYW5kIHRyYW5zcGxpdGVkIHdpdGggQmFiZWwsIHdpdGggYmFja3dhcmRzLWNvbXBhdCBmaXhlc1xuXG4vLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gcmVzb2x2ZXMgLiBhbmQgLi4gZWxlbWVudHMgaW4gYSBwYXRoIGFycmF5IHdpdGggZGlyZWN0b3J5IG5hbWVzIHRoZXJlXG4vLyBtdXN0IGJlIG5vIHNsYXNoZXMsIGVtcHR5IGVsZW1lbnRzLCBvciBkZXZpY2UgbmFtZXMgKGM6XFwpIGluIHRoZSBhcnJheVxuLy8gKHNvIGFsc28gbm8gbGVhZGluZyBhbmQgdHJhaWxpbmcgc2xhc2hlcyAtIGl0IGRvZXMgbm90IGRpc3Rpbmd1aXNoXG4vLyByZWxhdGl2ZSBhbmQgYWJzb2x1dGUgcGF0aHMpXG5mdW5jdGlvbiBub3JtYWxpemVBcnJheShwYXJ0cywgYWxsb3dBYm92ZVJvb3QpIHtcbiAgLy8gaWYgdGhlIHBhdGggdHJpZXMgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIGB1cGAgZW5kcyB1cCA+IDBcbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IHBhcnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIGxhc3QgPSBwYXJ0c1tpXTtcbiAgICBpZiAobGFzdCA9PT0gJy4nKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgfSBlbHNlIGlmIChsYXN0ID09PSAnLi4nKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHBhcnRzLnNwbGljZShpLCAxKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgLy8gaWYgdGhlIHBhdGggaXMgYWxsb3dlZCB0byBnbyBhYm92ZSB0aGUgcm9vdCwgcmVzdG9yZSBsZWFkaW5nIC4uc1xuICBpZiAoYWxsb3dBYm92ZVJvb3QpIHtcbiAgICBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICAgIHBhcnRzLnVuc2hpZnQoJy4uJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzO1xufVxuXG4vLyBwYXRoLnJlc29sdmUoW2Zyb20gLi4uXSwgdG8pXG4vLyBwb3NpeCB2ZXJzaW9uXG5leHBvcnRzLnJlc29sdmUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHJlc29sdmVkUGF0aCA9ICcnLFxuICAgICAgcmVzb2x2ZWRBYnNvbHV0ZSA9IGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSA+PSAtMSAmJiAhcmVzb2x2ZWRBYnNvbHV0ZTsgaS0tKSB7XG4gICAgdmFyIHBhdGggPSAoaSA+PSAwKSA/IGFyZ3VtZW50c1tpXSA6IHByb2Nlc3MuY3dkKCk7XG5cbiAgICAvLyBTa2lwIGVtcHR5IGFuZCBpbnZhbGlkIGVudHJpZXNcbiAgICBpZiAodHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudHMgdG8gcGF0aC5yZXNvbHZlIG11c3QgYmUgc3RyaW5ncycpO1xuICAgIH0gZWxzZSBpZiAoIXBhdGgpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHJlc29sdmVkUGF0aCA9IHBhdGggKyAnLycgKyByZXNvbHZlZFBhdGg7XG4gICAgcmVzb2x2ZWRBYnNvbHV0ZSA9IHBhdGguY2hhckF0KDApID09PSAnLyc7XG4gIH1cblxuICAvLyBBdCB0aGlzIHBvaW50IHRoZSBwYXRoIHNob3VsZCBiZSByZXNvbHZlZCB0byBhIGZ1bGwgYWJzb2x1dGUgcGF0aCwgYnV0XG4gIC8vIGhhbmRsZSByZWxhdGl2ZSBwYXRocyB0byBiZSBzYWZlIChtaWdodCBoYXBwZW4gd2hlbiBwcm9jZXNzLmN3ZCgpIGZhaWxzKVxuXG4gIC8vIE5vcm1hbGl6ZSB0aGUgcGF0aFxuICByZXNvbHZlZFBhdGggPSBub3JtYWxpemVBcnJheShmaWx0ZXIocmVzb2x2ZWRQYXRoLnNwbGl0KCcvJyksIGZ1bmN0aW9uKHApIHtcbiAgICByZXR1cm4gISFwO1xuICB9KSwgIXJlc29sdmVkQWJzb2x1dGUpLmpvaW4oJy8nKTtcblxuICByZXR1cm4gKChyZXNvbHZlZEFic29sdXRlID8gJy8nIDogJycpICsgcmVzb2x2ZWRQYXRoKSB8fCAnLic7XG59O1xuXG4vLyBwYXRoLm5vcm1hbGl6ZShwYXRoKVxuLy8gcG9zaXggdmVyc2lvblxuZXhwb3J0cy5ub3JtYWxpemUgPSBmdW5jdGlvbihwYXRoKSB7XG4gIHZhciBpc0Fic29sdXRlID0gZXhwb3J0cy5pc0Fic29sdXRlKHBhdGgpLFxuICAgICAgdHJhaWxpbmdTbGFzaCA9IHN1YnN0cihwYXRoLCAtMSkgPT09ICcvJztcblxuICAvLyBOb3JtYWxpemUgdGhlIHBhdGhcbiAgcGF0aCA9IG5vcm1hbGl6ZUFycmF5KGZpbHRlcihwYXRoLnNwbGl0KCcvJyksIGZ1bmN0aW9uKHApIHtcbiAgICByZXR1cm4gISFwO1xuICB9KSwgIWlzQWJzb2x1dGUpLmpvaW4oJy8nKTtcblxuICBpZiAoIXBhdGggJiYgIWlzQWJzb2x1dGUpIHtcbiAgICBwYXRoID0gJy4nO1xuICB9XG4gIGlmIChwYXRoICYmIHRyYWlsaW5nU2xhc2gpIHtcbiAgICBwYXRoICs9ICcvJztcbiAgfVxuXG4gIHJldHVybiAoaXNBYnNvbHV0ZSA/ICcvJyA6ICcnKSArIHBhdGg7XG59O1xuXG4vLyBwb3NpeCB2ZXJzaW9uXG5leHBvcnRzLmlzQWJzb2x1dGUgPSBmdW5jdGlvbihwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nO1xufTtcblxuLy8gcG9zaXggdmVyc2lvblxuZXhwb3J0cy5qb2luID0gZnVuY3Rpb24oKSB7XG4gIHZhciBwYXRocyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCk7XG4gIHJldHVybiBleHBvcnRzLm5vcm1hbGl6ZShmaWx0ZXIocGF0aHMsIGZ1bmN0aW9uKHAsIGluZGV4KSB7XG4gICAgaWYgKHR5cGVvZiBwICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIHRvIHBhdGguam9pbiBtdXN0IGJlIHN0cmluZ3MnKTtcbiAgICB9XG4gICAgcmV0dXJuIHA7XG4gIH0pLmpvaW4oJy8nKSk7XG59O1xuXG5cbi8vIHBhdGgucmVsYXRpdmUoZnJvbSwgdG8pXG4vLyBwb3NpeCB2ZXJzaW9uXG5leHBvcnRzLnJlbGF0aXZlID0gZnVuY3Rpb24oZnJvbSwgdG8pIHtcbiAgZnJvbSA9IGV4cG9ydHMucmVzb2x2ZShmcm9tKS5zdWJzdHIoMSk7XG4gIHRvID0gZXhwb3J0cy5yZXNvbHZlKHRvKS5zdWJzdHIoMSk7XG5cbiAgZnVuY3Rpb24gdHJpbShhcnIpIHtcbiAgICB2YXIgc3RhcnQgPSAwO1xuICAgIGZvciAoOyBzdGFydCA8IGFyci5sZW5ndGg7IHN0YXJ0KyspIHtcbiAgICAgIGlmIChhcnJbc3RhcnRdICE9PSAnJykgYnJlYWs7XG4gICAgfVxuXG4gICAgdmFyIGVuZCA9IGFyci5sZW5ndGggLSAxO1xuICAgIGZvciAoOyBlbmQgPj0gMDsgZW5kLS0pIHtcbiAgICAgIGlmIChhcnJbZW5kXSAhPT0gJycpIGJyZWFrO1xuICAgIH1cblxuICAgIGlmIChzdGFydCA+IGVuZCkgcmV0dXJuIFtdO1xuICAgIHJldHVybiBhcnIuc2xpY2Uoc3RhcnQsIGVuZCAtIHN0YXJ0ICsgMSk7XG4gIH1cblxuICB2YXIgZnJvbVBhcnRzID0gdHJpbShmcm9tLnNwbGl0KCcvJykpO1xuICB2YXIgdG9QYXJ0cyA9IHRyaW0odG8uc3BsaXQoJy8nKSk7XG5cbiAgdmFyIGxlbmd0aCA9IE1hdGgubWluKGZyb21QYXJ0cy5sZW5ndGgsIHRvUGFydHMubGVuZ3RoKTtcbiAgdmFyIHNhbWVQYXJ0c0xlbmd0aCA9IGxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGlmIChmcm9tUGFydHNbaV0gIT09IHRvUGFydHNbaV0pIHtcbiAgICAgIHNhbWVQYXJ0c0xlbmd0aCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICB2YXIgb3V0cHV0UGFydHMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IHNhbWVQYXJ0c0xlbmd0aDsgaSA8IGZyb21QYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIG91dHB1dFBhcnRzLnB1c2goJy4uJyk7XG4gIH1cblxuICBvdXRwdXRQYXJ0cyA9IG91dHB1dFBhcnRzLmNvbmNhdCh0b1BhcnRzLnNsaWNlKHNhbWVQYXJ0c0xlbmd0aCkpO1xuXG4gIHJldHVybiBvdXRwdXRQYXJ0cy5qb2luKCcvJyk7XG59O1xuXG5leHBvcnRzLnNlcCA9ICcvJztcbmV4cG9ydHMuZGVsaW1pdGVyID0gJzonO1xuXG5leHBvcnRzLmRpcm5hbWUgPSBmdW5jdGlvbiAocGF0aCkge1xuICBpZiAodHlwZW9mIHBhdGggIT09ICdzdHJpbmcnKSBwYXRoID0gcGF0aCArICcnO1xuICBpZiAocGF0aC5sZW5ndGggPT09IDApIHJldHVybiAnLic7XG4gIHZhciBjb2RlID0gcGF0aC5jaGFyQ29kZUF0KDApO1xuICB2YXIgaGFzUm9vdCA9IGNvZGUgPT09IDQ3IC8qLyovO1xuICB2YXIgZW5kID0gLTE7XG4gIHZhciBtYXRjaGVkU2xhc2ggPSB0cnVlO1xuICBmb3IgKHZhciBpID0gcGF0aC5sZW5ndGggLSAxOyBpID49IDE7IC0taSkge1xuICAgIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoaSk7XG4gICAgaWYgKGNvZGUgPT09IDQ3IC8qLyovKSB7XG4gICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7XG4gICAgICAgICAgZW5kID0gaTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgIC8vIFdlIHNhdyB0aGUgZmlyc3Qgbm9uLXBhdGggc2VwYXJhdG9yXG4gICAgICBtYXRjaGVkU2xhc2ggPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAoZW5kID09PSAtMSkgcmV0dXJuIGhhc1Jvb3QgPyAnLycgOiAnLic7XG4gIGlmIChoYXNSb290ICYmIGVuZCA9PT0gMSkge1xuICAgIC8vIHJldHVybiAnLy8nO1xuICAgIC8vIEJhY2t3YXJkcy1jb21wYXQgZml4OlxuICAgIHJldHVybiAnLyc7XG4gIH1cbiAgcmV0dXJuIHBhdGguc2xpY2UoMCwgZW5kKTtcbn07XG5cbmZ1bmN0aW9uIGJhc2VuYW1lKHBhdGgpIHtcbiAgaWYgKHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykgcGF0aCA9IHBhdGggKyAnJztcblxuICB2YXIgc3RhcnQgPSAwO1xuICB2YXIgZW5kID0gLTE7XG4gIHZhciBtYXRjaGVkU2xhc2ggPSB0cnVlO1xuICB2YXIgaTtcblxuICBmb3IgKGkgPSBwYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgaWYgKHBhdGguY2hhckNvZGVBdChpKSA9PT0gNDcgLyovKi8pIHtcbiAgICAgICAgLy8gSWYgd2UgcmVhY2hlZCBhIHBhdGggc2VwYXJhdG9yIHRoYXQgd2FzIG5vdCBwYXJ0IG9mIGEgc2V0IG9mIHBhdGhcbiAgICAgICAgLy8gc2VwYXJhdG9ycyBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmcsIHN0b3Agbm93XG4gICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7XG4gICAgICAgICAgc3RhcnQgPSBpICsgMTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChlbmQgPT09IC0xKSB7XG4gICAgICAvLyBXZSBzYXcgdGhlIGZpcnN0IG5vbi1wYXRoIHNlcGFyYXRvciwgbWFyayB0aGlzIGFzIHRoZSBlbmQgb2Ygb3VyXG4gICAgICAvLyBwYXRoIGNvbXBvbmVudFxuICAgICAgbWF0Y2hlZFNsYXNoID0gZmFsc2U7XG4gICAgICBlbmQgPSBpICsgMTtcbiAgICB9XG4gIH1cblxuICBpZiAoZW5kID09PSAtMSkgcmV0dXJuICcnO1xuICByZXR1cm4gcGF0aC5zbGljZShzdGFydCwgZW5kKTtcbn1cblxuLy8gVXNlcyBhIG1peGVkIGFwcHJvYWNoIGZvciBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eSwgYXMgZXh0IGJlaGF2aW9yIGNoYW5nZWRcbi8vIGluIG5ldyBOb2RlLmpzIHZlcnNpb25zLCBzbyBvbmx5IGJhc2VuYW1lKCkgYWJvdmUgaXMgYmFja3BvcnRlZCBoZXJlXG5leHBvcnRzLmJhc2VuYW1lID0gZnVuY3Rpb24gKHBhdGgsIGV4dCkge1xuICB2YXIgZiA9IGJhc2VuYW1lKHBhdGgpO1xuICBpZiAoZXh0ICYmIGYuc3Vic3RyKC0xICogZXh0Lmxlbmd0aCkgPT09IGV4dCkge1xuICAgIGYgPSBmLnN1YnN0cigwLCBmLmxlbmd0aCAtIGV4dC5sZW5ndGgpO1xuICB9XG4gIHJldHVybiBmO1xufTtcblxuZXhwb3J0cy5leHRuYW1lID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgaWYgKHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykgcGF0aCA9IHBhdGggKyAnJztcbiAgdmFyIHN0YXJ0RG90ID0gLTE7XG4gIHZhciBzdGFydFBhcnQgPSAwO1xuICB2YXIgZW5kID0gLTE7XG4gIHZhciBtYXRjaGVkU2xhc2ggPSB0cnVlO1xuICAvLyBUcmFjayB0aGUgc3RhdGUgb2YgY2hhcmFjdGVycyAoaWYgYW55KSB3ZSBzZWUgYmVmb3JlIG91ciBmaXJzdCBkb3QgYW5kXG4gIC8vIGFmdGVyIGFueSBwYXRoIHNlcGFyYXRvciB3ZSBmaW5kXG4gIHZhciBwcmVEb3RTdGF0ZSA9IDA7XG4gIGZvciAodmFyIGkgPSBwYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgdmFyIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoaSk7XG4gICAgaWYgKGNvZGUgPT09IDQ3IC8qLyovKSB7XG4gICAgICAgIC8vIElmIHdlIHJlYWNoZWQgYSBwYXRoIHNlcGFyYXRvciB0aGF0IHdhcyBub3QgcGFydCBvZiBhIHNldCBvZiBwYXRoXG4gICAgICAgIC8vIHNlcGFyYXRvcnMgYXQgdGhlIGVuZCBvZiB0aGUgc3RyaW5nLCBzdG9wIG5vd1xuICAgICAgICBpZiAoIW1hdGNoZWRTbGFzaCkge1xuICAgICAgICAgIHN0YXJ0UGFydCA9IGkgKyAxO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIGlmIChlbmQgPT09IC0xKSB7XG4gICAgICAvLyBXZSBzYXcgdGhlIGZpcnN0IG5vbi1wYXRoIHNlcGFyYXRvciwgbWFyayB0aGlzIGFzIHRoZSBlbmQgb2Ygb3VyXG4gICAgICAvLyBleHRlbnNpb25cbiAgICAgIG1hdGNoZWRTbGFzaCA9IGZhbHNlO1xuICAgICAgZW5kID0gaSArIDE7XG4gICAgfVxuICAgIGlmIChjb2RlID09PSA0NiAvKi4qLykge1xuICAgICAgICAvLyBJZiB0aGlzIGlzIG91ciBmaXJzdCBkb3QsIG1hcmsgaXQgYXMgdGhlIHN0YXJ0IG9mIG91ciBleHRlbnNpb25cbiAgICAgICAgaWYgKHN0YXJ0RG90ID09PSAtMSlcbiAgICAgICAgICBzdGFydERvdCA9IGk7XG4gICAgICAgIGVsc2UgaWYgKHByZURvdFN0YXRlICE9PSAxKVxuICAgICAgICAgIHByZURvdFN0YXRlID0gMTtcbiAgICB9IGVsc2UgaWYgKHN0YXJ0RG90ICE9PSAtMSkge1xuICAgICAgLy8gV2Ugc2F3IGEgbm9uLWRvdCBhbmQgbm9uLXBhdGggc2VwYXJhdG9yIGJlZm9yZSBvdXIgZG90LCBzbyB3ZSBzaG91bGRcbiAgICAgIC8vIGhhdmUgYSBnb29kIGNoYW5jZSBhdCBoYXZpbmcgYSBub24tZW1wdHkgZXh0ZW5zaW9uXG4gICAgICBwcmVEb3RTdGF0ZSA9IC0xO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzdGFydERvdCA9PT0gLTEgfHwgZW5kID09PSAtMSB8fFxuICAgICAgLy8gV2Ugc2F3IGEgbm9uLWRvdCBjaGFyYWN0ZXIgaW1tZWRpYXRlbHkgYmVmb3JlIHRoZSBkb3RcbiAgICAgIHByZURvdFN0YXRlID09PSAwIHx8XG4gICAgICAvLyBUaGUgKHJpZ2h0LW1vc3QpIHRyaW1tZWQgcGF0aCBjb21wb25lbnQgaXMgZXhhY3RseSAnLi4nXG4gICAgICBwcmVEb3RTdGF0ZSA9PT0gMSAmJiBzdGFydERvdCA9PT0gZW5kIC0gMSAmJiBzdGFydERvdCA9PT0gc3RhcnRQYXJ0ICsgMSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuICByZXR1cm4gcGF0aC5zbGljZShzdGFydERvdCwgZW5kKTtcbn07XG5cbmZ1bmN0aW9uIGZpbHRlciAoeHMsIGYpIHtcbiAgICBpZiAoeHMuZmlsdGVyKSByZXR1cm4geHMuZmlsdGVyKGYpO1xuICAgIHZhciByZXMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChmKHhzW2ldLCBpLCB4cykpIHJlcy5wdXNoKHhzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cblxuLy8gU3RyaW5nLnByb3RvdHlwZS5zdWJzdHIgLSBuZWdhdGl2ZSBpbmRleCBkb24ndCB3b3JrIGluIElFOFxudmFyIHN1YnN0ciA9ICdhYicuc3Vic3RyKC0xKSA9PT0gJ2InXG4gICAgPyBmdW5jdGlvbiAoc3RyLCBzdGFydCwgbGVuKSB7IHJldHVybiBzdHIuc3Vic3RyKHN0YXJ0LCBsZW4pIH1cbiAgICA6IGZ1bmN0aW9uIChzdHIsIHN0YXJ0LCBsZW4pIHtcbiAgICAgICAgaWYgKHN0YXJ0IDwgMCkgc3RhcnQgPSBzdHIubGVuZ3RoICsgc3RhcnQ7XG4gICAgICAgIHJldHVybiBzdHIuc3Vic3RyKHN0YXJ0LCBsZW4pO1xuICAgIH1cbjtcbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFscGhhYmV0aWNhbFxuXG4vLyBDaGVjayBpZiB0aGUgZ2l2ZW4gY2hhcmFjdGVyIGNvZGUsIG9yIHRoZSBjaGFyYWN0ZXIgY29kZSBhdCB0aGUgZmlyc3Rcbi8vIGNoYXJhY3RlciwgaXMgYWxwaGFiZXRpY2FsLlxuZnVuY3Rpb24gYWxwaGFiZXRpY2FsKGNoYXJhY3Rlcikge1xuICB2YXIgY29kZSA9IHR5cGVvZiBjaGFyYWN0ZXIgPT09ICdzdHJpbmcnID8gY2hhcmFjdGVyLmNoYXJDb2RlQXQoMCkgOiBjaGFyYWN0ZXJcblxuICByZXR1cm4gKFxuICAgIChjb2RlID49IDk3ICYmIGNvZGUgPD0gMTIyKSAvKiBhLXogKi8gfHxcbiAgICAoY29kZSA+PSA2NSAmJiBjb2RlIDw9IDkwKSAvKiBBLVogKi9cbiAgKVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcG9zaXRpb246IHRydWUsXG4gIGdmbTogdHJ1ZSxcbiAgY29tbW9ubWFyazogZmFsc2UsXG4gIGZvb3Rub3RlczogZmFsc2UsXG4gIHBlZGFudGljOiBmYWxzZSxcbiAgYmxvY2tzOiByZXF1aXJlKCcuL2Jsb2NrLWVsZW1lbnRzLmpzb24nKVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBpbmRlbnRhdGlvbjtcblxuLyogTWFwIG9mIGNoYXJhY3RlcnMsIGFuZCB0aGVpciBjb2x1bW4gbGVuZ3RoLFxuICogd2hpY2ggY2FuIGJlIHVzZWQgYXMgaW5kZW50YXRpb24uICovXG52YXIgY2hhcmFjdGVycyA9IHsnICc6IDEsICdcXHQnOiA0fTtcblxuLyogR2V0cyBpbmRlbnRhdGlvbiBpbmZvcm1hdGlvbiBmb3IgYSBsaW5lLiAqL1xuZnVuY3Rpb24gaW5kZW50YXRpb24odmFsdWUpIHtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGluZGVudCA9IDA7XG4gIHZhciBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICB2YXIgc3RvcHMgPSB7fTtcbiAgdmFyIHNpemU7XG5cbiAgd2hpbGUgKGNoYXJhY3RlciBpbiBjaGFyYWN0ZXJzKSB7XG4gICAgc2l6ZSA9IGNoYXJhY3RlcnNbY2hhcmFjdGVyXTtcblxuICAgIGluZGVudCArPSBzaXplO1xuXG4gICAgaWYgKHNpemUgPiAxKSB7XG4gICAgICBpbmRlbnQgPSBNYXRoLmZsb29yKGluZGVudCAvIHNpemUpICogc2l6ZTtcbiAgICB9XG5cbiAgICBzdG9wc1tpbmRlbnRdID0gaW5kZXg7XG5cbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoKytpbmRleCk7XG4gIH1cblxuICByZXR1cm4ge2luZGVudDogaW5kZW50LCBzdG9wczogc3RvcHN9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXR0cmlidXRlTmFtZSA9ICdbYS16QS1aXzpdW2EtekEtWjAtOTouXy1dKic7XG52YXIgdW5xdW90ZWQgPSAnW15cIlxcJz08PmBcXFxcdTAwMDAtXFxcXHUwMDIwXSsnO1xudmFyIHNpbmdsZVF1b3RlZCA9ICdcXCdbXlxcJ10qXFwnJztcbnZhciBkb3VibGVRdW90ZWQgPSAnXCJbXlwiXSpcIic7XG52YXIgYXR0cmlidXRlVmFsdWUgPSAnKD86JyArIHVucXVvdGVkICsgJ3wnICsgc2luZ2xlUXVvdGVkICsgJ3wnICsgZG91YmxlUXVvdGVkICsgJyknO1xudmFyIGF0dHJpYnV0ZSA9ICcoPzpcXFxccysnICsgYXR0cmlidXRlTmFtZSArICcoPzpcXFxccyo9XFxcXHMqJyArIGF0dHJpYnV0ZVZhbHVlICsgJyk/KSc7XG52YXIgb3BlblRhZyA9ICc8W0EtWmEtel1bQS1aYS16MC05XFxcXC1dKicgKyBhdHRyaWJ1dGUgKyAnKlxcXFxzKlxcXFwvPz4nO1xudmFyIGNsb3NlVGFnID0gJzxcXFxcL1tBLVphLXpdW0EtWmEtejAtOVxcXFwtXSpcXFxccyo+JztcbnZhciBjb21tZW50ID0gJzwhLS0tLT58PCEtLSg/Oi0/W14+LV0pKD86LT9bXi1dKSotLT4nO1xudmFyIHByb2Nlc3NpbmcgPSAnPFs/XS4qP1s/XT4nO1xudmFyIGRlY2xhcmF0aW9uID0gJzwhW0EtWmEtel0rXFxcXHMrW14+XSo+JztcbnZhciBjZGF0YSA9ICc8IVxcXFxbQ0RBVEFcXFxcW1tcXFxcc1xcXFxTXSo/XFxcXF1cXFxcXT4nO1xuXG5leHBvcnRzLm9wZW5DbG9zZVRhZyA9IG5ldyBSZWdFeHAoJ14oPzonICsgb3BlblRhZyArICd8JyArIGNsb3NlVGFnICsgJyknKTtcblxuZXhwb3J0cy50YWcgPSBuZXcgUmVnRXhwKCdeKD86JyArXG4gIG9wZW5UYWcgKyAnfCcgK1xuICBjbG9zZVRhZyArICd8JyArXG4gIGNvbW1lbnQgKyAnfCcgK1xuICBwcm9jZXNzaW5nICsgJ3wnICtcbiAgZGVjbGFyYXRpb24gKyAnfCcgK1xuICBjZGF0YSArXG4nKScpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxvY2F0ZTtcblxuZnVuY3Rpb24gbG9jYXRlKHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgcmV0dXJuIHZhbHVlLmluZGV4T2YoJzwnLCBmcm9tSW5kZXgpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxvY2F0ZTtcblxuZnVuY3Rpb24gbG9jYXRlKHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgdmFyIGxpbmsgPSB2YWx1ZS5pbmRleE9mKCdbJywgZnJvbUluZGV4KTtcbiAgdmFyIGltYWdlID0gdmFsdWUuaW5kZXhPZignIVsnLCBmcm9tSW5kZXgpO1xuXG4gIGlmIChpbWFnZSA9PT0gLTEpIHtcbiAgICByZXR1cm4gbGluaztcbiAgfVxuXG4gIC8qIExpbmsgY2FuIG5ldmVyIGJlIGAtMWAgaWYgYW4gaW1hZ2UgaXMgZm91bmQsIHNvIHdlIGRvbuKAmXQgbmVlZFxuICAgKiB0byBjaGVjayBmb3IgdGhhdCA6KSAqL1xuICByZXR1cm4gbGluayA8IGltYWdlID8gbGluayA6IGltYWdlO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gXCJbb2JqZWN0IEFyZ3VtZW50c11cIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfVxuXG52YXIgeHRlbmQgPSByZXF1aXJlKCd4dGVuZCcpO1xuXG52YXIgdW5pZmllZCA9IHJlcXVpcmUoJ3VuaWZpZWQnKTtcblxudmFyIHBhcnNlID0gcmVxdWlyZSgncmVtYXJrLXBhcnNlJyk7XG5cbnZhciBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBhZGRMaXN0TWV0YWRhdGEgPSByZXF1aXJlKCdtZGFzdC1hZGQtbGlzdC1tZXRhZGF0YScpO1xuXG52YXIgbmFpdmVIdG1sID0gcmVxdWlyZSgnLi9wbHVnaW5zL25haXZlLWh0bWwnKTtcblxudmFyIGRpc2FsbG93Tm9kZSA9IHJlcXVpcmUoJy4vcGx1Z2lucy9kaXNhbGxvdy1ub2RlJyk7XG5cbnZhciBhc3RUb1JlYWN0ID0gcmVxdWlyZSgnLi9hc3QtdG8tcmVhY3QnKTtcblxudmFyIHdyYXBUYWJsZVJvd3MgPSByZXF1aXJlKCcuL3dyYXAtdGFibGUtcm93cycpO1xuXG52YXIgZ2V0RGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuL2dldC1kZWZpbml0aW9ucycpO1xuXG52YXIgdXJpVHJhbnNmb3JtZXIgPSByZXF1aXJlKCcuL3VyaS10cmFuc2Zvcm1lcicpO1xuXG52YXIgZGVmYXVsdFJlbmRlcmVycyA9IHJlcXVpcmUoJy4vcmVuZGVyZXJzJyk7XG5cbnZhciBzeW1ib2xzID0gcmVxdWlyZSgnLi9zeW1ib2xzJyk7XG5cbnZhciBhbGxUeXBlcyA9IE9iamVjdC5rZXlzKGRlZmF1bHRSZW5kZXJlcnMpO1xuXG52YXIgUmVhY3RNYXJrZG93biA9IGZ1bmN0aW9uIFJlYWN0TWFya2Rvd24ocHJvcHMpIHtcbiAgdmFyIHNyYyA9IHByb3BzLnNvdXJjZSB8fCBwcm9wcy5jaGlsZHJlbiB8fCAnJztcbiAgdmFyIHBhcnNlck9wdGlvbnMgPSBwcm9wcy5wYXJzZXJPcHRpb25zO1xuXG4gIGlmIChwcm9wcy5hbGxvd2VkVHlwZXMgJiYgcHJvcHMuZGlzYWxsb3dlZFR5cGVzKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdPbmx5IG9uZSBvZiBgYWxsb3dlZFR5cGVzYCBhbmQgYGRpc2FsbG93ZWRUeXBlc2Agc2hvdWxkIGJlIGRlZmluZWQnKTtcbiAgfVxuXG4gIHZhciByZW5kZXJlcnMgPSB4dGVuZChkZWZhdWx0UmVuZGVyZXJzLCBwcm9wcy5yZW5kZXJlcnMpO1xuICB2YXIgcGx1Z2lucyA9IFtbcGFyc2UsIHBhcnNlck9wdGlvbnNdXS5jb25jYXQocHJvcHMucGx1Z2lucyB8fCBbXSk7XG4gIHZhciBwYXJzZXIgPSBwbHVnaW5zLnJlZHVjZShhcHBseVBhcnNlclBsdWdpbiwgdW5pZmllZCgpKTtcbiAgdmFyIHJhd0FzdCA9IHBhcnNlci5wYXJzZShzcmMpO1xuICB2YXIgcmVuZGVyUHJvcHMgPSB4dGVuZChwcm9wcywge1xuICAgIHJlbmRlcmVyczogcmVuZGVyZXJzLFxuICAgIGRlZmluaXRpb25zOiBnZXREZWZpbml0aW9ucyhyYXdBc3QpXG4gIH0pO1xuICB2YXIgYXN0UGx1Z2lucyA9IGRldGVybWluZUFzdFBsdWdpbnMocHJvcHMpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc3luY1xuXG4gIHZhciB0cmFuc2Zvcm1lZEFzdCA9IHBhcnNlci5ydW5TeW5jKHJhd0FzdCk7XG4gIHZhciBhc3QgPSBhc3RQbHVnaW5zLnJlZHVjZShmdW5jdGlvbiAobm9kZSwgcGx1Z2luKSB7XG4gICAgcmV0dXJuIHBsdWdpbihub2RlLCByZW5kZXJQcm9wcyk7XG4gIH0sIHRyYW5zZm9ybWVkQXN0KTtcbiAgcmV0dXJuIGFzdFRvUmVhY3QoYXN0LCByZW5kZXJQcm9wcyk7XG59O1xuXG5mdW5jdGlvbiBhcHBseVBhcnNlclBsdWdpbihwYXJzZXIsIHBsdWdpbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShwbHVnaW4pID8gcGFyc2VyLnVzZS5hcHBseShwYXJzZXIsIF90b0NvbnN1bWFibGVBcnJheShwbHVnaW4pKSA6IHBhcnNlci51c2UocGx1Z2luKTtcbn1cblxuZnVuY3Rpb24gZGV0ZXJtaW5lQXN0UGx1Z2lucyhwcm9wcykge1xuICB2YXIgcGx1Z2lucyA9IFt3cmFwVGFibGVSb3dzLCBhZGRMaXN0TWV0YWRhdGEoKV07XG4gIHZhciBkaXNhbGxvd2VkVHlwZXMgPSBwcm9wcy5kaXNhbGxvd2VkVHlwZXM7XG5cbiAgaWYgKHByb3BzLmFsbG93ZWRUeXBlcykge1xuICAgIGRpc2FsbG93ZWRUeXBlcyA9IGFsbFR5cGVzLmZpbHRlcihmdW5jdGlvbiAodHlwZSkge1xuICAgICAgcmV0dXJuIHR5cGUgIT09ICdyb290JyAmJiBwcm9wcy5hbGxvd2VkVHlwZXMuaW5kZXhPZih0eXBlKSA9PT0gLTE7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgcmVtb3ZhbE1ldGhvZCA9IHByb3BzLnVud3JhcERpc2FsbG93ZWQgPyAndW53cmFwJyA6ICdyZW1vdmUnO1xuXG4gIGlmIChkaXNhbGxvd2VkVHlwZXMgJiYgZGlzYWxsb3dlZFR5cGVzLmxlbmd0aCA+IDApIHtcbiAgICBwbHVnaW5zLnB1c2goZGlzYWxsb3dOb2RlLm9mVHlwZShkaXNhbGxvd2VkVHlwZXMsIHJlbW92YWxNZXRob2QpKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5hbGxvd05vZGUpIHtcbiAgICBwbHVnaW5zLnB1c2goZGlzYWxsb3dOb2RlLmlmTm90TWF0Y2gocHJvcHMuYWxsb3dOb2RlLCByZW1vdmFsTWV0aG9kKSk7XG4gIH1cblxuICB2YXIgcmVuZGVySHRtbCA9ICFwcm9wcy5lc2NhcGVIdG1sICYmICFwcm9wcy5za2lwSHRtbDtcbiAgdmFyIGhhc0h0bWxQYXJzZXIgPSAocHJvcHMuYXN0UGx1Z2lucyB8fCBbXSkuc29tZShmdW5jdGlvbiAoaXRlbSkge1xuICAgIHZhciBwbHVnaW4gPSBBcnJheS5pc0FycmF5KGl0ZW0pID8gaXRlbVswXSA6IGl0ZW07XG4gICAgcmV0dXJuIHBsdWdpbi5pZGVudGl0eSA9PT0gc3ltYm9scy5IdG1sUGFyc2VyO1xuICB9KTtcblxuICBpZiAocmVuZGVySHRtbCAmJiAhaGFzSHRtbFBhcnNlcikge1xuICAgIHBsdWdpbnMucHVzaChuYWl2ZUh0bWwpO1xuICB9XG5cbiAgcmV0dXJuIHByb3BzLmFzdFBsdWdpbnMgPyBwbHVnaW5zLmNvbmNhdChwcm9wcy5hc3RQbHVnaW5zKSA6IHBsdWdpbnM7XG59XG5cblJlYWN0TWFya2Rvd24uZGVmYXVsdFByb3BzID0ge1xuICByZW5kZXJlcnM6IHt9LFxuICBlc2NhcGVIdG1sOiB0cnVlLFxuICBza2lwSHRtbDogZmFsc2UsXG4gIHNvdXJjZVBvczogZmFsc2UsXG4gIHJhd1NvdXJjZVBvczogZmFsc2UsXG4gIHRyYW5zZm9ybUxpbmtVcmk6IHVyaVRyYW5zZm9ybWVyLFxuICBhc3RQbHVnaW5zOiBbXSxcbiAgcGx1Z2luczogW10sXG4gIHBhcnNlck9wdGlvbnM6IHt9XG59O1xuUmVhY3RNYXJrZG93bi5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc291cmNlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc291cmNlUG9zOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmF3U291cmNlUG9zOiBQcm9wVHlwZXMuYm9vbCxcbiAgZXNjYXBlSHRtbDogUHJvcFR5cGVzLmJvb2wsXG4gIHNraXBIdG1sOiBQcm9wVHlwZXMuYm9vbCxcbiAgYWxsb3dOb2RlOiBQcm9wVHlwZXMuZnVuYyxcbiAgYWxsb3dlZFR5cGVzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2YoYWxsVHlwZXMpKSxcbiAgZGlzYWxsb3dlZFR5cGVzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub25lT2YoYWxsVHlwZXMpKSxcbiAgdHJhbnNmb3JtTGlua1VyaTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ib29sXSksXG4gIGxpbmtUYXJnZXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIHRyYW5zZm9ybUltYWdlVXJpOiBQcm9wVHlwZXMuZnVuYyxcbiAgYXN0UGx1Z2luczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmZ1bmMpLFxuICB1bndyYXBEaXNhbGxvd2VkOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVuZGVyZXJzOiBQcm9wVHlwZXMub2JqZWN0LFxuICBwbHVnaW5zOiBQcm9wVHlwZXMuYXJyYXksXG4gIHBhcnNlck9wdGlvbnM6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5SZWFjdE1hcmtkb3duLnR5cGVzID0gYWxsVHlwZXM7XG5SZWFjdE1hcmtkb3duLnJlbmRlcmVycyA9IGRlZmF1bHRSZW5kZXJlcnM7XG5SZWFjdE1hcmtkb3duLnVyaVRyYW5zZm9ybWVyID0gdXJpVHJhbnNmb3JtZXI7XG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0TWFya2Rvd247IiwiLy8gQGZsb3dcbid1c2Ugc3RyaWN0JztcblxudmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBnbG9iYWxba2V5XSA9IChnbG9iYWxba2V5XSB8fCAwKSArIDE7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEyLjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxxPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTt2YXIgYmE9bnVsbCxjYT17fTtcbmZ1bmN0aW9uIGRhKCl7aWYoYmEpZm9yKHZhciBhIGluIGNhKXt2YXIgYj1jYVthXSxjPWJhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighZWFbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7ZWFbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZihmYS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTtmYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZoYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oaGEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIGhhKGEsYixjKXtpZihpYVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7aWFbYV09YjtqYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBlYT1bXSxmYT17fSxpYT17fSxqYT17fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgbGE9ITEsbWE9bnVsbCxuYT0hMSxvYT1udWxsLHBhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2xhPSEwO21hPWF9fTtmdW5jdGlvbiBxYShhLGIsYyxkLGUsZixnLGgsayl7bGE9ITE7bWE9bnVsbDtrYS5hcHBseShwYSxhcmd1bWVudHMpfVxuZnVuY3Rpb24gcmEoYSxiLGMsZCxlLGYsZyxoLGspe3FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihsYSl7aWYobGEpe3ZhciBsPW1hO2xhPSExO21hPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO25hfHwobmE9ITAsb2E9bCl9fXZhciBzYT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7cmEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHlhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciB6YT1udWxsO2Z1bmN0aW9uIEFhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl3YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ3YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gQmEoYSl7bnVsbCE9PWEmJih6YT14YSh6YSxhKSk7YT16YTt6YT1udWxsO2lmKGEpe3lhKGEsQWEpO2lmKHphKXRocm93IEVycm9yKHUoOTUpKTtpZihuYSl0aHJvdyBhPW9hLG5hPSExLG9hPW51bGwsYTt9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2lmKGJhKXRocm93IEVycm9yKHUoMTAxKSk7YmE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7ZGEoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFjYS5oYXNPd25Qcm9wZXJ0eShjKXx8Y2FbY10hPT1kKXtpZihjYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7Y2FbY109ZDtiPSEwfX1iJiZkYSgpfX07XG5mdW5jdGlvbiBEYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXNhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLGIsdHlwZW9mIGMpKTtcbnJldHVybiBjfXZhciBFYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChFYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoRWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbnZhciBGYT0vXiguKilbXFxcXFxcL10vLHc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixHYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLEhhPXc/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixJYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxKYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxLYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxMYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxNYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLE5hPXc/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxPYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixQYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxRYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsUmE9dz9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxTYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTt3JiZTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpO3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTt2YXIgVGE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIFVhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1UYSYmYVtUYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFZhKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gV2EoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBIYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgS2E6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgSmE6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBQYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBRYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBNYTpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIExhOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgT2E6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIFJhOnJldHVybiBXYShhLnR5cGUpO2Nhc2UgU2E6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBXYShhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBYYShhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9V2EoYS50eXBlKTtjPW51bGw7ZCYmKGM9V2EoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShGYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIFlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxaYT1udWxsLCRhPW51bGwsYWI9bnVsbDtmdW5jdGlvbiBiYihhKXtpZihhPXVhKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgWmEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1zYShhLnN0YXRlTm9kZSk7WmEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBjYihhKXskYT9hYj9hYi5wdXNoKGEpOmFiPVthXTokYT1hfWZ1bmN0aW9uIGRiKCl7aWYoJGEpe3ZhciBhPSRhLGI9YWI7YWI9JGE9bnVsbDtiYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspYmIoYlthXSl9fWZ1bmN0aW9uIGViKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gZmIoYSxiLGMsZCl7cmV0dXJuIGEoYixjLGQpfWZ1bmN0aW9uIGdiKCl7fVxudmFyIGhiPWViLGliPSExLGpiPSExO2Z1bmN0aW9uIGtiKCl7aWYobnVsbCE9PSRhfHxudWxsIT09YWIpZ2IoKSxkYigpfW5ldyBNYXA7dmFyIGxiPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxtYj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG5iPXt9LG9iPXt9O1xuZnVuY3Rpb24gcGIoYSl7aWYobWIuY2FsbChvYixhKSlyZXR1cm4hMDtpZihtYi5jYWxsKG5iLGEpKXJldHVybiExO2lmKGxiLnRlc3QoYSkpcmV0dXJuIG9iW2FdPSEwO25iW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHFiKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcmIoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cWIoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgc2I9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB0YihhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShzYixcbnRiKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTtmdW5jdGlvbiB1YihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiB2YihhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChyYihiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/cGIoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHdiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB4YihhKXt2YXIgYj13YihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geWIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXhiKGEpKX1mdW5jdGlvbiB6YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9d2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBBYihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBCYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIENiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdmIoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIEViKGEsYil7Q2IoYSxiKTt2YXIgYz11YihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9GYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZGYihhLGIudHlwZSx1YihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEdiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIEZiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBIYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBJYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUhiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gS2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBMYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmRlZmF1bHRWYWx1ZTtiPWIuY2hpbGRyZW47aWYobnVsbCE9Yil7aWYobnVsbCE9Yyl0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShiKSl7aWYoISgxPj1iLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2I9YlswXX1jPWJ9bnVsbD09YyYmKGM9XCJcIil9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWIoYyl9fVxuZnVuY3Rpb24gTWIoYSxiKXt2YXIgYz11YihiLnZhbHVlKSxkPXViKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTmIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgT2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gUGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBRYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/UGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUmIsU2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09T2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UmI9UmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gVGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBVYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBWYj17YW5pbWF0aW9uZW5kOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxXYj17fSxYYj17fTtcbllhJiYoWGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBZYihhKXtpZihXYlthXSlyZXR1cm4gV2JbYV07aWYoIVZiW2FdKXJldHVybiBhO3ZhciBiPVZiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFhiKXJldHVybiBXYlthXT1iW2NdO3JldHVybiBhfXZhciBaYj1ZYihcImFuaW1hdGlvbmVuZFwiKSwkYj1ZYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxhYz1ZYihcImFuaW1hdGlvbnN0YXJ0XCIpLGJjPVliKFwidHJhbnNpdGlvbmVuZFwiKSxjYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBlYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBmYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGdjKGEpe2lmKGVjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGhjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWVjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGdjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGdjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaWMoYSl7YT1oYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBqYyxrYyxsYyxtYz0hMSxuYz1bXSxvYz1udWxsLHBjPW51bGwscWM9bnVsbCxyYz1uZXcgTWFwLHNjPW5ldyBNYXAsdGM9W10sdWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSx2Yz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj14YyhhKTt1Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe3ljKGMsYSxiKX0pO3ZjLmZvckVhY2goZnVuY3Rpb24oYyl7eWMoYyxhLGIpfSl9ZnVuY3Rpb24gemMoYSxiLGMsZCl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDpkfX1mdW5jdGlvbiBBYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOm9jPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpwYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpxYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6cmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6c2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiBCYyhhLGIsYyxkLGUpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZSlyZXR1cm4gYT16YyhiLGMsZCxlKSxudWxsIT09YiYmKGI9Q2MoYiksbnVsbCE9PWImJmtjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1mdW5jdGlvbiBEYyhhLGIsYyxkKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIG9jPUJjKG9jLGEsYixjLGQpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gcGM9QmMocGMsYSxiLGMsZCksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBxYz1CYyhxYyxhLGIsYyxkKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZT1kLnBvaW50ZXJJZDtyYy5zZXQoZSxCYyhyYy5nZXQoZSl8fG51bGwsYSxiLGMsZCkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBlPWQucG9pbnRlcklkLHNjLnNldChlLEJjKHNjLmdldChlKXx8bnVsbCxhLGIsYyxkKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBFYyhhKXt2YXIgYj1GYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWVjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWZjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3EudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtsYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gR2MoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPUhjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9Q2MoYik7bnVsbCE9PWMmJmtjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBJYyhhLGIsYyl7R2MoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIEpjKCl7Zm9yKG1jPSExOzA8bmMubGVuZ3RoOyl7dmFyIGE9bmNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNjKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmamMoYSk7YnJlYWt9dmFyIGI9SGMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6bmMuc2hpZnQoKX1udWxsIT09b2MmJkdjKG9jKSYmKG9jPW51bGwpO251bGwhPT1wYyYmR2MocGMpJiYocGM9bnVsbCk7bnVsbCE9PXFjJiZHYyhxYykmJihxYz1udWxsKTtyYy5mb3JFYWNoKEljKTtzYy5mb3JFYWNoKEljKX1mdW5jdGlvbiBLYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsbWN8fChtYz0hMCxxLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2socS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxKYykpKX1cbmZ1bmN0aW9uIExjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEtjKGIsYSl9aWYoMDxuYy5sZW5ndGgpe0tjKG5jWzBdLGEpO2Zvcih2YXIgYz0xO2M8bmMubGVuZ3RoO2MrKyl7dmFyIGQ9bmNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1vYyYmS2Mob2MsYSk7bnVsbCE9PXBjJiZLYyhwYyxhKTtudWxsIT09cWMmJktjKHFjLGEpO3JjLmZvckVhY2goYik7c2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8dGMubGVuZ3RoO2MrKylkPXRjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDx0Yy5sZW5ndGgmJihjPXRjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KUVjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmdGMuc2hpZnQoKX1cbmZ1bmN0aW9uIE1jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBOYyhhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE9jKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBQYyhhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU5jKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylPYyhjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU9jKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFFjKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUmMoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZRYyhhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBTYyhhKXt5YShhLFBjKX1mdW5jdGlvbiBUYygpe3JldHVybiEwfWZ1bmN0aW9uIFVjKCl7cmV0dXJuITF9ZnVuY3Rpb24gRShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/VGM6VWM7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1VYztyZXR1cm4gdGhpc31cbm4oRS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1UYyl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1UYyl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1UY30saXNQZXJzaXN0ZW50OlVjLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPVVjO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7RS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5FLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO1ZjKGMpO3JldHVybiBjfTtWYyhFKTtmdW5jdGlvbiBXYyhhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIFhjKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIFZjKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPVdjO2EucmVsZWFzZT1YY312YXIgWWM9RS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLFpjPUUuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksJGM9RS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLGFkPSRjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBiZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBjZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sZGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LGVkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBnZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWVkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gaGQoKXtyZXR1cm4gZ2R9XG52YXIgaWQ9JGMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPWNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9kZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6aGQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/YmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxqZD0wLGtkPTAsbGQ9ITEsbWQ9ITEsbmQ9JGMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPWpkO2pkPWEuc2NyZWVuWDtyZXR1cm4gbGQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtXG5iOjA6KGxkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO3ZhciBiPWtkO2tkPWEuc2NyZWVuWTtyZXR1cm4gbWQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihtZD0hMCwwKX19KSxvZD1uZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSkscGQ9bmQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPSRjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkfSkscmQ9RS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLFxuZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1uZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksdGQ9W1tcImJsdXJcIixcImJsdXJcIiwwXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiLDBdLFtcImNsaWNrXCIsXCJjbGlja1wiLDBdLFtcImNsb3NlXCIsXCJjbG9zZVwiLDBdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiLDBdLFtcImNvcHlcIixcImNvcHlcIiwwXSxbXCJjdXRcIixcImN1dFwiLDBdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiLDBdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiLDBdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIixcbjBdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCIsMF0sW1wiZHJvcFwiLFwiZHJvcFwiLDBdLFtcImZvY3VzXCIsXCJmb2N1c1wiLDBdLFtcImlucHV0XCIsXCJpbnB1dFwiLDBdLFtcImludmFsaWRcIixcImludmFsaWRcIiwwXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCIsMF0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCIsMF0sW1wia2V5dXBcIixcImtleVVwXCIsMF0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIiwwXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCIsMF0sW1wicGFzdGVcIixcInBhc3RlXCIsMF0sW1wicGF1c2VcIixcInBhdXNlXCIsMF0sW1wicGxheVwiLFwicGxheVwiLDBdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIiwwXSxbXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIiwwXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiLDBdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIiwwXSxbXCJyZXNldFwiLFwicmVzZXRcIiwwXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiLDBdLFtcInN1Ym1pdFwiLFwic3VibWl0XCIsMF0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCIsXG4wXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIiwwXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCIsMF0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIiwwXSxbXCJkcmFnXCIsXCJkcmFnXCIsMV0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIiwxXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIiwxXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiLDFdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiLDFdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCIsMV0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCIsMV0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIiwxXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIiwxXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCIsMV0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCIsMV0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIiwxXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiLDFdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCIsMV0sW1wid2hlZWxcIixcIndoZWVsXCIsMV0sW1wiYWJvcnRcIixcImFib3J0XCIsXG4yXSxbWmIsXCJhbmltYXRpb25FbmRcIiwyXSxbJGIsXCJhbmltYXRpb25JdGVyYXRpb25cIiwyXSxbYWMsXCJhbmltYXRpb25TdGFydFwiLDJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIiwyXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIiwyXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIiwyXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsMl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIiwyXSxbXCJlbmRlZFwiLFwiZW5kZWRcIiwyXSxbXCJlcnJvclwiLFwiZXJyb3JcIiwyXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJsb2FkXCIsXCJsb2FkXCIsMl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLDJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLDJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsMl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsMl0sW1wicHJvZ3Jlc3NcIixcblwicHJvZ3Jlc3NcIiwyXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsMl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiLDJdLFtcInN1c3BlbmRcIixcInN1c3BlbmRcIiwyXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsMl0sW2JjLFwidHJhbnNpdGlvbkVuZFwiLDJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIiwyXV0sdWQ9e30sdmQ9e30sd2Q9MDtmb3IoO3dkPHRkLmxlbmd0aDt3ZCsrKXt2YXIgeWQ9dGRbd2RdLHpkPXlkWzBdLEFkPXlkWzFdLEJkPXlkWzJdLENkPVwib25cIisoQWRbMF0udG9VcHBlckNhc2UoKStBZC5zbGljZSgxKSksRGQ9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOkNkLGNhcHR1cmVkOkNkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W3pkXSxldmVudFByaW9yaXR5OkJkfTt1ZFtBZF09RGQ7dmRbemRdPURkfVxudmFyIEVkPXtldmVudFR5cGVzOnVkLGdldEV2ZW50UHJpb3JpdHk6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YT9hLmV2ZW50UHJpb3JpdHk6Mn0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1pZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9YWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1uZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFpiOmNhc2UgJGI6Y2FzZSBhYzphPVljO2JyZWFrO2Nhc2UgYmM6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT0kYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9WmM7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1vZDticmVhaztkZWZhdWx0OmE9RX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1NjKGIpO3JldHVybiBifX0sRmQ9cS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxcbkdkPXEudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEhkPUVkLmdldEV2ZW50UHJpb3JpdHksSWQ9MTAsSmQ9W107XG5mdW5jdGlvbiBLZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9RmMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TWMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFncyxoPW51bGwsaz0wO2s8ZWEubGVuZ3RoO2srKyl7dmFyIGw9ZWFba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD14YShoLGwpKX1CYShoKX19XG52YXIgTGQ9ITA7ZnVuY3Rpb24gRihhLGIpe01kKGIsYSwhMSl9ZnVuY3Rpb24gTWQoYSxiLGMpe3N3aXRjaChIZChiKSl7Y2FzZSAwOnZhciBkPU5kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2Nhc2UgMTpkPU9kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2RlZmF1bHQ6ZD1QZC5iaW5kKG51bGwsYiwxKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIE5kKGEsYixjKXtpYnx8Z2IoKTt2YXIgZD1QZCxlPWliO2liPSEwO3RyeXtmYihkLGEsYixjKX1maW5hbGx5eyhpYj1lKXx8a2IoKX19ZnVuY3Rpb24gT2QoYSxiLGMpe0dkKEZkLFBkLmJpbmQobnVsbCxhLGIsYykpfVxuZnVuY3Rpb24gUWQoYSxiLGMsZCl7aWYoSmQubGVuZ3RoKXt2YXIgZT1KZC5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1iO2UubmF0aXZlRXZlbnQ9YztlLnRhcmdldEluc3Q9ZDthPWV9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmIsbmF0aXZlRXZlbnQ6Yyx0YXJnZXRJbnN0OmQsYW5jZXN0b3JzOltdfTt0cnl7aWYoYj1LZCxjPWEsamIpYihjLHZvaWQgMCk7ZWxzZXtqYj0hMDt0cnl7aGIoYixjLHZvaWQgMCl9ZmluYWxseXtqYj0hMSxrYigpfX19ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCxKZC5sZW5ndGg8SWQmJkpkLnB1c2goYSl9fVxuZnVuY3Rpb24gUGQoYSxiLGMpe2lmKExkKWlmKDA8bmMubGVuZ3RoJiYtMTx1Yy5pbmRleE9mKGEpKWE9emMobnVsbCxhLGIsYyksbmMucHVzaChhKTtlbHNle3ZhciBkPUhjKGEsYixjKTtudWxsPT09ZD9BYyhhLGMpOi0xPHVjLmluZGV4T2YoYSk/KGE9emMoZCxhLGIsYyksbmMucHVzaChhKSk6RGMoZCxhLGIsYyl8fChBYyhhLGMpLFFkKGEsYixjLG51bGwpKX19ZnVuY3Rpb24gSGMoYSxiLGMpe3ZhciBkPU1jKGMpO2Q9RmMoZCk7aWYobnVsbCE9PWQpe3ZhciBlPWVjKGQpO2lmKG51bGw9PT1lKWQ9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7ZD1mYyhlKTtpZihudWxsIT09ZClyZXR1cm4gZDtkPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtkPW51bGx9ZWxzZSBlIT09ZCYmKGQ9bnVsbCl9fVFkKGEsYixjLGQpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gUmQoYSl7aWYoIVlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBTZD1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiB4YyhhKXt2YXIgYj1TZC5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IFNldCxTZC5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiB5YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOk1kKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpNZChiLFwiZm9jdXNcIiwhMCk7TWQoYixcImJsdXJcIiwhMCk7Yy5hZGQoXCJibHVyXCIpO2MuYWRkKFwiZm9jdXNcIik7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlJkKGEpJiZNZChiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1jYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5hZGQoYSl9fVxudmFyIFRkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LFVkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhUZCkuZm9yRWFjaChmdW5jdGlvbihhKXtVZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO1RkW2JdPVRkW2FdfSl9KTtmdW5jdGlvbiBWZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8VGQuaGFzT3duUHJvcGVydHkoYSkmJlRkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIFdkKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPVZkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIFhkPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBZZChhLGIpe2lmKGIpe2lmKFhkW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gWmQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uICRkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPXhjKGEpO2I9amFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspeWMoYltkXSxhLGMpfWZ1bmN0aW9uIGFlKCl7fVxuZnVuY3Rpb24gYmUoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIGNlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiBkZShhLGIpe3ZhciBjPWNlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPWNlKGMpfX1cbmZ1bmN0aW9uIGVlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/ZWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIGZlKCl7Zm9yKHZhciBhPXdpbmRvdyxiPWJlKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPWJlKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24gZ2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgaGU9XCIkXCIsaWU9XCIvJFwiLGplPVwiJD9cIixrZT1cIiQhXCIsbGU9bnVsbCxtZT1udWxsO2Z1bmN0aW9uIG5lKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG9lKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgcGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHJlKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gc2UoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09aGV8fGM9PT1rZXx8Yz09PWplKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09aWUmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0ZT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx1ZT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK3RlLHZlPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrdGUsd2U9XCJfX3JlYWN0Q29udGFpbmVyZSRcIit0ZTtcbmZ1bmN0aW9uIEZjKGEpe3ZhciBiPWFbdWVdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW3dlXXx8Y1t1ZV0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZShhKTtudWxsIT09YTspe2lmKGM9YVt1ZV0pcmV0dXJuIGM7YT1zZShhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2MoYSl7YT1hW3VlXXx8YVt3ZV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHhlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIHllKGEpe3JldHVybiBhW3ZlXXx8bnVsbH12YXIgemU9bnVsbCxBZT1udWxsLEJlPW51bGw7XG5mdW5jdGlvbiBDZSgpe2lmKEJlKXJldHVybiBCZTt2YXIgYSxiPUFlLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIHplP3plLnZhbHVlOnplLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIEJlPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9dmFyIERlPUUuZXh0ZW5kKHtkYXRhOm51bGx9KSxFZT1FLmV4dGVuZCh7ZGF0YTpudWxsfSksRmU9WzksMTMsMjcsMzJdLEdlPVlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxIZT1udWxsO1lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihIZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIEllPVlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhSGUsSmU9WWEmJighR2V8fEhlJiY4PEhlJiYxMT49SGUpLEtlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLExlPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LE1lPSExO1xuZnVuY3Rpb24gTmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1GZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIE9lKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIFBlPSExO2Z1bmN0aW9uIFFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBPZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7TWU9ITA7cmV0dXJuIEtlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUtlJiZNZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBSZShhLGIpe2lmKFBlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFHZSYmTmUoYSxiKT8oYT1DZSgpLEJlPUFlPXplPW51bGwsUGU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIEplJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBTZT17ZXZlbnRUeXBlczpMZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKEdlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPUxlLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPUxlLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1MZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2UgUGU/TmUoYSxjKSYmKGY9TGUuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1MZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhKZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihQZXx8ZiE9PUxlLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PUxlLmNvbXBvc2l0aW9uRW5kJiZQZSYmKGU9Q2UoKSk6KHplPWQsQWU9XCJ2YWx1ZVwiaW4gemU/emUudmFsdWU6emUudGV4dENvbnRlbnQsUGU9ITApKSxmPURlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9T2UoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFNjKGYpLGU9Zik6ZT1udWxsOyhhPUllP1FlKGEsYyk6UmUoYSxjKSk/KGI9RWUuZ2V0UG9vbGVkKExlLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxTYyhiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSxUZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBVZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIVRlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciBWZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBXZShhLGIsYyl7YT1FLmdldFBvb2xlZChWZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO2NiKGMpO1NjKGEpO3JldHVybiBhfXZhciBYZT1udWxsLFllPW51bGw7ZnVuY3Rpb24gWmUoYSl7QmEoYSl9ZnVuY3Rpb24gJGUoYSl7dmFyIGI9eGUoYSk7aWYoemIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgYmY9ITE7WWEmJihiZj1SZChcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIGNmKCl7WGUmJihYZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZiksWWU9WGU9bnVsbCl9ZnVuY3Rpb24gZGYoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJiRlKFllKSlpZihhPVdlKFllLGEsTWMoYSkpLGliKUJhKGEpO2Vsc2V7aWI9ITA7dHJ5e2ViKFplLGEpfWZpbmFsbHl7aWI9ITEsa2IoKX19fWZ1bmN0aW9uIGVmKGEsYixjKXtcImZvY3VzXCI9PT1hPyhjZigpLFhlPWIsWWU9YyxYZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZikpOlwiYmx1clwiPT09YSYmY2YoKX1mdW5jdGlvbiBmZihhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiAkZShZZSl9ZnVuY3Rpb24gZ2YoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiAkZShiKX1mdW5jdGlvbiBoZihhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiAkZShiKX1cbnZhciBqZj17ZXZlbnRUeXBlczpWZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOmJmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj94ZShiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPWFmO2Vsc2UgaWYoVWUoZSkpaWYoYmYpZz1oZjtlbHNle2c9ZmY7dmFyIGg9ZWZ9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPWdmKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiBXZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkZiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LGtmPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsXG5kZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxsZixtZj17ZXZlbnRUeXBlczprZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtcbmU9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/RmMoYik6bnVsbCxudWxsIT09YiYmKGY9ZWMoYiksYiE9PWZ8fDUhPT1iLnRhZyYmNiE9PWIudGFnKSliPW51bGx9ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpe3ZhciBoPW5kO3ZhciBrPWtmLm1vdXNlTGVhdmU7dmFyIGw9a2YubW91c2VFbnRlcjt2YXIgbT1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaD1vZCxrPWtmLnBvaW50ZXJMZWF2ZSxsPWtmLnBvaW50ZXJFbnRlcixtPVwicG9pbnRlclwiO2E9bnVsbD09Zz9lOnhlKGcpO2U9bnVsbD09Yj9lOnhlKGIpO2s9aC5nZXRQb29sZWQoayxnLGMsZCk7ay50eXBlPW0rXCJsZWF2ZVwiO2sudGFyZ2V0PVxuYTtrLnJlbGF0ZWRUYXJnZXQ9ZTtkPWguZ2V0UG9vbGVkKGwsYixjLGQpO2QudHlwZT1tK1wiZW50ZXJcIjtkLnRhcmdldD1lO2QucmVsYXRlZFRhcmdldD1hO2g9ZzttPWI7aWYoaCYmbSlhOntsPWg7YT1tO2c9MDtmb3IoYj1sO2I7Yj1OYyhiKSlnKys7Yj0wO2ZvcihlPWE7ZTtlPU5jKGUpKWIrKztmb3IoOzA8Zy1iOylsPU5jKGwpLGctLTtmb3IoOzA8Yi1nOylhPU5jKGEpLGItLTtmb3IoO2ctLTspe2lmKGw9PT1hfHxsPT09YS5hbHRlcm5hdGUpYnJlYWsgYTtsPU5jKGwpO2E9TmMoYSl9bD1udWxsfWVsc2UgbD1udWxsO2E9bDtmb3IobD1bXTtoJiZoIT09YTspe2c9aC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1hKWJyZWFrO2wucHVzaChoKTtoPU5jKGgpfWZvcihoPVtdO20mJm0hPT1hOyl7Zz1tLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWEpYnJlYWs7aC5wdXNoKG0pO209TmMobSl9Zm9yKG09MDttPGwubGVuZ3RoO20rKylRYyhsW21dLFwiYnViYmxlZFwiLGspO2ZvcihtPVxuaC5sZW5ndGg7MDxtLS07KVFjKGhbbV0sXCJjYXB0dXJlZFwiLGQpO2lmKGM9PT1sZilyZXR1cm4gbGY9bnVsbCxba107bGY9YztyZXR1cm5bayxkXX19O2Z1bmN0aW9uIG5mKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6bmYscGY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBxZihhLGIpe2lmKG9mKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighcGYuY2FsbChiLGNbZF0pfHwhb2YoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciByZj1ZYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLHNmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSx0Zj1udWxsLHVmPW51bGwsdmY9bnVsbCx3Zj0hMTtcbmZ1bmN0aW9uIHhmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYod2Z8fG51bGw9PXRmfHx0ZiE9PWJlKGMpKXJldHVybiBudWxsO2M9dGY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmZ2UoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gdmYmJnFmKHZmLGMpP251bGw6KHZmPWMsYT1FLmdldFBvb2xlZChzZi5zZWxlY3QsdWYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD10ZixTYyhhKSxhKX1cbnZhciB5Zj17ZXZlbnRUeXBlczpzZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT14YyhlKTtmPWphLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj94ZShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFVlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKXRmPWUsdWY9Yix2Zj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6dmY9dWY9dGY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6d2Y9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiB3Zj0hMSx4ZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihyZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIHhmKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3ZhciB6Zj1DYztzYT15ZTt1YT16Zjt2YT14ZTtDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkVkLEVudGVyTGVhdmVFdmVudFBsdWdpbjptZixDaGFuZ2VFdmVudFBsdWdpbjpqZixTZWxlY3RFdmVudFBsdWdpbjp5ZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOlNlfSk7bmV3IFNldDt2YXIgQWY9W10sQmY9LTE7ZnVuY3Rpb24gRyhhKXswPkJmfHwoYS5jdXJyZW50PUFmW0JmXSxBZltCZl09bnVsbCxCZi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXtCZisrO0FmW0JmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LEo9e2N1cnJlbnQ6Q2Z9LEs9e2N1cnJlbnQ6ITF9LERmPUNmO2Z1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRmYoYSl7RyhLLGEpO0coSixhKX1mdW5jdGlvbiBHZihhKXtHKEssYSk7RyhKLGEpfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiLGEpO0koSyxjLGEpfWZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgsV2EoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEpmKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9Si5jdXJyZW50O0koSixiLGEpO0koSyxLLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhiPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEcoSyxhKSxHKEosYSksSShKLGIsYSkpOkcoSyxhKTtJKEssYyxhKX1cbnZhciBMZj1xLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxNZj1xLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssTmY9cS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxPZj1xLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFBmPXEudW5zdGFibGVfcmVxdWVzdFBhaW50LFFmPXEudW5zdGFibGVfbm93LFJmPXEudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsU2Y9cS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxUZj1xLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFVmPXEudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVmY9cS51bnN0YWJsZV9Mb3dQcmlvcml0eSxXZj1xLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxYZj17fSxZZj12b2lkIDAhPT1QZj9QZjpmdW5jdGlvbigpe30sWmY9bnVsbCwkZj1udWxsLGFnPSExLGJnPVFmKCksY2c9MUU0PmJnP1FmOmZ1bmN0aW9uKCl7cmV0dXJuIFFmKCktYmd9O1xuZnVuY3Rpb24gZGcoKXtzd2l0Y2goUmYoKSl7Y2FzZSBTZjpyZXR1cm4gOTk7Y2FzZSBUZjpyZXR1cm4gOTg7Y2FzZSBVZjpyZXR1cm4gOTc7Y2FzZSBWZjpyZXR1cm4gOTY7Y2FzZSBXZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gZWcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFNmO2Nhc2UgOTg6cmV0dXJuIFRmO2Nhc2UgOTc6cmV0dXJuIFVmO2Nhc2UgOTY6cmV0dXJuIFZmO2Nhc2UgOTU6cmV0dXJuIFdmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEsYil7YT1lZyhhKTtyZXR1cm4gTGYoYSxiKX1mdW5jdGlvbiBnZyhhLGIsYyl7YT1lZyhhKTtyZXR1cm4gTWYoYSxiLGMpfWZ1bmN0aW9uIGhnKGEpe251bGw9PT1aZj8oWmY9W2FdLCRmPU1mKFNmLGlnKSk6WmYucHVzaChhKTtyZXR1cm4gWGZ9ZnVuY3Rpb24gamcoKXtpZihudWxsIT09JGYpe3ZhciBhPSRmOyRmPW51bGw7TmYoYSl9aWcoKX1cbmZ1bmN0aW9uIGlnKCl7aWYoIWFnJiZudWxsIT09WmYpe2FnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVpmO2ZnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtaZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1aZiYmKFpmPVpmLnNsaWNlKGErMSkpLE1mKFNmLGpnKSxjO31maW5hbGx5e2FnPSExfX19dmFyIGtnPTM7ZnVuY3Rpb24gbGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gbWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIG5nPXtjdXJyZW50Om51bGx9LG9nPW51bGwscGc9bnVsbCxxZz1udWxsO2Z1bmN0aW9uIHJnKCl7cWc9cGc9b2c9bnVsbH1cbmZ1bmN0aW9uIHNnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0kobmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHRnKGEpe3ZhciBiPW5nLmN1cnJlbnQ7RyhuZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHVnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fVxuZnVuY3Rpb24gdmcoYSxiKXtvZz1hO3FnPXBnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHdnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1mdW5jdGlvbiB4ZyhhLGIpe2lmKHFnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilxZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09cGcpe2lmKG51bGw9PT1vZyl0aHJvdyBFcnJvcih1KDMwOCkpO3BnPWI7b2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBwZz1wZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgeWc9ITE7XG5mdW5jdGlvbiB6ZyhhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gQWcoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gQmcoYSxiKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIENnKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIERnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT16ZyhjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9QWcoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9QWcoZCkpO251bGw9PT1lfHxkPT09ZT9DZyhkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KENnKGQsYiksQ2coZSxiKSk6KENnKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gRWcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpOkZnKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gRmcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9QWcoYikpO3JldHVybiBifVxuZnVuY3Rpb24gR2coYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjp5Zz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIEhnKGEsYixjLGQsZSl7eWc9ITE7Yj1GZyhhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWssZj1sKSxoPG0mJihoPW0pKTooSWcobSxrLnN1c3BlbnNlQ29uZmlnKSxsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciBDPWsuZXhwaXJhdGlvblRpbWU7QzxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8QyYmKGg9QykpOihsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09XG5rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTtKZyhoKTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiBLZyhhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7TGcoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO0xnKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiBMZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDE5MSxjKSk7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbnZhciBNZz1FYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxOZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBPZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBTZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZWMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVBnKCksZT1NZy5zdXNwZW5zZTtkPVFnKGQsYSxlKTtlPUJnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO0RnKGEsZSk7UmcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UGcoKSxlPU1nLnN1c3BlbnNlO2Q9UWcoZCxhLGUpO2U9QmcoZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtEZyhhLGUpO1JnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVBnKCksZD1NZy5zdXNwZW5zZTtcbmM9UWcoYyxhLGQpO2Q9QmcoYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtEZyhhLGQpO1JnKGEsYyl9fTtmdW5jdGlvbiBUZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFxZihjLGQpfHwhcWYoZSxmKTohMH1cbmZ1bmN0aW9uIFVnKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXhnKGYpOihlPUwoYik/RGY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVNnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFZnKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZTZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIFdnKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Tmc7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD14ZyhmKTooZj1MKGIpP0RmOkouY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoSGcoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKE9nKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlNnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKEhnKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgWGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFlnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1OZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gWmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uICRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9YWgoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1iaChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9WWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWNoKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVlnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9ZWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEMoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWJoKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjPWNoKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVlnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBIYTpyZXR1cm4gYj1kaChiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoWGcoYil8fFxuVWEoYikpcmV0dXJuIGI9ZWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7WmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09SWE/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIEhhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFhnKGMpfHxVYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7WmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBIKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgR2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PUlhP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIEhhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFhnKGQpfHxVYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7WmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxyPWcseD1nPTAsQT1udWxsO251bGwhPT1yJiZ4PGgubGVuZ3RoO3grKyl7ci5pbmRleD54PyhBPXIscj1udWxsKTpBPXIuc2libGluZzt2YXIgcD15KGUscixoW3hdLGspO2lmKG51bGw9PT1wKXtudWxsPT09ciYmKHI9QSk7YnJlYWt9YSYmXG5yJiZudWxsPT09cC5hbHRlcm5hdGUmJmIoZSxyKTtnPWYocCxnLHgpO251bGw9PT1tP2w9cDptLnNpYmxpbmc9cDttPXA7cj1BfWlmKHg9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHIpLGw7aWYobnVsbD09PXIpe2Zvcig7eDxoLmxlbmd0aDt4Kyspcj1DKGUsaFt4XSxrKSxudWxsIT09ciYmKGc9ZihyLGcseCksbnVsbD09PW0/bD1yOm0uc2libGluZz1yLG09cik7cmV0dXJuIGx9Zm9yKHI9ZChlLHIpO3g8aC5sZW5ndGg7eCsrKUE9SChyLGUseCxoW3hdLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZyLmRlbGV0ZShudWxsPT09QS5rZXk/eDpBLmtleSksZz1mKEEsZyx4KSxudWxsPT09bT9sPUE6bS5zaWJsaW5nPUEsbT1BKTthJiZyLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHRhKGUsZyxoLGspe3ZhciBsPVVhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHUoMTUwKSk7aD1sLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWw9bnVsbCxyPWcseD1nPTAsQT1udWxsLHA9aC5uZXh0KCk7bnVsbCE9PXImJiFwLmRvbmU7eCsrLHA9aC5uZXh0KCkpe3IuaW5kZXg+eD8oQT1yLHI9bnVsbCk6QT1yLnNpYmxpbmc7dmFyIHo9eShlLHIscC52YWx1ZSxrKTtpZihudWxsPT09eil7bnVsbD09PXImJihyPUEpO2JyZWFrfWEmJnImJm51bGw9PT16LmFsdGVybmF0ZSYmYihlLHIpO2c9Zih6LGcseCk7bnVsbD09PW0/bD16Om0uc2libGluZz16O209ejtyPUF9aWYocC5kb25lKXJldHVybiBjKGUsciksbDtpZihudWxsPT09cil7Zm9yKDshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9QyhlLHAudmFsdWUsayksbnVsbCE9PXAmJihnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO3JldHVybiBsfWZvcihyPWQoZSxyKTshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9SChyLGUseCxwLnZhbHVlLGspLG51bGwhPT1wJiYoYSYmbnVsbCE9PVxucC5hbHRlcm5hdGUmJnIuZGVsZXRlKG51bGw9PT1wLmtleT94OnAua2V5KSxnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO2EmJnIuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PUlhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIEdhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09SWE6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09SWE/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPVlnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLFxuayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09SWE/KGQ9ZWgoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWNoKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVlnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBIYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWRoKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT1cbnR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1iaChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihYZyhmKSlyZXR1cm4geihhLGQsZixoKTtpZihVYShmKSlyZXR1cm4gdGEoYSxkLGYsaCk7bCYmWmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIGZoPSRnKCEwKSxnaD0kZyghMSksaGg9e30saWg9e2N1cnJlbnQ6aGh9LGpoPXtjdXJyZW50OmhofSxraD17Y3VycmVudDpoaH07ZnVuY3Rpb24gbGgoYSl7aWYoYT09PWhoKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBtaChhLGIpe0koa2gsYixhKTtJKGpoLGEsYSk7SShpaCxoaCxhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpRYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9UWIoYixjKX1HKGloLGEpO0koaWgsYixhKX1mdW5jdGlvbiBuaChhKXtHKGloLGEpO0coamgsYSk7RyhraCxhKX1mdW5jdGlvbiBvaChhKXtsaChraC5jdXJyZW50KTt2YXIgYj1saChpaC5jdXJyZW50KTt2YXIgYz1RYihiLGEudHlwZSk7YiE9PWMmJihJKGpoLGEsYSksSShpaCxjLGEpKX1mdW5jdGlvbiBwaChhKXtqaC5jdXJyZW50PT09YSYmKEcoaWgsYSksRyhqaCxhKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBxaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1qZXx8Yy5kYXRhPT09a2UpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcmgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgc2g9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixOPUVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHRoPTAsdWg9bnVsbCxPPW51bGwsdmg9bnVsbCx3aD1udWxsLFA9bnVsbCx4aD1udWxsLHloPTAsemg9bnVsbCxBaD0wLEJoPSExLENoPW51bGwsR2g9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gSGgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighb2YoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEloKGEsYixjLGQsZSxmKXt0aD1mO3VoPWI7dmg9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7c2guY3VycmVudD1udWxsPT09dmg/Smg6S2g7Yj1jKGQsZSk7aWYoQmgpe2RvIEJoPSExLEdoKz0xLHZoPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLHhoPXdoLHpoPVA9Tz1udWxsLHNoLmN1cnJlbnQ9S2gsYj1jKGQsZSk7d2hpbGUoQmgpO0NoPW51bGw7R2g9MH1zaC5jdXJyZW50PUxoO2E9dWg7YS5tZW1vaXplZFN0YXRlPXdoO2EuZXhwaXJhdGlvblRpbWU9eWg7YS51cGRhdGVRdWV1ZT16aDthLmVmZmVjdFRhZ3w9QWg7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO2lmKGEpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1oKCl7c2guY3VycmVudD1MaDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO0JoPSExO0NoPW51bGw7R2g9MH1mdW5jdGlvbiBOaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD93aD1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiBPaCgpe2lmKG51bGwhPT14aClQPXhoLHhoPVAubmV4dCxPPXZoLHZoPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7aWYobnVsbD09PXZoKXRocm93IEVycm9yKHUoMzEwKSk7Tz12aDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtQPW51bGw9PT1QP3doPWE6UC5uZXh0PWE7dmg9Ty5uZXh0fXJldHVybiBQfVxuZnVuY3Rpb24gUGgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBRaChhKXt2YXIgYj1PaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO2lmKDA8R2gpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PUNoKXt2YXIgZT1DaC5nZXQoYyk7aWYodm9pZCAwIT09ZSl7Q2guZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO29mKGYsYi5tZW1vaXplZFN0YXRlKXx8KHdnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1cbmQpe3ZhciBoPWU9bnVsbCxrPWQsbD0hMTtkb3t2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208dGg/KGx8fChsPSEwLGg9ZyxlPWYpLG0+eWgmJih5aD1tLEpnKHloKSkpOihJZyhtLGsuc3VzcGVuc2VDb25maWcpLGY9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGYsay5hY3Rpb24pKTtnPWs7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1kKTtsfHwoaD1nLGU9Zik7b2YoZixiLm1lbW9pemVkU3RhdGUpfHwod2c9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT1oO2IuYmFzZVN0YXRlPWU7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBSaChhKXt2YXIgYj1OaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpQaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9U2guYmluZChudWxsLHVoLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gVGgoYSl7cmV0dXJuIFFoKFBoLGEpfWZ1bmN0aW9uIFVoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09emg/KHpoPXtsYXN0RWZmZWN0Om51bGx9LHpoLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPXpoLmxhc3RFZmZlY3QsbnVsbD09PWI/emgubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsemgubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1OaCgpO0FofD1hO2UubWVtb2l6ZWRTdGF0ZT1VaChiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBXaChhLGIsYyxkKXt2YXIgZT1PaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkhoKGQsZy5kZXBzKSl7VWgoMCxjLGYsZCk7cmV0dXJufX1BaHw9YTtlLm1lbW9pemVkU3RhdGU9VWgoYixjLGYsZCl9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDE5MixhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFdoKDUxNiwxOTIsYSxiKX1cbmZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gJGgoKXt9ZnVuY3Rpb24gYWkoYSxiKXtOaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkhoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gU2goYSxiLGMpe2lmKCEoMjU+R2gpKXRocm93IEVycm9yKHUoMzAxKSk7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PXVofHxudWxsIT09ZCYmZD09PXVoKWlmKEJoPSEwLGE9e2V4cGlyYXRpb25UaW1lOnRoLHN1c3BlbnNlQ29uZmlnOm51bGwsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PUNoJiYoQ2g9bmV3IE1hcCksYz1DaC5nZXQoYiksdm9pZCAwPT09YylDaC5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXt2YXIgZT1QZygpLGY9TWcuc3VzcGVuc2U7ZT1RZyhlLGEsZik7Zj17ZXhwaXJhdGlvblRpbWU6ZSxzdXNwZW5zZUNvbmZpZzpmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmXG4oZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGs9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxsPWQoayxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1sO2lmKG9mKGwsaykpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31SZyhhLGUpfX1cbnZhciBMaD17cmVhZENvbnRleHQ6eGcsdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0sSmg9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmFpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVmgoNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9TmgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1cblthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1OaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPVNoLmJpbmQobnVsbCx1aCxhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9TmgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6UmgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVJoKGEpLGQ9Y1swXSxlPWNbMV07WGgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPVxuY319KX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVJoKCExKSxjPWJbMF0sZD1iWzFdO3JldHVyblthaShmdW5jdGlvbihiKXtkKCEwKTtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sS2g9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlloLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBXaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gV2goNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/XG5udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmSGgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6UWgsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIE9oKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6VGgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVRoKGEpLGQ9Y1swXSxlPWNbMV07WWgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPWN9fSl9LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1UaCghMSksYz1iWzBdLGQ9YlsxXTtyZXR1cm5bYmkoZnVuY3Rpb24oYil7ZCghMCk7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9XG5OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sY2k9bnVsbCxkaT1udWxsLGVpPSExO2Z1bmN0aW9uIGZpKGEsYil7dmFyIGM9Z2koNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIGhpKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBpaShhKXtpZihlaSl7dmFyIGI9ZGk7aWYoYil7dmFyIGM9YjtpZighaGkoYSxiKSl7Yj1yZShjLm5leHRTaWJsaW5nKTtpZighYnx8IWhpKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7ZWk9ITE7Y2k9YTtyZXR1cm59ZmkoY2ksYyl9Y2k9YTtkaT1yZShiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixlaT0hMSxjaT1hfX1mdW5jdGlvbiBqaShhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47Y2k9YX1cbmZ1bmN0aW9uIGtpKGEpe2lmKGEhPT1jaSlyZXR1cm4hMTtpZighZWkpcmV0dXJuIGppKGEpLGVpPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhb2UoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWRpO2I7KWZpKGEsYiksYj1yZShiLm5leHRTaWJsaW5nKTtqaShhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PWllKXtpZigwPT09Yil7ZGk9cmUoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09aGUmJmMhPT1rZSYmYyE9PWplfHxiKyt9YT1hLm5leHRTaWJsaW5nfWRpPW51bGx9fWVsc2UgZGk9Y2k/cmUoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBsaSgpe2RpPWNpPW51bGw7ZWk9ITF9dmFyIG1pPUVhLlJlYWN0Q3VycmVudE93bmVyLHdnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9naChiLG51bGwsYyxkKTpmaChiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBuaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dmcoYixlKTtkPUloKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXdnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksb2koYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIXFpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLHJpKGEsYixnLGQsZSxmKTthPWNoKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6cWYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gb2koYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9YWgoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIHJpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJnFmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHdnPSExLGU8Zik/b2koYSxiLGYpOnNpKGEsYixjLGQsZil9ZnVuY3Rpb24gdGkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBzaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/RGY6Si5jdXJyZW50O2Y9RWYoYixmKTt2ZyhiLGUpO2M9SWgoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhd2cpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxvaShhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHVpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3ZnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxVZyhiLGMsZCxlKSxXZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD14ZyhsKToobD1MKGMpP0RmOkouY3VycmVudCxsPUVmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0N8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZWZyhiLGcsZCxsKTt5Zz0hMTt2YXIgeT1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXk7dmFyIEg9Yi51cGRhdGVRdWV1ZTtudWxsIT09SCYmKEhnKGIsSCxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx5IT09a3x8Sy5jdXJyZW50fHx5Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihPZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9eWd8fFRnKGIsYyxoLGQseSxrLGwpKT8oQ3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOm1nKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXhnKGwpOihsPUwoYyk/RGY6Si5jdXJyZW50LGw9RWYoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoQz1cblwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmVmcoYixnLGQsbCkseWc9ITEsaz1iLm1lbW9pemVkU3RhdGUseT1nLnN0YXRlPWssSD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1IJiYoSGcoYixILGQsZyxlKSx5PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT15fHxLLmN1cnJlbnR8fHlnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKE9nKGIsYyxtLGQpLHk9Yi5tZW1vaXplZFN0YXRlKSwobT15Z3x8VGcoYixjLGgsZCxrLHksbCkpPyhDfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQseSxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHksbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9eSksZy5wcm9wcz1kLGcuc3RhdGU9eSxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gdmkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gdmkoYSxiLGMsZCxlLGYpe3RpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLG9pKGEsYixmKTtkPWIuc3RhdGVOb2RlO21pLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWZoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZmgoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB3aShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTttaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgeGk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiB5aShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxLGIpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZpaShiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1laChudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPWVoKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1naChiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9YWgoYSxhLnBlbmRpbmdQcm9wcywwKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPWFoKGQsZSxkLmV4cGlyYXRpb25UaW1lKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT14aTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1maChiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9XG5udWxsO3JldHVybiBiLmNoaWxkPWN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPWVoKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9ZWgoZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPWZoKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24gemkoYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3VnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIEFpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQmkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnppKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXppKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkLGIpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1xaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO0FpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PXFoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1BaShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6QWkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZKZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfWZ1bmN0aW9uIENpKGEpe2EuZWZmZWN0VGFnfD00fXZhciBIaSxJaSxKaSxLaTtcbkhpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtJaT1mdW5jdGlvbigpe307XG5KaT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7bGgoaWguY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPUFiKGcsZik7ZD1BYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9S2IoZyxmKTtkPUtiKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9YWUpfVlkKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoaWEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKGlhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiYkZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJkNpKGIpfX07S2k9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJkNpKGIpfTtcbmZ1bmN0aW9uIExpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIE1pKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRmYoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpuaChhKTtHZihhKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gcGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBHKE0sYSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBHKE0sYSksbnVsbDtjYXNlIDQ6cmV0dXJuIG5oKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gdGcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBOaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOlhhKGIpfX1cbnZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBQaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPVhhKGMpKTtudWxsIT09YyYmV2EoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmV2EoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gUWkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe1JpKGEsYyl9fWZ1bmN0aW9uIFNpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1JpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDIsMCxiKTticmVhaztjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzptZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjMpKTt9fVxuZnVuY3Rpb24gVWkoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigwIT09KGQudGFnJmEpKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1lJiZlKCl9MCE9PShkLnRhZyZiKSYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIFZpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2kmJldpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2ZnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtSaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6U2koYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmUWkoYixjKTticmVhaztjYXNlIDU6U2koYik7YnJlYWs7Y2FzZSA0OlhpKGEsYixjKX19XG5mdW5jdGlvbiBZaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO251bGwhPT1iJiZZaShiKX1mdW5jdGlvbiBaaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uICRpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFppKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihUYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8WmkoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXt2YXIgZj01PT09ZS50YWd8fDY9PT1lLnRhZztpZihmKXt2YXIgZz1mP2Uuc3RhdGVOb2RlOmUuc3RhdGVOb2RlLmluc3RhbmNlO2lmKGMpaWYoZCl7Zj1iO3ZhciBoPWc7Zz1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaCxnKTpmLmluc2VydEJlZm9yZShoLGcpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZyxjKTtlbHNlIGQ/KGg9Yiw4PT09aC5ub2RlVHlwZT8oZj1oLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoZyxoKSk6KGY9aCxmLmFwcGVuZENoaWxkKGcpKSxoPWguX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09aCYmdm9pZCAwIT09aHx8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz1hZSkpOmIuYXBwZW5kQ2hpbGQoZyl9ZWxzZSBpZig0IT09XG5lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gWGkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihWaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoVmkoYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIGFqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6VWkoNCw4LGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbdmVdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkNiKGMsZCk7WmQoYSxlKTtiPVpkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9XZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/U2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1RiKGMsaCk6dmIoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkViKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYyxcbmQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0piKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9KYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1icmVhaztjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsTGMoYi5jb250YWluZXJJbmZvKSk7YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP2Q9ITE6KGQ9ITAsYz1iLmNoaWxkLGJqPWNnKCkpO1xuaWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PVZkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPWY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49XG5hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWNqKGIpO2JyZWFrO2Nhc2UgMTk6Y2ooYik7YnJlYWs7Y2FzZSAxNzpicmVhaztjYXNlIDIwOmJyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MykpO319ZnVuY3Rpb24gY2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgT2kpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1kai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX12YXIgZWo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7XG5mdW5jdGlvbiBmaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2dqfHwoZ2o9ITAsaGo9ZCk7UGkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBpaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtQaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09amo/amo9bmV3IFNldChbdGhpc10pOmpqLmFkZCh0aGlzKSxQaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBraj1NYXRoLmNlaWwsbGo9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixtaj1FYS5SZWFjdEN1cnJlbnRPd25lcixTPTAsbmo9OCxvaj0xNixwaj0zMixxaj0wLHJqPTEsc2o9Mix0aj0zLHVqPTQsdmo9NSxUPVMsVT1udWxsLFY9bnVsbCxXPTAsWD1xaix3aj1udWxsLHhqPTEwNzM3NDE4MjMseWo9MTA3Mzc0MTgyMyx6aj1udWxsLEFqPTAsQmo9ITEsYmo9MCxDaj01MDAsWT1udWxsLGdqPSExLGhqPW51bGwsamo9bnVsbCxEaj0hMSxFaj1udWxsLEZqPTkwLEdqPW51bGwsSGo9MCxJaj1udWxsLEpqPTA7ZnVuY3Rpb24gUGcoKXtyZXR1cm4oVCYob2p8cGopKSE9PVM/MTA3Mzc0MTgyMS0oY2coKS8xMHwwKTowIT09Smo/Smo6Smo9MTA3Mzc0MTgyMS0oY2coKS8xMHwwKX1cbmZ1bmN0aW9uIFFnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9ZGcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFQmb2opIT09UylyZXR1cm4gVztpZihudWxsIT09YylhPWxnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWxnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9bGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1VJiZhPT09VyYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZig1MDxIail0aHJvdyBIaj0wLElqPW51bGwsRXJyb3IodSgxODUpKTthPUtqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWRnKCk7MTA3Mzc0MTgyMz09PWI/KFQmbmopIT09UyYmKFQmKG9qfHBqKSk9PT1TP0xqKGEpOihaKGEpLFQ9PT1TJiZqZygpKTpaKGEpOyhUJjQpPT09U3x8OTghPT1jJiY5OSE9PWN8fChudWxsPT09R2o/R2o9bmV3IE1hcChbW2EsYl1dKTooYz1Hai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJkdqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24gS2ooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFU9PT1lJiYoSmcoYiksWD09PXVqJiZNaihlLFcpKSxOaihlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIE9qKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFQaihhLGIpKXJldHVybiBiO2I9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO3JldHVybiBiPmE/YjphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWhnKExqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj1PaihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9UGcoKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09WGYmJk5mKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9oZyhMai5iaW5kKG51bGwsYSkpOmdnKGQsUWouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLWNnKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBRaihhLGIpe0pqPTA7aWYoYilyZXR1cm4gYj1QZygpLFJqKGEsYiksWihhKSxudWxsO3ZhciBjPU9qKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMyNykpO1NqKCk7YT09PVUmJmM9PT1XfHxUaihhLGMpO2lmKG51bGwhPT1WKXt2YXIgZD1UO1R8PW9qO3ZhciBlPVVqKGEpO2RvIHRyeXtWaigpO2JyZWFrfWNhdGNoKGgpe1dqKGEsaCl9d2hpbGUoMSk7cmcoKTtUPWQ7bGouY3VycmVudD1lO2lmKFg9PT1yail0aHJvdyBiPXdqLFRqKGEsYyksTWooYSxjKSxaKGEpLGI7aWYobnVsbD09PVYpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVgsVT1udWxsLGQpe2Nhc2UgcWo6Y2FzZSByajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2Ugc2o6UmooYSwyPGM/MjpjKTticmVhaztjYXNlIHRqOk1qKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1YaihlKSk7aWYoMTA3Mzc0MTgyMz09PXhqJiYoZT1iaitDai1jZygpLDEwPGUpKXtpZihCail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO1RqKGEsYyk7YnJlYWt9fWY9T2ooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1wZShZai5iaW5kKG51bGwsYSksZSk7YnJlYWt9WWooYSk7YnJlYWs7Y2FzZSB1ajpNaihhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPVhqKGUpKTtpZihCaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztUaihhLGMpO2JyZWFrfWU9T2ooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PXlqP2Q9MTAqKDEwNzM3NDE4MjEteWopLWNnKCk6MTA3Mzc0MTgyMz09PXhqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS14aiktNUUzLGU9Y2coKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmtqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPXBlKFlqLmJpbmQobnVsbCxhKSxkKTticmVha31ZaihhKTticmVhaztjYXNlIHZqOmlmKDEwNzM3NDE4MjMhPT14aiYmbnVsbCE9PXpqKXtmPXhqO3ZhciBnPXpqO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPWNnKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7TWooYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5wZShZai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fVlqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIFFqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBMaihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZihhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1iKVlqKGEpO2Vsc2V7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7U2ooKTthPT09VSYmYj09PVd8fFRqKGEsYik7aWYobnVsbCE9PVYpe3ZhciBjPVQ7VHw9b2o7dmFyIGQ9VWooYSk7ZG8gdHJ5e1pqKCk7YnJlYWt9Y2F0Y2goZSl7V2ooYSxlKX13aGlsZSgxKTtyZygpO1Q9Yztsai5jdXJyZW50PWQ7aWYoWD09PXJqKXRocm93IGM9d2osVGooYSxiKSxNaihhLGIpLFooYSksYztpZihudWxsIT09Vil0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VT1udWxsO1lqKGEpO1ooYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gYWsoKXtpZihudWxsIT09R2ope3ZhciBhPUdqO0dqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7UmooYyxhKTtaKGMpfSk7amcoKX19ZnVuY3Rpb24gYmsoYSxiKXt2YXIgYz1UO1R8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1mdW5jdGlvbiBjayhhLGIpe3ZhciBjPVQ7VCY9LTI7VHw9bmo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1cbmZ1bmN0aW9uIFRqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHFlKGMpKTtpZihudWxsIT09Vilmb3IoYz1WLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6dmFyIGU9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1lJiZ2b2lkIDAhPT1lJiZGZihkKTticmVhaztjYXNlIDM6bmgoZCk7R2YoZCk7YnJlYWs7Y2FzZSA1OnBoKGQpO2JyZWFrO2Nhc2UgNDpuaChkKTticmVhaztjYXNlIDEzOkcoTSxkKTticmVhaztjYXNlIDE5OkcoTSxkKTticmVhaztjYXNlIDEwOnRnKGQpfWM9Yy5yZXR1cm59VT1hO1Y9YWgoYS5jdXJyZW50LG51bGwsYik7Vz1iO1g9cWo7d2o9bnVsbDt5aj14aj0xMDczNzQxODIzO3pqPW51bGw7QWo9MDtCaj0hMX1cbmZ1bmN0aW9uIFdqKGEsYil7ZG97dHJ5e3JnKCk7TWgoKTtpZihudWxsPT09Vnx8bnVsbD09PVYucmV0dXJuKXJldHVybiBYPXJqLHdqPWIsbnVsbDthOnt2YXIgYz1hLGQ9Vi5yZXR1cm4sZT1WLGY9YjtiPVc7ZS5lZmZlY3RUYWd8PTIwNDg7ZS5maXJzdEVmZmVjdD1lLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ZiYmXCJvYmplY3RcIj09PXR5cGVvZiBmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi50aGVuKXt2YXIgZz1mLGg9MCE9PShNLmN1cnJlbnQmMSksaz1kO2Rve3ZhciBsO2lmKGw9MTM9PT1rLnRhZyl7dmFyIG09ay5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKWw9bnVsbCE9PW0uZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBDPWsubWVtb2l6ZWRQcm9wcztsPXZvaWQgMD09PUMuZmFsbGJhY2s/ITE6ITAhPT1DLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOmg/ITE6ITB9fWlmKGwpe3ZhciB5PWsudXBkYXRlUXVldWU7aWYobnVsbD09PXkpe3ZhciBIPW5ldyBTZXQ7XG5ILmFkZChnKTtrLnVwZGF0ZVF1ZXVlPUh9ZWxzZSB5LmFkZChnKTtpZigwPT09KGsubW9kZSYyKSl7ay5lZmZlY3RUYWd8PTY0O2UuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09ZS50YWcpaWYobnVsbD09PWUuYWx0ZXJuYXRlKWUudGFnPTE3O2Vsc2V7dmFyIHo9QmcoMTA3Mzc0MTgyMyxudWxsKTt6LnRhZz0yO0RnKGUseil9ZS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9Zj12b2lkIDA7ZT1iO3ZhciB0YT1jLnBpbmdDYWNoZTtudWxsPT09dGE/KHRhPWMucGluZ0NhY2hlPW5ldyBlaixmPW5ldyBTZXQsdGEuc2V0KGcsZikpOihmPXRhLmdldChnKSx2b2lkIDA9PT1mJiYoZj1uZXcgU2V0LHRhLnNldChnLGYpKSk7aWYoIWYuaGFzKGUpKXtmLmFkZChlKTt2YXIgcj1kay5iaW5kKG51bGwsYyxnLGUpO2cudGhlbihyLHIpfWsuZWZmZWN0VGFnfD00MDk2O2suZXhwaXJhdGlvblRpbWU9YjticmVhayBhfWs9ay5yZXR1cm59d2hpbGUobnVsbCE9PWspO2Y9RXJyb3IoKFdhKGUudHlwZSl8fFxuXCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK1hhKGUpKX1YIT09dmomJihYPXNqKTtmPU5pKGYsZSk7az1kO2Rve3N3aXRjaChrLnRhZyl7Y2FzZSAzOmc9ZjtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHg9ZmooayxnLGIpO0VnKGsseCk7YnJlYWsgYTtjYXNlIDE6Zz1mO3ZhciBBPWsudHlwZSxwPWsuc3RhdGVOb2RlO2lmKDA9PT0oay5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09cCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHAuY29tcG9uZW50RGlkQ2F0Y2gmJlxuKG51bGw9PT1qanx8IWpqLmhhcyhwKSkpKXtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHQ9aWooayxnLGIpO0VnKGssdCk7YnJlYWsgYX19az1rLnJldHVybn13aGlsZShudWxsIT09ayl9Vj1layhWKX1jYXRjaCh2KXtiPXY7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gVWooKXt2YXIgYT1sai5jdXJyZW50O2xqLmN1cnJlbnQ9TGg7cmV0dXJuIG51bGw9PT1hP0xoOmF9ZnVuY3Rpb24gSWcoYSxiKXthPHhqJiYyPGEmJih4aj1hKTtudWxsIT09YiYmYTx5aiYmMjxhJiYoeWo9YSx6aj1iKX1mdW5jdGlvbiBKZyhhKXthPkFqJiYoQWo9YSl9ZnVuY3Rpb24gWmooKXtmb3IoO251bGwhPT1WOylWPWZrKFYpfWZ1bmN0aW9uIFZqKCl7Zm9yKDtudWxsIT09ViYmIU9mKCk7KVY9ZmsoVil9XG5mdW5jdGlvbiBmayhhKXt2YXIgYj1nayhhLmFsdGVybmF0ZSxhLFcpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9ZWsoYSkpO21qLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVrKGEpe1Y9YTtkb3t2YXIgYj1WLmFsdGVybmF0ZTthPVYucmV0dXJuO2lmKDA9PT0oVi5lZmZlY3RUYWcmMjA0OCkpe2E6e3ZhciBjPWI7Yj1WO3ZhciBkPVc7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDM6bmgoYik7R2YoYik7ZT1iLnN0YXRlTm9kZTtlLnBlbmRpbmdDb250ZXh0JiYoZS5jb250ZXh0PWUucGVuZGluZ0NvbnRleHQsZS5wZW5kaW5nQ29udGV4dD1udWxsKTsobnVsbD09PWN8fG51bGw9PT1jLmNoaWxkKSYma2koYikmJkNpKGIpO0lpKGIpO2JyZWFrO2Nhc2UgNTpwaChiKTtkPWxoKGtoLmN1cnJlbnQpO3ZhciBmPWIudHlwZTtpZihudWxsIT09YyYmbnVsbCE9Yi5zdGF0ZU5vZGUpSmkoYyxiLGYsZSxkKSxjLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZSBpZihlKXt2YXIgZz1cbmxoKGloLmN1cnJlbnQpO2lmKGtpKGIpKXtlPWI7dmFyIGg9ZS5zdGF0ZU5vZGU7Yz1lLnR5cGU7dmFyIGs9ZS5tZW1vaXplZFByb3BzLGw9ZDtoW3VlXT1lO2hbdmVdPWs7Zj12b2lkIDA7ZD1oO3N3aXRjaChjKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGNjLmxlbmd0aDtoKyspRihjY1toXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpCYihkLGspO0YoXCJpbnZhbGlkXCIsZCk7JGQobCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFrLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpOyRkKGwsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihkLGspLEYoXCJpbnZhbGlkXCIsZCksJGQobCxcIm9uQ2hhbmdlXCIpfVlkKGMsayk7aD1udWxsO2ZvcihmIGluIGspay5oYXNPd25Qcm9wZXJ0eShmKSYmKGc9a1tmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgZz9kLnRleHRDb250ZW50IT09ZyYmKGg9W1wiY2hpbGRyZW5cIixnXSk6XCJudW1iZXJcIj09PXR5cGVvZiBnJiZkLnRleHRDb250ZW50IT09XCJcIitnJiYoaD1bXCJjaGlsZHJlblwiLFwiXCIrZ10pOmlhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1nJiYkZChsLGYpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWIoZCk7R2IoZCxrLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5YihkKTtOYihkLGspO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5vbkNsaWNrJiZcbihkLm9uY2xpY2s9YWUpfWY9aDtlLnVwZGF0ZVF1ZXVlPWY7ZT1udWxsIT09Zj8hMDohMTtlJiZDaShiKX1lbHNle2M9YjtsPWY7az1lO2g9OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQ7Zz09PU9iLmh0bWwmJihnPVBiKGwpKTtnPT09T2IuaHRtbD9cInNjcmlwdFwiPT09bD8oaz1oLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksay5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixoPWsucmVtb3ZlQ2hpbGQoay5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBrLmlzP2g9aC5jcmVhdGVFbGVtZW50KGwse2lzOmsuaXN9KTooaD1oLmNyZWF0ZUVsZW1lbnQobCksXCJzZWxlY3RcIj09PWwmJihsPWgsay5tdWx0aXBsZT9sLm11bHRpcGxlPSEwOmsuc2l6ZSYmKGwuc2l6ZT1rLnNpemUpKSk6aD1oLmNyZWF0ZUVsZW1lbnROUyhnLGwpO2s9aDtrW3VlXT1jO2tbdmVdPWU7SGkoayxiLCExLCExKTtiLnN0YXRlTm9kZT1rO2w9ZjtjPWU7dmFyIG09ZCxDPVpkKGwsYyk7c3dpdGNoKGwpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmspO2Q9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8Y2MubGVuZ3RoO2QrKylGKGNjW2RdLGspO2Q9YzticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGspO0YoXCJsb2FkXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsayk7RihcInN1Ym1pdFwiLGspO2Q9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6QmIoayxjKTtkPUFiKGssYyk7RihcImludmFsaWRcIixrKTskZChtLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmQ9SWIoayxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6ay5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWMubXVsdGlwbGV9O2Q9bih7fSxjLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGspOyRkKG0sXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihrLFxuYyk7ZD1LYihrLGMpO0YoXCJpbnZhbGlkXCIsayk7JGQobSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6ZD1jfVlkKGwsZCk7aD12b2lkIDA7Zz1sO3ZhciB5PWssSD1kO2ZvcihoIGluIEgpaWYoSC5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIHo9SFtoXTtcInN0eWxlXCI9PT1oP1dkKHkseik6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oej16P3ouX19odG1sOnZvaWQgMCxudWxsIT16JiZTYih5LHopKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygej8oXCJ0ZXh0YXJlYVwiIT09Z3x8XCJcIiE9PXopJiZUYih5LHopOlwibnVtYmVyXCI9PT10eXBlb2YgeiYmVGIoeSxcIlwiK3opOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihpYS5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT16JiYkZChtLGgpOm51bGwhPXomJnZiKHksaCx6LEMpKX1zd2l0Y2gobCl7Y2FzZSBcImlucHV0XCI6eWIoayk7XG5HYihrLGMsITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnliKGspO05iKGssYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmsuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3ViKGMudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZD1rO2QubXVsdGlwbGU9ISFjLm11bHRpcGxlO2s9Yy52YWx1ZTtudWxsIT1rP0piKGQsISFjLm11bHRpcGxlLGssITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZKYihkLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoay5vbmNsaWNrPWFlKX0oZT1uZShmLGUpKSYmQ2koYil9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTticmVhaztjYXNlIDY6aWYoYyYmbnVsbCE9Yi5zdGF0ZU5vZGUpS2koYyxiLGMubWVtb2l6ZWRQcm9wcyxlKTtlbHNle2lmKFwic3RyaW5nXCIhPT1cbnR5cGVvZiBlJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtkPWxoKGtoLmN1cnJlbnQpO2xoKGloLmN1cnJlbnQpO2tpKGIpPyhlPWIsZj1lLnN0YXRlTm9kZSxkPWUubWVtb2l6ZWRQcm9wcyxmW3VlXT1lLChlPWYubm9kZVZhbHVlIT09ZCkmJkNpKGIpKTooZj1iLGU9KDk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShlKSxlW3VlXT1mLGIuc3RhdGVOb2RlPWUpfWJyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpHKE0sYik7ZT1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZDticmVhayBhfWU9bnVsbCE9PWU7Zj0hMTtudWxsPT09Yz92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJmtpKGIpOihkPWMubWVtb2l6ZWRTdGF0ZSxmPW51bGwhPT1kLGV8fG51bGw9PT1kfHwoZD1jLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWQmJihrPWIuZmlyc3RFZmZlY3QsXG5udWxsIT09az8oYi5maXJzdEVmZmVjdD1kLGQubmV4dEVmZmVjdD1rKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9ZCxkLm5leHRFZmZlY3Q9bnVsbCksZC5lZmZlY3RUYWc9OCkpKTtpZihlJiYhZiYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWMmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlYPT09cWomJihYPXRqKTtlbHNle2lmKFg9PT1xanx8WD09PXRqKVg9dWo7MCE9PUFqJiZudWxsIT09VSYmKE1qKFUsVyksTmooVSxBaikpfWlmKGV8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpuaChiKTtJaShiKTticmVhaztjYXNlIDEwOnRnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDE5OkcoTSxiKTtlPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09XG5lKWJyZWFrO2Y9MCE9PShiLmVmZmVjdFRhZyY2NCk7az1lLnJlbmRlcmluZztpZihudWxsPT09aylpZihmKUxpKGUsITEpO2Vsc2V7aWYoWCE9PXFqfHxudWxsIT09YyYmMCE9PShjLmVmZmVjdFRhZyY2NCkpZm9yKGM9Yi5jaGlsZDtudWxsIT09Yzspe2s9cWgoYyk7aWYobnVsbCE9PWspe2IuZWZmZWN0VGFnfD02NDtMaShlLCExKTtmPWsudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1lLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1lLmxhc3RFZmZlY3Q7ZT1kO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWQ9ZixjPWUsZC5lZmZlY3RUYWcmPTIsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsLGs9ZC5hbHRlcm5hdGUsbnVsbD09PWs/KGQuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGQuZXhwaXJhdGlvblRpbWU9YyxkLmNoaWxkPW51bGwsXG5kLm1lbW9pemVkUHJvcHM9bnVsbCxkLm1lbW9pemVkU3RhdGU9bnVsbCxkLnVwZGF0ZVF1ZXVlPW51bGwsZC5kZXBlbmRlbmNpZXM9bnVsbCk6KGQuY2hpbGRFeHBpcmF0aW9uVGltZT1rLmNoaWxkRXhwaXJhdGlvblRpbWUsZC5leHBpcmF0aW9uVGltZT1rLmV4cGlyYXRpb25UaW1lLGQuY2hpbGQ9ay5jaGlsZCxkLm1lbW9pemVkUHJvcHM9ay5tZW1vaXplZFByb3BzLGQubWVtb2l6ZWRTdGF0ZT1rLm1lbW9pemVkU3RhdGUsZC51cGRhdGVRdWV1ZT1rLnVwZGF0ZVF1ZXVlLGM9ay5kZXBlbmRlbmNpZXMsZC5kZXBlbmRlbmNpZXM9bnVsbD09PWM/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Yy5maXJzdENvbnRleHQscmVzcG9uZGVyczpjLnJlc3BvbmRlcnN9KSxmPWYuc2libGluZztJKE0sTS5jdXJyZW50JjF8MixiKTtiPWIuY2hpbGQ7YnJlYWsgYX1jPWMuc2libGluZ319ZWxzZXtpZighZilpZihjPXFoKGspLG51bGwhPT1jKXtpZihiLmVmZmVjdFRhZ3w9XG42NCxmPSEwLGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmVmZmVjdFRhZ3w9NCksTGkoZSwhMCksbnVsbD09PWUudGFpbCYmXCJoaWRkZW5cIj09PWUudGFpbE1vZGUmJiFrLmFsdGVybmF0ZSl7Yj1iLmxhc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0O251bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpO2JyZWFrfX1lbHNlIGNnKCk+ZS50YWlsRXhwaXJhdGlvbiYmMTxkJiYoYi5lZmZlY3RUYWd8PTY0LGY9ITAsTGkoZSwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9ZC0xKTtlLmlzQmFja3dhcmRzPyhrLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWspOihkPWUubGFzdCxudWxsIT09ZD9kLnNpYmxpbmc9azpiLmNoaWxkPWssZS5sYXN0PWspfWlmKG51bGwhPT1lLnRhaWwpezA9PT1lLnRhaWxFeHBpcmF0aW9uJiYoZS50YWlsRXhwaXJhdGlvbj1jZygpKzUwMCk7ZD1lLnRhaWw7ZS5yZW5kZXJpbmc9ZDtlLnRhaWw9ZC5zaWJsaW5nO1xuZS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdDtkLnNpYmxpbmc9bnVsbDtlPU0uY3VycmVudDtlPWY/ZSYxfDI6ZSYxO0koTSxlLGIpO2I9ZDticmVhayBhfWJyZWFrO2Nhc2UgMjA6YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fWI9bnVsbH1lPVY7aWYoMT09PVd8fDEhPT1lLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Y9MDtmb3IoZD1lLmNoaWxkO251bGwhPT1kOyljPWQuZXhwaXJhdGlvblRpbWUsaz1kLmNoaWxkRXhwaXJhdGlvblRpbWUsYz5mJiYoZj1jKSxrPmYmJihmPWspLGQ9ZC5zaWJsaW5nO2UuY2hpbGRFeHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVYuZmlyc3RFZmZlY3QpLG51bGwhPT1WLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9XG5WLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Vi5sYXN0RWZmZWN0KSwxPFYuZWZmZWN0VGFnJiYobnVsbCE9PWEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1WOmEuZmlyc3RFZmZlY3Q9VixhLmxhc3RFZmZlY3Q9VikpfWVsc2V7Yj1NaShWLFcpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1WLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7Vj1hfXdoaWxlKG51bGwhPT1WKTtYPT09cWomJihYPXZqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBYaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIFlqKGEpe3ZhciBiPWRnKCk7ZmcoOTksaWsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gaWsoYSxiKXtkbyBTaigpO3doaWxlKG51bGwhPT1Faik7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1YaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1VJiYoVj1VPW51bGwsVz0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1UO1R8PXBqO21qLmN1cnJlbnQ9bnVsbDtsZT1MZDt2YXIgZz1mZSgpO2lmKGdlKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2goRGIpe2g9bnVsbDticmVhayBhfXZhciBDPTAseT0tMSxIPS0xLHo9MCx0YT0wLHI9Zyx4PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXtyIT09aHx8MCE9PWwmJjMhPT1yLm5vZGVUeXBlfHwoeT1DK2wpO3IhPT1tfHwwIT09ayYmMyE9PXIubm9kZVR5cGV8fChIPUMrayk7Mz09PXIubm9kZVR5cGUmJihDKz1yLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT1yLmZpcnN0Q2hpbGQpKWJyZWFrO3g9cjtyPUF9Zm9yKDs7KXtpZihyPT09ZylicmVhayBiO3g9PT1oJiYrK3o9PT1sJiYoeT1DKTt4PT09bSYmKyt0YT09PWsmJihIPUMpO2lmKG51bGwhPT0oQT1yLm5leHRTaWJsaW5nKSlicmVhaztyPXg7eD1yLnBhcmVudE5vZGV9cj1BfWg9LTE9PT15fHwtMT09PUg/bnVsbDp7c3RhcnQ6eSxlbmQ6SH19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDttZT17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtMZD0hMTtZPWU7ZG8gdHJ5e2prKCl9Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcD1ZLmVmZmVjdFRhZztwJjE2JiZUYihZLnN0YXRlTm9kZSxcIlwiKTtpZihwJjEyOCl7dmFyIHQ9WS5hbHRlcm5hdGU7aWYobnVsbCE9PXQpe3ZhciB2PXQucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChwJjEwMzgpe2Nhc2UgMjokaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OiRpKFkpO1kuZWZmZWN0VGFnJj0tMzthaihZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9LTEwMjU7YWooWS5hbHRlcm5hdGUsXG5ZKTticmVhaztjYXNlIDQ6YWooWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxYaShnLGwsaCksWWkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt2PW1lO3Q9ZmUoKTtwPXYuZm9jdXNlZEVsZW07aD12LnNlbGVjdGlvblJhbmdlO2lmKHQhPT1wJiZwJiZwLm93bmVyRG9jdW1lbnQmJmVlKHAub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscCkpe251bGwhPT1oJiZnZShwKSYmKHQ9aC5zdGFydCx2PWguZW5kLHZvaWQgMD09PXYmJih2PXQpLFwic2VsZWN0aW9uU3RhcnRcImluIHA/KHAuc2VsZWN0aW9uU3RhcnQ9dCxwLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHAudmFsdWUubGVuZ3RoKSk6KHY9KHQ9cC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnQuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxcbmw9cC50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdi5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPWRlKHAsZyksbT1kZShwLGgpLGwmJm0mJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1sLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09bS5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYodD10LmNyZWF0ZVJhbmdlKCksdC5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh2LmFkZFJhbmdlKHQpLHYuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOih0LnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHYuYWRkUmFuZ2UodCkpKSkpKTt0PVtdO2Zvcih2PXA7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZ0LnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBwLmZvY3VzJiZwLmZvY3VzKCk7Zm9yKHA9MDtwPHQubGVuZ3RoO3ArKyl2PXRbcF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9bWU9bnVsbDtMZD0hIWxlO2xlPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocD1kO251bGwhPT1ZOyl7dmFyIERoPVkuZWZmZWN0VGFnO2lmKERoJjM2KXt2YXIgZGM9WS5hbHRlcm5hdGU7dD1ZO3Y9cDtzd2l0Y2godC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VWkoMTYsMzIsdCk7YnJlYWs7Y2FzZSAxOnZhciBmZD10LnN0YXRlTm9kZTtpZih0LmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kYylmZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGhrPXQuZWxlbWVudFR5cGU9PT10LnR5cGU/ZGMubWVtb2l6ZWRQcm9wczptZyh0LnR5cGUsZGMubWVtb2l6ZWRQcm9wcyk7ZmQuY29tcG9uZW50RGlkVXBkYXRlKGhrLGRjLm1lbW9pemVkU3RhdGUsXG5mZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIEVoPXQudXBkYXRlUXVldWU7bnVsbCE9PUVoJiZLZyh0LEVoLGZkLHYpO2JyZWFrO2Nhc2UgMzp2YXIgRmg9dC51cGRhdGVRdWV1ZTtpZihudWxsIT09Rmgpe2c9bnVsbDtpZihudWxsIT09dC5jaGlsZClzd2l0Y2godC5jaGlsZC50YWcpe2Nhc2UgNTpnPXQuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPXQuY2hpbGQuc3RhdGVOb2RlfUtnKHQsRmgsZyx2KX1icmVhaztjYXNlIDU6dmFyIHhrPXQuc3RhdGVOb2RlO251bGw9PT1kYyYmdC5lZmZlY3RUYWcmNCYmbmUodC50eXBlLHQubWVtb2l6ZWRQcm9wcykmJnhrLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PXQubWVtb2l6ZWRTdGF0ZSl7dmFyIERpPXQuYWx0ZXJuYXRlO2lmKG51bGwhPT1EaSl7dmFyIEVpPURpLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PUVpKXt2YXIgRmk9XG5FaS5kZWh5ZHJhdGVkO251bGwhPT1GaSYmTGMoRmkpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1pZihEaCYxMjgpe3Q9dm9pZCAwO3ZhciB4ZD1ZLnJlZjtpZihudWxsIT09eGQpe3ZhciBHaT1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTp0PUdpO2JyZWFrO2RlZmF1bHQ6dD1HaX1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeGQ/eGQodCk6eGQuY3VycmVudD10fX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9bnVsbDtZZigpO1Q9Zn1lbHNlIGEuY3VycmVudD1jO2lmKERqKURqPSExLEVqPWEsRmo9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmXG4oamo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PUlqP0hqKys6KEhqPTAsSWo9YSk6SGo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2Yga2smJmtrKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoZ2opdGhyb3cgZ2o9ITEsYT1oaixoaj1udWxsLGE7aWYoKFQmbmopIT09UylyZXR1cm4gbnVsbDtqZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIGprKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZUaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8RGp8fChEaj0hMCxnZyg5NyxmdW5jdGlvbigpe1NqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fWZ1bmN0aW9uIFNqKCl7aWYoOTAhPT1Gail7dmFyIGE9OTc8Rmo/OTc6Rmo7Rmo9OTA7cmV0dXJuIGZnKGEsbGspfX1cbmZ1bmN0aW9uIGxrKCl7aWYobnVsbD09PUVqKXJldHVybiExO3ZhciBhPUVqO0VqPW51bGw7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VDtUfD1wajtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDEyOCwwLGMpLFVpKDAsNjQsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7UmkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9VD1iO2pnKCk7cmV0dXJuITB9ZnVuY3Rpb24gbWsoYSxiLGMpe2I9TmkoYyxiKTtiPWZqKGEsYiwxMDczNzQxODIzKTtEZyhhLGIpO2E9S2ooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1cbmZ1bmN0aW9uIFJpKGEsYil7aWYoMz09PWEudGFnKW1rKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7bWsoYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09amp8fCFqai5oYXMoZCkpKXthPU5pKGIsYSk7YT1paihjLGEsMTA3Mzc0MTgyMyk7RGcoYyxhKTtjPUtqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gZGsoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtVPT09YSYmVz09PWM/WD09PXVqfHxYPT09dGomJjEwNzM3NDE4MjM9PT14aiYmY2coKS1iajxDaj9UaihhLFcpOkJqPSEwOlBqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1jJiYoYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTAsYS5maW5pc2hlZFdvcms9bnVsbCksWihhKSkpfWZ1bmN0aW9uIGRqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9UGcoKSxiPVFnKGIsYSxudWxsKSk7YT1LaihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBnaztcbmdrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpd2c9ITA7ZWxzZXtpZihkPGMpe3dnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOndpKGIpO2xpKCk7YnJlYWs7Y2FzZSA1Om9oKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6bWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnNnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB5aShhLGIsYyk7SShNLE0uY3VycmVudCZcbjEsYik7Yj1vaShhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSxiKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBCaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCxiKTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gb2koYSxiLGMpfXdnPSExfX1lbHNlIHdnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsSi5jdXJyZW50KTt2ZyhiLGMpO2U9SWgobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO01oKCk7aWYoTChkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJk9nKGIsZCxnLGEpO2UudXBkYXRlcj1TZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO1dnKGIsZCxhLGMpO2I9dmkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7VmEoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7XG5lPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPW5rKGUpO2E9bWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9c2kobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDE6Yj11aShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTE6Yj1uaShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTQ6Yj1waShudWxsLGIsZSxtZyhlLnR5cGUsYSksZCxjKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksc2koYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksdWkoYSxiLGQsZSxjKTtjYXNlIDM6d2koYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6XG5udWxsO0hnKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpbGkoKSxiPW9pKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlkaT1yZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGNpPWIsZT1laT0hMDtpZihlKWZvcihjPWdoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxsaSgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIG9oKGIpLG51bGw9PT1hJiZpaShiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG9lKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZvZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx0aShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9XG5iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZpaShiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHlpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIG1oKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWZoKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG5pKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7XG5lPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtzZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9b2YoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj1vaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9QmcoYyxudWxsKSxsLnRhZz0yLERnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9XG5jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3VnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix2ZyhiLGMpLGU9eGcoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtcbmNhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bWcoZSxiLnBlbmRpbmdQcm9wcyksZj1tZyhlLnR5cGUsZikscGkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHJpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsSmYoYikpOmE9ITEsdmcoYixjKSxVZyhiLGQsZSxjKSxXZyhiLGQsZSxjKSx2aShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEJpKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIGtrPW51bGwsV2k9bnVsbDtcbmZ1bmN0aW9uIG9rKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO2trPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O1dpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gcGsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBnaShhLGIsYyxkKXtyZXR1cm4gbmV3IHBrKGEsYixjLGQpfVxuZnVuY3Rpb24gcWkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBuayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gcWkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PU9hKXJldHVybiAxMTtpZihhPT09UmEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gYWgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1naShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGNoKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlxaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm4gZWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBOYTpnPTg7ZXw9NzticmVhaztjYXNlIEphOmc9ODtlfD0xO2JyZWFrO2Nhc2UgS2E6cmV0dXJuIGE9Z2koMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1LYSxhLnR5cGU9S2EsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBQYTpyZXR1cm4gYT1naSgxMyxjLGIsZSksYS50eXBlPVBhLGEuZWxlbWVudFR5cGU9UGEsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBRYTpyZXR1cm4gYT1naSgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1RYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgTGE6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBNYTpnPTk7YnJlYWsgYTtjYXNlIE9hOmc9MTE7YnJlYWsgYTtjYXNlIFJhOmc9MTQ7YnJlYWsgYTtjYXNlIFNhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1naShnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGVoKGEsYixjLGQpe2E9Z2koNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGJoKGEsYixjKXthPWdpKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGRoKGEsYixjKXtiPWdpKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gcWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIFBqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24gTmooYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBSaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIHJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPVBnKCksZz1NZy5zdXNwZW5zZTtmPVFnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGVjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1CZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO0RnKGUsYik7UmcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBzayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIHRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiB1ayhhLGIpe3RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZ0ayhhLGIpfVxuZnVuY3Rpb24gdmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IHFrKGEsYixjKSxlPWdpKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO2Fbd2VdPWQuY3VycmVudDtjJiYwIT09YiYmd2MoOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfXZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXtyayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLHZvaWQgMD09PWI/bnVsbDpiKX07dmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9dm9pZCAwPT09YT9udWxsOmEsZD1iLmNvbnRhaW5lckluZm87cmsobnVsbCxiLG51bGwsZnVuY3Rpb24oKXtkW3dlXT1udWxsO251bGwhPT1jJiZjKCl9KX07XG5mdW5jdGlvbiB3ayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24geWsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyB2ayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHprKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9c2soZyk7aC5jYWxsKGEpfX1yayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXlrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPXNrKGcpO2suY2FsbChhKX19Y2soZnVuY3Rpb24oKXtyayhiLGcsYSxlKX0pfXJldHVybiBzayhnKX1mdW5jdGlvbiBBayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOkhhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuamM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9bGcoUGcoKSwxNTAsMTAwKTtSZyhhLGIpO3VrKGEsYil9fTtrYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXtQZygpO3ZhciBiPWtnKys7UmcoYSxiKTt1ayhhLGIpfX07bGM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9UGcoKTtiPVFnKGIsYSxudWxsKTtSZyhhLGIpO3VrKGEsYil9fTtcblphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6RWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPXllKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt6YihkKTtFYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkpiKGEsISFjLm11bHRpcGxlLGIsITEpfX07ZWI9Yms7XG5mYj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1UO1R8PTQ7dHJ5e3JldHVybiBmZyg5OCxhLmJpbmQobnVsbCxiLGMsZCkpfWZpbmFsbHl7VD1lLFQ9PT1TJiZqZygpfX07Z2I9ZnVuY3Rpb24oKXsoVCYoMXxvanxwaikpPT09UyYmKGFrKCksU2ooKSl9O2hiPWZ1bmN0aW9uKGEsYil7dmFyIGM9VDtUfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1Q9YyxUPT09UyYmamcoKX19O2Z1bmN0aW9uIEJrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIEFrKGEsYixudWxsLGMpfVxudmFyIENrPXtjcmVhdGVQb3J0YWw6QmssZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1pYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe2lmKCF3ayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiB6ayhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtpZighd2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gemsobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe2lmKCF3ayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO1xuaWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gemsoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7aWYoIXdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhjayhmdW5jdGlvbigpe3prKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt3ZV09bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gQmsuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOmJrLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVQ7VHw9MTt0cnl7cmV0dXJuIGZnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1Q9YyxqZygpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbQ2MsXG54ZSx5ZSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUsZmEsU2MsZnVuY3Rpb24oYSl7eWEoYSxSYyl9LGNiLGRiLFBkLEJhLFNqLHtjdXJyZW50OiExfV19fTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBvayhuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWljKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6RmMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMi4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgRGs9e2RlZmF1bHQ6Q2t9LEVrPURrJiZDa3x8RGs7bW9kdWxlLmV4cG9ydHM9RWsuZGVmYXVsdHx8RWs7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE4LjBcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9TWF0aC5mbG9vcigoYy0xKS8yKSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtcbiIsIid1c2Ugc3RyaWN0J1xuXG4vKiBEZXBlbmRlbmNpZXMuICovXG52YXIgZXh0ZW5kID0gcmVxdWlyZSgnZXh0ZW5kJylcbnZhciBiYWlsID0gcmVxdWlyZSgnYmFpbCcpXG52YXIgdmZpbGUgPSByZXF1aXJlKCd2ZmlsZScpXG52YXIgdHJvdWdoID0gcmVxdWlyZSgndHJvdWdoJylcbnZhciBzdHJpbmcgPSByZXF1aXJlKCd4LWlzLXN0cmluZycpXG52YXIgcGxhaW4gPSByZXF1aXJlKCdpcy1wbGFpbi1vYmonKVxuXG4vKiBFeHBvc2UgYSBmcm96ZW4gcHJvY2Vzc29yLiAqL1xubW9kdWxlLmV4cG9ydHMgPSB1bmlmaWVkKCkuZnJlZXplKClcblxudmFyIHNsaWNlID0gW10uc2xpY2VcbnZhciBvd24gPSB7fS5oYXNPd25Qcm9wZXJ0eVxuXG4vKiBQcm9jZXNzIHBpcGVsaW5lLiAqL1xudmFyIHBpcGVsaW5lID0gdHJvdWdoKClcbiAgLnVzZShwaXBlbGluZVBhcnNlKVxuICAudXNlKHBpcGVsaW5lUnVuKVxuICAudXNlKHBpcGVsaW5lU3RyaW5naWZ5KVxuXG5mdW5jdGlvbiBwaXBlbGluZVBhcnNlKHAsIGN0eCkge1xuICBjdHgudHJlZSA9IHAucGFyc2UoY3R4LmZpbGUpXG59XG5cbmZ1bmN0aW9uIHBpcGVsaW5lUnVuKHAsIGN0eCwgbmV4dCkge1xuICBwLnJ1bihjdHgudHJlZSwgY3R4LmZpbGUsIGRvbmUpXG5cbiAgZnVuY3Rpb24gZG9uZShlcnIsIHRyZWUsIGZpbGUpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBuZXh0KGVycilcbiAgICB9IGVsc2Uge1xuICAgICAgY3R4LnRyZWUgPSB0cmVlXG4gICAgICBjdHguZmlsZSA9IGZpbGVcbiAgICAgIG5leHQoKVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBwaXBlbGluZVN0cmluZ2lmeShwLCBjdHgpIHtcbiAgY3R4LmZpbGUuY29udGVudHMgPSBwLnN0cmluZ2lmeShjdHgudHJlZSwgY3R4LmZpbGUpXG59XG5cbi8qIEZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgZmlyc3QgcHJvY2Vzc29yLiAqL1xuZnVuY3Rpb24gdW5pZmllZCgpIHtcbiAgdmFyIGF0dGFjaGVycyA9IFtdXG4gIHZhciB0cmFuc2Zvcm1lcnMgPSB0cm91Z2goKVxuICB2YXIgbmFtZXNwYWNlID0ge31cbiAgdmFyIGZyb3plbiA9IGZhbHNlXG4gIHZhciBmcmVlemVJbmRleCA9IC0xXG5cbiAgLyogRGF0YSBtYW5hZ2VtZW50LiAqL1xuICBwcm9jZXNzb3IuZGF0YSA9IGRhdGFcblxuICAvKiBMb2NrLiAqL1xuICBwcm9jZXNzb3IuZnJlZXplID0gZnJlZXplXG5cbiAgLyogUGx1Zy1pbnMuICovXG4gIHByb2Nlc3Nvci5hdHRhY2hlcnMgPSBhdHRhY2hlcnNcbiAgcHJvY2Vzc29yLnVzZSA9IHVzZVxuXG4gIC8qIEFQSS4gKi9cbiAgcHJvY2Vzc29yLnBhcnNlID0gcGFyc2VcbiAgcHJvY2Vzc29yLnN0cmluZ2lmeSA9IHN0cmluZ2lmeVxuICBwcm9jZXNzb3IucnVuID0gcnVuXG4gIHByb2Nlc3Nvci5ydW5TeW5jID0gcnVuU3luY1xuICBwcm9jZXNzb3IucHJvY2VzcyA9IHByb2Nlc3NcbiAgcHJvY2Vzc29yLnByb2Nlc3NTeW5jID0gcHJvY2Vzc1N5bmNcblxuICAvKiBFeHBvc2UuICovXG4gIHJldHVybiBwcm9jZXNzb3JcblxuICAvKiBDcmVhdGUgYSBuZXcgcHJvY2Vzc29yIGJhc2VkIG9uIHRoZSBwcm9jZXNzb3JcbiAgICogaW4gdGhlIGN1cnJlbnQgc2NvcGUuICovXG4gIGZ1bmN0aW9uIHByb2Nlc3NvcigpIHtcbiAgICB2YXIgZGVzdGluYXRpb24gPSB1bmlmaWVkKClcbiAgICB2YXIgbGVuZ3RoID0gYXR0YWNoZXJzLmxlbmd0aFxuICAgIHZhciBpbmRleCA9IC0xXG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgZGVzdGluYXRpb24udXNlLmFwcGx5KG51bGwsIGF0dGFjaGVyc1tpbmRleF0pXG4gICAgfVxuXG4gICAgZGVzdGluYXRpb24uZGF0YShleHRlbmQodHJ1ZSwge30sIG5hbWVzcGFjZSkpXG5cbiAgICByZXR1cm4gZGVzdGluYXRpb25cbiAgfVxuXG4gIC8qIEZyZWV6ZTogdXNlZCB0byBzaWduYWwgYSBwcm9jZXNzb3IgdGhhdCBoYXMgZmluaXNoZWRcbiAgICogY29uZmlndXJhdGlvbi5cbiAgICpcbiAgICogRm9yIGV4YW1wbGUsIHRha2UgdW5pZmllZCBpdHNlbGYuICBJdOKAmXMgZnJvemVuLlxuICAgKiBQbHVnLWlucyBzaG91bGQgbm90IGJlIGFkZGVkIHRvIGl0LiAgUmF0aGVyLCBpdCBzaG91bGRcbiAgICogYmUgZXh0ZW5kZWQsIGJ5IGludm9raW5nIGl0LCBiZWZvcmUgbW9kaWZ5aW5nIGl0LlxuICAgKlxuICAgKiBJbiBlc3NlbmNlLCBhbHdheXMgaW52b2tlIHRoaXMgd2hlbiBleHBvcnRpbmcgYVxuICAgKiBwcm9jZXNzb3IuICovXG4gIGZ1bmN0aW9uIGZyZWV6ZSgpIHtcbiAgICB2YXIgdmFsdWVzXG4gICAgdmFyIHBsdWdpblxuICAgIHZhciBvcHRpb25zXG4gICAgdmFyIHRyYW5zZm9ybWVyXG5cbiAgICBpZiAoZnJvemVuKSB7XG4gICAgICByZXR1cm4gcHJvY2Vzc29yXG4gICAgfVxuXG4gICAgd2hpbGUgKCsrZnJlZXplSW5kZXggPCBhdHRhY2hlcnMubGVuZ3RoKSB7XG4gICAgICB2YWx1ZXMgPSBhdHRhY2hlcnNbZnJlZXplSW5kZXhdXG4gICAgICBwbHVnaW4gPSB2YWx1ZXNbMF1cbiAgICAgIG9wdGlvbnMgPSB2YWx1ZXNbMV1cbiAgICAgIHRyYW5zZm9ybWVyID0gbnVsbFxuXG4gICAgICBpZiAob3B0aW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMgPT09IHRydWUpIHtcbiAgICAgICAgdmFsdWVzWzFdID0gdW5kZWZpbmVkXG4gICAgICB9XG5cbiAgICAgIHRyYW5zZm9ybWVyID0gcGx1Z2luLmFwcGx5KHByb2Nlc3NvciwgdmFsdWVzLnNsaWNlKDEpKVxuXG4gICAgICBpZiAodHlwZW9mIHRyYW5zZm9ybWVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRyYW5zZm9ybWVycy51c2UodHJhbnNmb3JtZXIpXG4gICAgICB9XG4gICAgfVxuXG4gICAgZnJvemVuID0gdHJ1ZVxuICAgIGZyZWV6ZUluZGV4ID0gSW5maW5pdHlcblxuICAgIHJldHVybiBwcm9jZXNzb3JcbiAgfVxuXG4gIC8qIERhdGEgbWFuYWdlbWVudC5cbiAgICogR2V0dGVyIC8gc2V0dGVyIGZvciBwcm9jZXNzb3Itc3BlY2lmaWMgaW5mb3JtdGlvbi4gKi9cbiAgZnVuY3Rpb24gZGF0YShrZXksIHZhbHVlKSB7XG4gICAgaWYgKHN0cmluZyhrZXkpKSB7XG4gICAgICAvKiBTZXQgYGtleWAuICovXG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICBhc3NlcnRVbmZyb3plbignZGF0YScsIGZyb3plbilcblxuICAgICAgICBuYW1lc3BhY2Vba2V5XSA9IHZhbHVlXG5cbiAgICAgICAgcmV0dXJuIHByb2Nlc3NvclxuICAgICAgfVxuXG4gICAgICAvKiBHZXQgYGtleWAuICovXG4gICAgICByZXR1cm4gKG93bi5jYWxsKG5hbWVzcGFjZSwga2V5KSAmJiBuYW1lc3BhY2Vba2V5XSkgfHwgbnVsbFxuICAgIH1cblxuICAgIC8qIFNldCBzcGFjZS4gKi9cbiAgICBpZiAoa2V5KSB7XG4gICAgICBhc3NlcnRVbmZyb3plbignZGF0YScsIGZyb3plbilcbiAgICAgIG5hbWVzcGFjZSA9IGtleVxuICAgICAgcmV0dXJuIHByb2Nlc3NvclxuICAgIH1cblxuICAgIC8qIEdldCBzcGFjZS4gKi9cbiAgICByZXR1cm4gbmFtZXNwYWNlXG4gIH1cblxuICAvKiBQbHVnLWluIG1hbmFnZW1lbnQuXG4gICAqXG4gICAqIFBhc3MgaXQ6XG4gICAqICogICBhbiBhdHRhY2hlciBhbmQgb3B0aW9ucyxcbiAgICogKiAgIGEgcHJlc2V0LFxuICAgKiAqICAgYSBsaXN0IG9mIHByZXNldHMsIGF0dGFjaGVycywgYW5kIGFyZ3VtZW50cyAobGlzdFxuICAgKiAgICAgb2YgYXR0YWNoZXJzIGFuZCBvcHRpb25zKS4gKi9cbiAgZnVuY3Rpb24gdXNlKHZhbHVlKSB7XG4gICAgdmFyIHNldHRpbmdzXG5cbiAgICBhc3NlcnRVbmZyb3plbigndXNlJywgZnJvemVuKVxuXG4gICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8qIEVtcHR5ICovXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFkZFBsdWdpbi5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAoJ2xlbmd0aCcgaW4gdmFsdWUpIHtcbiAgICAgICAgYWRkTGlzdCh2YWx1ZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFkZFByZXNldCh2YWx1ZSlcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB1c2FibGUgdmFsdWUsIG5vdCBgJyArIHZhbHVlICsgJ2AnKVxuICAgIH1cblxuICAgIGlmIChzZXR0aW5ncykge1xuICAgICAgbmFtZXNwYWNlLnNldHRpbmdzID0gZXh0ZW5kKG5hbWVzcGFjZS5zZXR0aW5ncyB8fCB7fSwgc2V0dGluZ3MpXG4gICAgfVxuXG4gICAgcmV0dXJuIHByb2Nlc3NvclxuXG4gICAgZnVuY3Rpb24gYWRkUHJlc2V0KHJlc3VsdCkge1xuICAgICAgYWRkTGlzdChyZXN1bHQucGx1Z2lucylcblxuICAgICAgaWYgKHJlc3VsdC5zZXR0aW5ncykge1xuICAgICAgICBzZXR0aW5ncyA9IGV4dGVuZChzZXR0aW5ncyB8fCB7fSwgcmVzdWx0LnNldHRpbmdzKVxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBhZGRQbHVnaW4odmFsdWUpXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKCdsZW5ndGgnIGluIHZhbHVlKSB7XG4gICAgICAgICAgYWRkUGx1Z2luLmFwcGx5KG51bGwsIHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFkZFByZXNldCh2YWx1ZSlcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB1c2FibGUgdmFsdWUsIG5vdCBgJyArIHZhbHVlICsgJ2AnKVxuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFkZExpc3QocGx1Z2lucykge1xuICAgICAgdmFyIGxlbmd0aFxuICAgICAgdmFyIGluZGV4XG5cbiAgICAgIGlmIChwbHVnaW5zID09PSBudWxsIHx8IHBsdWdpbnMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAvKiBFbXB0eSAqL1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcGx1Z2lucyA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gcGx1Z2lucykge1xuICAgICAgICBsZW5ndGggPSBwbHVnaW5zLmxlbmd0aFxuICAgICAgICBpbmRleCA9IC0xXG5cbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICBhZGQocGx1Z2luc1tpbmRleF0pXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYSBsaXN0IG9mIHBsdWdpbnMsIG5vdCBgJyArIHBsdWdpbnMgKyAnYCcpXG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkUGx1Z2luKHBsdWdpbiwgdmFsdWUpIHtcbiAgICAgIHZhciBlbnRyeSA9IGZpbmQocGx1Z2luKVxuXG4gICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgaWYgKHBsYWluKGVudHJ5WzFdKSAmJiBwbGFpbih2YWx1ZSkpIHtcbiAgICAgICAgICB2YWx1ZSA9IGV4dGVuZChlbnRyeVsxXSwgdmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBlbnRyeVsxXSA9IHZhbHVlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhdHRhY2hlcnMucHVzaChzbGljZS5jYWxsKGFyZ3VtZW50cykpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZmluZChwbHVnaW4pIHtcbiAgICB2YXIgbGVuZ3RoID0gYXR0YWNoZXJzLmxlbmd0aFxuICAgIHZhciBpbmRleCA9IC0xXG4gICAgdmFyIGVudHJ5XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgZW50cnkgPSBhdHRhY2hlcnNbaW5kZXhdXG5cbiAgICAgIGlmIChlbnRyeVswXSA9PT0gcGx1Z2luKSB7XG4gICAgICAgIHJldHVybiBlbnRyeVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qIFBhcnNlIGEgZmlsZSAoaW4gc3RyaW5nIG9yIFZGaWxlIHJlcHJlc2VudGF0aW9uKVxuICAgKiBpbnRvIGEgVW5pc3Qgbm9kZSB1c2luZyB0aGUgYFBhcnNlcmAgb24gdGhlXG4gICAqIHByb2Nlc3Nvci4gKi9cbiAgZnVuY3Rpb24gcGFyc2UoZG9jKSB7XG4gICAgdmFyIGZpbGUgPSB2ZmlsZShkb2MpXG4gICAgdmFyIFBhcnNlclxuXG4gICAgZnJlZXplKClcbiAgICBQYXJzZXIgPSBwcm9jZXNzb3IuUGFyc2VyXG4gICAgYXNzZXJ0UGFyc2VyKCdwYXJzZScsIFBhcnNlcilcblxuICAgIGlmIChuZXdhYmxlKFBhcnNlcikpIHtcbiAgICAgIHJldHVybiBuZXcgUGFyc2VyKFN0cmluZyhmaWxlKSwgZmlsZSkucGFyc2UoKVxuICAgIH1cblxuICAgIHJldHVybiBQYXJzZXIoU3RyaW5nKGZpbGUpLCBmaWxlKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5ldy1jYXBcbiAgfVxuXG4gIC8qIFJ1biB0cmFuc2Zvcm1zIG9uIGEgVW5pc3Qgbm9kZSByZXByZXNlbnRhdGlvbiBvZiBhIGZpbGVcbiAgICogKGluIHN0cmluZyBvciBWRmlsZSByZXByZXNlbnRhdGlvbiksIGFzeW5jLiAqL1xuICBmdW5jdGlvbiBydW4obm9kZSwgZmlsZSwgY2IpIHtcbiAgICBhc3NlcnROb2RlKG5vZGUpXG4gICAgZnJlZXplKClcblxuICAgIGlmICghY2IgJiYgdHlwZW9mIGZpbGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gZmlsZVxuICAgICAgZmlsZSA9IG51bGxcbiAgICB9XG5cbiAgICBpZiAoIWNiKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZXhlY3V0b3IpXG4gICAgfVxuXG4gICAgZXhlY3V0b3IobnVsbCwgY2IpXG5cbiAgICBmdW5jdGlvbiBleGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHRyYW5zZm9ybWVycy5ydW4obm9kZSwgdmZpbGUoZmlsZSksIGRvbmUpXG5cbiAgICAgIGZ1bmN0aW9uIGRvbmUoZXJyLCB0cmVlLCBmaWxlKSB7XG4gICAgICAgIHRyZWUgPSB0cmVlIHx8IG5vZGVcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJlamVjdChlcnIpXG4gICAgICAgIH0gZWxzZSBpZiAocmVzb2x2ZSkge1xuICAgICAgICAgIHJlc29sdmUodHJlZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYihudWxsLCB0cmVlLCBmaWxlKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyogUnVuIHRyYW5zZm9ybXMgb24gYSBVbmlzdCBub2RlIHJlcHJlc2VudGF0aW9uIG9mIGEgZmlsZVxuICAgKiAoaW4gc3RyaW5nIG9yIFZGaWxlIHJlcHJlc2VudGF0aW9uKSwgc3luYy4gKi9cbiAgZnVuY3Rpb24gcnVuU3luYyhub2RlLCBmaWxlKSB7XG4gICAgdmFyIGNvbXBsZXRlID0gZmFsc2VcbiAgICB2YXIgcmVzdWx0XG5cbiAgICBydW4obm9kZSwgZmlsZSwgZG9uZSlcblxuICAgIGFzc2VydERvbmUoJ3J1blN5bmMnLCAncnVuJywgY29tcGxldGUpXG5cbiAgICByZXR1cm4gcmVzdWx0XG5cbiAgICBmdW5jdGlvbiBkb25lKGVyciwgdHJlZSkge1xuICAgICAgY29tcGxldGUgPSB0cnVlXG4gICAgICBiYWlsKGVycilcbiAgICAgIHJlc3VsdCA9IHRyZWVcbiAgICB9XG4gIH1cblxuICAvKiBTdHJpbmdpZnkgYSBVbmlzdCBub2RlIHJlcHJlc2VudGF0aW9uIG9mIGEgZmlsZVxuICAgKiAoaW4gc3RyaW5nIG9yIFZGaWxlIHJlcHJlc2VudGF0aW9uKSBpbnRvIGEgc3RyaW5nXG4gICAqIHVzaW5nIHRoZSBgQ29tcGlsZXJgIG9uIHRoZSBwcm9jZXNzb3IuICovXG4gIGZ1bmN0aW9uIHN0cmluZ2lmeShub2RlLCBkb2MpIHtcbiAgICB2YXIgZmlsZSA9IHZmaWxlKGRvYylcbiAgICB2YXIgQ29tcGlsZXJcblxuICAgIGZyZWV6ZSgpXG4gICAgQ29tcGlsZXIgPSBwcm9jZXNzb3IuQ29tcGlsZXJcbiAgICBhc3NlcnRDb21waWxlcignc3RyaW5naWZ5JywgQ29tcGlsZXIpXG4gICAgYXNzZXJ0Tm9kZShub2RlKVxuXG4gICAgaWYgKG5ld2FibGUoQ29tcGlsZXIpKSB7XG4gICAgICByZXR1cm4gbmV3IENvbXBpbGVyKG5vZGUsIGZpbGUpLmNvbXBpbGUoKVxuICAgIH1cblxuICAgIHJldHVybiBDb21waWxlcihub2RlLCBmaWxlKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5ldy1jYXBcbiAgfVxuXG4gIC8qIFBhcnNlIGEgZmlsZSAoaW4gc3RyaW5nIG9yIFZGaWxlIHJlcHJlc2VudGF0aW9uKVxuICAgKiBpbnRvIGEgVW5pc3Qgbm9kZSB1c2luZyB0aGUgYFBhcnNlcmAgb24gdGhlIHByb2Nlc3NvcixcbiAgICogdGhlbiBydW4gdHJhbnNmb3JtcyBvbiB0aGF0IG5vZGUsIGFuZCBjb21waWxlIHRoZVxuICAgKiByZXN1bHRpbmcgbm9kZSB1c2luZyB0aGUgYENvbXBpbGVyYCBvbiB0aGUgcHJvY2Vzc29yLFxuICAgKiBhbmQgc3RvcmUgdGhhdCByZXN1bHQgb24gdGhlIFZGaWxlLiAqL1xuICBmdW5jdGlvbiBwcm9jZXNzKGRvYywgY2IpIHtcbiAgICBmcmVlemUoKVxuICAgIGFzc2VydFBhcnNlcigncHJvY2VzcycsIHByb2Nlc3Nvci5QYXJzZXIpXG4gICAgYXNzZXJ0Q29tcGlsZXIoJ3Byb2Nlc3MnLCBwcm9jZXNzb3IuQ29tcGlsZXIpXG5cbiAgICBpZiAoIWNiKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZXhlY3V0b3IpXG4gICAgfVxuXG4gICAgZXhlY3V0b3IobnVsbCwgY2IpXG5cbiAgICBmdW5jdGlvbiBleGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBmaWxlID0gdmZpbGUoZG9jKVxuXG4gICAgICBwaXBlbGluZS5ydW4ocHJvY2Vzc29yLCB7ZmlsZTogZmlsZX0sIGRvbmUpXG5cbiAgICAgIGZ1bmN0aW9uIGRvbmUoZXJyKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoZXJyKVxuICAgICAgICB9IGVsc2UgaWYgKHJlc29sdmUpIHtcbiAgICAgICAgICByZXNvbHZlKGZpbGUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2IobnVsbCwgZmlsZSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qIFByb2Nlc3MgdGhlIGdpdmVuIGRvY3VtZW50IChpbiBzdHJpbmcgb3IgVkZpbGVcbiAgICogcmVwcmVzZW50YXRpb24pLCBzeW5jLiAqL1xuICBmdW5jdGlvbiBwcm9jZXNzU3luYyhkb2MpIHtcbiAgICB2YXIgY29tcGxldGUgPSBmYWxzZVxuICAgIHZhciBmaWxlXG5cbiAgICBmcmVlemUoKVxuICAgIGFzc2VydFBhcnNlcigncHJvY2Vzc1N5bmMnLCBwcm9jZXNzb3IuUGFyc2VyKVxuICAgIGFzc2VydENvbXBpbGVyKCdwcm9jZXNzU3luYycsIHByb2Nlc3Nvci5Db21waWxlcilcbiAgICBmaWxlID0gdmZpbGUoZG9jKVxuXG4gICAgcHJvY2VzcyhmaWxlLCBkb25lKVxuXG4gICAgYXNzZXJ0RG9uZSgncHJvY2Vzc1N5bmMnLCAncHJvY2VzcycsIGNvbXBsZXRlKVxuXG4gICAgcmV0dXJuIGZpbGVcblxuICAgIGZ1bmN0aW9uIGRvbmUoZXJyKSB7XG4gICAgICBjb21wbGV0ZSA9IHRydWVcbiAgICAgIGJhaWwoZXJyKVxuICAgIH1cbiAgfVxufVxuXG4vKiBDaGVjayBpZiBgZnVuY2AgaXMgYSBjb25zdHJ1Y3Rvci4gKi9cbmZ1bmN0aW9uIG5ld2FibGUodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJiBrZXlzKHZhbHVlLnByb3RvdHlwZSlcbn1cblxuLyogQ2hlY2sgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3Qgd2l0aCBrZXlzLiAqL1xuZnVuY3Rpb24ga2V5cyh2YWx1ZSkge1xuICB2YXIga2V5XG4gIGZvciAoa2V5IGluIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyogQXNzZXJ0IGEgcGFyc2VyIGlzIGF2YWlsYWJsZS4gKi9cbmZ1bmN0aW9uIGFzc2VydFBhcnNlcihuYW1lLCBQYXJzZXIpIHtcbiAgaWYgKHR5cGVvZiBQYXJzZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBgJyArIG5hbWUgKyAnYCB3aXRob3V0IGBQYXJzZXJgJylcbiAgfVxufVxuXG4vKiBBc3NlcnQgYSBjb21waWxlciBpcyBhdmFpbGFibGUuICovXG5mdW5jdGlvbiBhc3NlcnRDb21waWxlcihuYW1lLCBDb21waWxlcikge1xuICBpZiAodHlwZW9mIENvbXBpbGVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgYCcgKyBuYW1lICsgJ2Agd2l0aG91dCBgQ29tcGlsZXJgJylcbiAgfVxufVxuXG4vKiBBc3NlcnQgdGhlIHByb2Nlc3NvciBpcyBub3QgZnJvemVuLiAqL1xuZnVuY3Rpb24gYXNzZXJ0VW5mcm96ZW4obmFtZSwgZnJvemVuKSB7XG4gIGlmIChmcm96ZW4pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBbXG4gICAgICAgICdDYW5ub3QgaW52b2tlIGAnICsgbmFtZSArICdgIG9uIGEgZnJvemVuIHByb2Nlc3Nvci5cXG5DcmVhdGUgYSBuZXcgJyxcbiAgICAgICAgJ3Byb2Nlc3NvciBmaXJzdCwgYnkgaW52b2tpbmcgaXQ6IHVzZSBgcHJvY2Vzc29yKClgIGluc3RlYWQgb2YgJyxcbiAgICAgICAgJ2Bwcm9jZXNzb3JgLidcbiAgICAgIF0uam9pbignJylcbiAgICApXG4gIH1cbn1cblxuLyogQXNzZXJ0IGBub2RlYCBpcyBhIFVuaXN0IG5vZGUuICovXG5mdW5jdGlvbiBhc3NlcnROb2RlKG5vZGUpIHtcbiAgaWYgKCFub2RlIHx8ICFzdHJpbmcobm9kZS50eXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgbm9kZSwgZ290IGAnICsgbm9kZSArICdgJylcbiAgfVxufVxuXG4vKiBBc3NlcnQgdGhhdCBgY29tcGxldGVgIGlzIGB0cnVlYC4gKi9cbmZ1bmN0aW9uIGFzc2VydERvbmUobmFtZSwgYXN5bmNOYW1lLCBjb21wbGV0ZSkge1xuICBpZiAoIWNvbXBsZXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ2AnICsgbmFtZSArICdgIGZpbmlzaGVkIGFzeW5jLiBVc2UgYCcgKyBhc3luY05hbWUgKyAnYCBpbnN0ZWFkJ1xuICAgIClcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbnZhciBpc0FycmF5ID0gZnVuY3Rpb24gaXNBcnJheShhcnIpIHtcblx0aWYgKHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0cmV0dXJuIEFycmF5LmlzQXJyYXkoYXJyKTtcblx0fVxuXG5cdHJldHVybiB0b1N0ci5jYWxsKGFycikgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG52YXIgaXNQbGFpbk9iamVjdCA9IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG5cdGlmICghb2JqIHx8IHRvU3RyLmNhbGwob2JqKSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHR2YXIgaGFzT3duQ29uc3RydWN0b3IgPSBoYXNPd24uY2FsbChvYmosICdjb25zdHJ1Y3RvcicpO1xuXHR2YXIgaGFzSXNQcm90b3R5cGVPZiA9IG9iai5jb25zdHJ1Y3RvciAmJiBvYmouY29uc3RydWN0b3IucHJvdG90eXBlICYmIGhhc093bi5jYWxsKG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsICdpc1Byb3RvdHlwZU9mJyk7XG5cdC8vIE5vdCBvd24gY29uc3RydWN0b3IgcHJvcGVydHkgbXVzdCBiZSBPYmplY3Rcblx0aWYgKG9iai5jb25zdHJ1Y3RvciAmJiAhaGFzT3duQ29uc3RydWN0b3IgJiYgIWhhc0lzUHJvdG90eXBlT2YpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHQvLyBPd24gcHJvcGVydGllcyBhcmUgZW51bWVyYXRlZCBmaXJzdGx5LCBzbyB0byBzcGVlZCB1cCxcblx0Ly8gaWYgbGFzdCBvbmUgaXMgb3duLCB0aGVuIGFsbCBwcm9wZXJ0aWVzIGFyZSBvd24uXG5cdHZhciBrZXk7XG5cdGZvciAoa2V5IGluIG9iaikgeyAvKiovIH1cblxuXHRyZXR1cm4gdHlwZW9mIGtleSA9PT0gJ3VuZGVmaW5lZCcgfHwgaGFzT3duLmNhbGwob2JqLCBrZXkpO1xufTtcblxuLy8gSWYgbmFtZSBpcyAnX19wcm90b19fJywgYW5kIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBpcyBhdmFpbGFibGUsIGRlZmluZSBfX3Byb3RvX18gYXMgYW4gb3duIHByb3BlcnR5IG9uIHRhcmdldFxudmFyIHNldFByb3BlcnR5ID0gZnVuY3Rpb24gc2V0UHJvcGVydHkodGFyZ2V0LCBvcHRpb25zKSB7XG5cdGlmIChkZWZpbmVQcm9wZXJ0eSAmJiBvcHRpb25zLm5hbWUgPT09ICdfX3Byb3RvX18nKSB7XG5cdFx0ZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBvcHRpb25zLm5hbWUsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHR2YWx1ZTogb3B0aW9ucy5uZXdWYWx1ZSxcblx0XHRcdHdyaXRhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0dGFyZ2V0W29wdGlvbnMubmFtZV0gPSBvcHRpb25zLm5ld1ZhbHVlO1xuXHR9XG59O1xuXG4vLyBSZXR1cm4gdW5kZWZpbmVkIGluc3RlYWQgb2YgX19wcm90b19fIGlmICdfX3Byb3RvX18nIGlzIG5vdCBhbiBvd24gcHJvcGVydHlcbnZhciBnZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIGdldFByb3BlcnR5KG9iaiwgbmFtZSkge1xuXHRpZiAobmFtZSA9PT0gJ19fcHJvdG9fXycpIHtcblx0XHRpZiAoIWhhc093bi5jYWxsKG9iaiwgbmFtZSkpIHtcblx0XHRcdHJldHVybiB2b2lkIDA7XG5cdFx0fSBlbHNlIGlmIChnT1BEKSB7XG5cdFx0XHQvLyBJbiBlYXJseSB2ZXJzaW9ucyBvZiBub2RlLCBvYmpbJ19fcHJvdG9fXyddIGlzIGJ1Z2d5IHdoZW4gb2JqIGhhc1xuXHRcdFx0Ly8gX19wcm90b19fIGFzIGFuIG93biBwcm9wZXJ0eS4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcigpIHdvcmtzLlxuXHRcdFx0cmV0dXJuIGdPUEQob2JqLCBuYW1lKS52YWx1ZTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gb2JqW25hbWVdO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBleHRlbmQoKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZTtcblx0dmFyIHRhcmdldCA9IGFyZ3VtZW50c1swXTtcblx0dmFyIGkgPSAxO1xuXHR2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcblx0dmFyIGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnYm9vbGVhbicpIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sxXSB8fCB7fTtcblx0XHQvLyBza2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0aSA9IDI7XG5cdH1cblx0aWYgKHRhcmdldCA9PSBudWxsIHx8ICh0eXBlb2YgdGFyZ2V0ICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgdGFyZ2V0ICE9PSAnZnVuY3Rpb24nKSkge1xuXHRcdHRhcmdldCA9IHt9O1xuXHR9XG5cblx0Zm9yICg7IGkgPCBsZW5ndGg7ICsraSkge1xuXHRcdG9wdGlvbnMgPSBhcmd1bWVudHNbaV07XG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmIChvcHRpb25zICE9IG51bGwpIHtcblx0XHRcdC8vIEV4dGVuZCB0aGUgYmFzZSBvYmplY3Rcblx0XHRcdGZvciAobmFtZSBpbiBvcHRpb25zKSB7XG5cdFx0XHRcdHNyYyA9IGdldFByb3BlcnR5KHRhcmdldCwgbmFtZSk7XG5cdFx0XHRcdGNvcHkgPSBnZXRQcm9wZXJ0eShvcHRpb25zLCBuYW1lKTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICh0YXJnZXQgIT09IGNvcHkpIHtcblx0XHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0XHRpZiAoZGVlcCAmJiBjb3B5ICYmIChpc1BsYWluT2JqZWN0KGNvcHkpIHx8IChjb3B5SXNBcnJheSA9IGlzQXJyYXkoY29weSkpKSkge1xuXHRcdFx0XHRcdFx0aWYgKGNvcHlJc0FycmF5KSB7XG5cdFx0XHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGlzQXJyYXkoc3JjKSA/IHNyYyA6IFtdO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgaXNQbGFpbk9iamVjdChzcmMpID8gc3JjIDoge307XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdFx0c2V0UHJvcGVydHkodGFyZ2V0LCB7IG5hbWU6IG5hbWUsIG5ld1ZhbHVlOiBleHRlbmQoZGVlcCwgY2xvbmUsIGNvcHkpIH0pO1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAodHlwZW9mIGNvcHkgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRcdFx0XHRzZXRQcm9wZXJ0eSh0YXJnZXQsIHsgbmFtZTogbmFtZSwgbmV3VmFsdWU6IGNvcHkgfSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBiYWlsXG5cbmZ1bmN0aW9uIGJhaWwoZXJyKSB7XG4gIGlmIChlcnIpIHtcbiAgICB0aHJvdyBlcnJcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgVk1lc3NhZ2UgPSByZXF1aXJlKCd2ZmlsZS1tZXNzYWdlJyk7XG52YXIgVkZpbGUgPSByZXF1aXJlKCcuL2NvcmUuanMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBWRmlsZTtcblxudmFyIHByb3RvID0gVkZpbGUucHJvdG90eXBlO1xuXG5wcm90by5tZXNzYWdlID0gbWVzc2FnZTtcbnByb3RvLmluZm8gPSBpbmZvO1xucHJvdG8uZmFpbCA9IGZhaWw7XG5cbi8qIFNsaWdodCBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4gIFJlbW92ZSBpbiB0aGUgZnV0dXJlLiAqL1xucHJvdG8ud2FybiA9IG1lc3NhZ2U7XG5cbi8qIENyZWF0ZSBhIG1lc3NhZ2Ugd2l0aCBgcmVhc29uYCBhdCBgcG9zaXRpb25gLlxuICogV2hlbiBhbiBlcnJvciBpcyBwYXNzZWQgaW4gYXMgYHJlYXNvbmAsIGNvcGllcyB0aGUgc3RhY2suICovXG5mdW5jdGlvbiBtZXNzYWdlKHJlYXNvbiwgcG9zaXRpb24sIG9yaWdpbikge1xuICB2YXIgZmlsZVBhdGggPSB0aGlzLnBhdGg7XG4gIHZhciBtZXNzYWdlID0gbmV3IFZNZXNzYWdlKHJlYXNvbiwgcG9zaXRpb24sIG9yaWdpbik7XG5cbiAgaWYgKGZpbGVQYXRoKSB7XG4gICAgbWVzc2FnZS5uYW1lID0gZmlsZVBhdGggKyAnOicgKyBtZXNzYWdlLm5hbWU7XG4gICAgbWVzc2FnZS5maWxlID0gZmlsZVBhdGg7XG4gIH1cblxuICBtZXNzYWdlLmZhdGFsID0gZmFsc2U7XG5cbiAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuXG4gIHJldHVybiBtZXNzYWdlO1xufVxuXG4vKiBGYWlsLiBDcmVhdGVzIGEgdm1lc3NhZ2UsIGFzc29jaWF0ZXMgaXQgd2l0aCB0aGUgZmlsZSxcbiAqIGFuZCB0aHJvd3MgaXQuICovXG5mdW5jdGlvbiBmYWlsKCkge1xuICB2YXIgbWVzc2FnZSA9IHRoaXMubWVzc2FnZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gIG1lc3NhZ2UuZmF0YWwgPSB0cnVlO1xuXG4gIHRocm93IG1lc3NhZ2U7XG59XG5cbi8qIEluZm8uIENyZWF0ZXMgYSB2bWVzc2FnZSwgYXNzb2NpYXRlcyBpdCB3aXRoIHRoZSBmaWxlLFxuICogYW5kIG1hcmtzIHRoZSBmYXRhbGl0eSBhcyBudWxsLiAqL1xuZnVuY3Rpb24gaW5mbygpIHtcbiAgdmFyIG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICBtZXNzYWdlLmZhdGFsID0gbnVsbDtcblxuICByZXR1cm4gbWVzc2FnZTtcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG52YXIgc3RyaW5naWZ5ID0gcmVxdWlyZSgndW5pc3QtdXRpbC1zdHJpbmdpZnktcG9zaXRpb24nKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFZNZXNzYWdlXG5cbi8vIEluaGVyaXQgZnJvbSBgRXJyb3IjYC5cbmZ1bmN0aW9uIFZNZXNzYWdlUHJvdG90eXBlKCkge31cblZNZXNzYWdlUHJvdG90eXBlLnByb3RvdHlwZSA9IEVycm9yLnByb3RvdHlwZVxuVk1lc3NhZ2UucHJvdG90eXBlID0gbmV3IFZNZXNzYWdlUHJvdG90eXBlKClcblxuLy8gTWVzc2FnZSBwcm9wZXJ0aWVzLlxudmFyIHByb3RvID0gVk1lc3NhZ2UucHJvdG90eXBlXG5cbnByb3RvLmZpbGUgPSAnJ1xucHJvdG8ubmFtZSA9ICcnXG5wcm90by5yZWFzb24gPSAnJ1xucHJvdG8ubWVzc2FnZSA9ICcnXG5wcm90by5zdGFjayA9ICcnXG5wcm90by5mYXRhbCA9IG51bGxcbnByb3RvLmNvbHVtbiA9IG51bGxcbnByb3RvLmxpbmUgPSBudWxsXG5cbi8vIENvbnN0cnVjdCBhIG5ldyBWTWVzc2FnZS5cbi8vXG4vLyBOb3RlOiBXZSBjYW5ub3QgaW52b2tlIGBFcnJvcmAgb24gdGhlIGNyZWF0ZWQgY29udGV4dCwgYXMgdGhhdCBhZGRzIHJlYWRvbmx5XG4vLyBgbGluZWAgYW5kIGBjb2x1bW5gIGF0dHJpYnV0ZXMgb24gU2FmYXJpIDksIHRodXMgdGhyb3dpbmcgYW5kIGZhaWxpbmcgdGhlXG4vLyBkYXRhLlxuZnVuY3Rpb24gVk1lc3NhZ2UocmVhc29uLCBwb3NpdGlvbiwgb3JpZ2luKSB7XG4gIHZhciBwYXJ0c1xuICB2YXIgcmFuZ2VcbiAgdmFyIGxvY2F0aW9uXG5cbiAgaWYgKHR5cGVvZiBwb3NpdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICBvcmlnaW4gPSBwb3NpdGlvblxuICAgIHBvc2l0aW9uID0gbnVsbFxuICB9XG5cbiAgcGFydHMgPSBwYXJzZU9yaWdpbihvcmlnaW4pXG4gIHJhbmdlID0gc3RyaW5naWZ5KHBvc2l0aW9uKSB8fCAnMToxJ1xuXG4gIGxvY2F0aW9uID0ge1xuICAgIHN0YXJ0OiB7bGluZTogbnVsbCwgY29sdW1uOiBudWxsfSxcbiAgICBlbmQ6IHtsaW5lOiBudWxsLCBjb2x1bW46IG51bGx9XG4gIH1cblxuICAvLyBOb2RlLlxuICBpZiAocG9zaXRpb24gJiYgcG9zaXRpb24ucG9zaXRpb24pIHtcbiAgICBwb3NpdGlvbiA9IHBvc2l0aW9uLnBvc2l0aW9uXG4gIH1cblxuICBpZiAocG9zaXRpb24pIHtcbiAgICAvLyBQb3NpdGlvbi5cbiAgICBpZiAocG9zaXRpb24uc3RhcnQpIHtcbiAgICAgIGxvY2F0aW9uID0gcG9zaXRpb25cbiAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24uc3RhcnRcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUG9pbnQuXG4gICAgICBsb2NhdGlvbi5zdGFydCA9IHBvc2l0aW9uXG4gICAgfVxuICB9XG5cbiAgaWYgKHJlYXNvbi5zdGFjaykge1xuICAgIHRoaXMuc3RhY2sgPSByZWFzb24uc3RhY2tcbiAgICByZWFzb24gPSByZWFzb24ubWVzc2FnZVxuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gcmVhc29uXG4gIHRoaXMubmFtZSA9IHJhbmdlXG4gIHRoaXMucmVhc29uID0gcmVhc29uXG4gIHRoaXMubGluZSA9IHBvc2l0aW9uID8gcG9zaXRpb24ubGluZSA6IG51bGxcbiAgdGhpcy5jb2x1bW4gPSBwb3NpdGlvbiA/IHBvc2l0aW9uLmNvbHVtbiA6IG51bGxcbiAgdGhpcy5sb2NhdGlvbiA9IGxvY2F0aW9uXG4gIHRoaXMuc291cmNlID0gcGFydHNbMF1cbiAgdGhpcy5ydWxlSWQgPSBwYXJ0c1sxXVxufVxuXG5mdW5jdGlvbiBwYXJzZU9yaWdpbihvcmlnaW4pIHtcbiAgdmFyIHJlc3VsdCA9IFtudWxsLCBudWxsXVxuICB2YXIgaW5kZXhcblxuICBpZiAodHlwZW9mIG9yaWdpbiA9PT0gJ3N0cmluZycpIHtcbiAgICBpbmRleCA9IG9yaWdpbi5pbmRleE9mKCc6JylcblxuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHJlc3VsdFsxXSA9IG9yaWdpblxuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRbMF0gPSBvcmlnaW4uc2xpY2UoMCwgaW5kZXgpXG4gICAgICByZXN1bHRbMV0gPSBvcmlnaW4uc2xpY2UoaW5kZXggKyAxKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG52YXIgb3duID0ge30uaGFzT3duUHJvcGVydHlcblxubW9kdWxlLmV4cG9ydHMgPSBzdHJpbmdpZnlcblxuZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlKSB7XG4gIC8qIE5vdGhpbmcuICovXG4gIGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICAvKiBOb2RlLiAqL1xuICBpZiAob3duLmNhbGwodmFsdWUsICdwb3NpdGlvbicpIHx8IG93bi5jYWxsKHZhbHVlLCAndHlwZScpKSB7XG4gICAgcmV0dXJuIHBvc2l0aW9uKHZhbHVlLnBvc2l0aW9uKVxuICB9XG5cbiAgLyogUG9zaXRpb24uICovXG4gIGlmIChvd24uY2FsbCh2YWx1ZSwgJ3N0YXJ0JykgfHwgb3duLmNhbGwodmFsdWUsICdlbmQnKSkge1xuICAgIHJldHVybiBwb3NpdGlvbih2YWx1ZSlcbiAgfVxuXG4gIC8qIFBvaW50LiAqL1xuICBpZiAob3duLmNhbGwodmFsdWUsICdsaW5lJykgfHwgb3duLmNhbGwodmFsdWUsICdjb2x1bW4nKSkge1xuICAgIHJldHVybiBwb2ludCh2YWx1ZSlcbiAgfVxuXG4gIC8qID8gKi9cbiAgcmV0dXJuIG51bGxcbn1cblxuZnVuY3Rpb24gcG9pbnQocG9pbnQpIHtcbiAgaWYgKCFwb2ludCB8fCB0eXBlb2YgcG9pbnQgIT09ICdvYmplY3QnKSB7XG4gICAgcG9pbnQgPSB7fVxuICB9XG5cbiAgcmV0dXJuIGluZGV4KHBvaW50LmxpbmUpICsgJzonICsgaW5kZXgocG9pbnQuY29sdW1uKVxufVxuXG5mdW5jdGlvbiBwb3NpdGlvbihwb3MpIHtcbiAgaWYgKCFwb3MgfHwgdHlwZW9mIHBvcyAhPT0gJ29iamVjdCcpIHtcbiAgICBwb3MgPSB7fVxuICB9XG5cbiAgcmV0dXJuIHBvaW50KHBvcy5zdGFydCkgKyAnLScgKyBwb2ludChwb3MuZW5kKVxufVxuXG5mdW5jdGlvbiBpbmRleCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyA/IHZhbHVlIDogMVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciByZXBsYWNlID0gcmVxdWlyZSgncmVwbGFjZS1leHQnKTtcbnZhciBidWZmZXIgPSByZXF1aXJlKCdpcy1idWZmZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBWRmlsZTtcblxudmFyIG93biA9IHt9Lmhhc093blByb3BlcnR5O1xudmFyIHByb3RvID0gVkZpbGUucHJvdG90eXBlO1xuXG5wcm90by50b1N0cmluZyA9IHRvU3RyaW5nO1xuXG4vKiBPcmRlciBvZiBzZXR0aW5nIChsZWFzdCBzcGVjaWZpYyB0byBtb3N0KSwgd2UgbmVlZCB0aGlzIGJlY2F1c2VcbiAqIG90aGVyd2lzZSBge3N0ZW06ICdhJywgcGF0aDogJ34vYi5qcyd9YCB3b3VsZCB0aHJvdywgYXMgYSBwYXRoXG4gKiBpcyBuZWVkZWQgYmVmb3JlIGEgc3RlbSBjYW4gYmUgc2V0LiAqL1xudmFyIG9yZGVyID0gW1xuICAnaGlzdG9yeScsXG4gICdwYXRoJyxcbiAgJ2Jhc2VuYW1lJyxcbiAgJ3N0ZW0nLFxuICAnZXh0bmFtZScsXG4gICdkaXJuYW1lJ1xuXTtcblxuLyogQ29uc3RydWN0IGEgbmV3IGZpbGUuICovXG5mdW5jdGlvbiBWRmlsZShvcHRpb25zKSB7XG4gIHZhciBwcm9wO1xuICB2YXIgaW5kZXg7XG4gIHZhciBsZW5ndGg7XG5cbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJyB8fCBidWZmZXIob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge2NvbnRlbnRzOiBvcHRpb25zfTtcbiAgfSBlbHNlIGlmICgnbWVzc2FnZScgaW4gb3B0aW9ucyAmJiAnbWVzc2FnZXMnIGluIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBWRmlsZSkpIHtcbiAgICByZXR1cm4gbmV3IFZGaWxlKG9wdGlvbnMpO1xuICB9XG5cbiAgdGhpcy5kYXRhID0ge307XG4gIHRoaXMubWVzc2FnZXMgPSBbXTtcbiAgdGhpcy5oaXN0b3J5ID0gW107XG4gIHRoaXMuY3dkID0gcHJvY2Vzcy5jd2QoKTtcblxuICAvKiBTZXQgcGF0aCByZWxhdGVkIHByb3BlcnRpZXMgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuICovXG4gIGluZGV4ID0gLTE7XG4gIGxlbmd0aCA9IG9yZGVyLmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHByb3AgPSBvcmRlcltpbmRleF07XG5cbiAgICBpZiAob3duLmNhbGwob3B0aW9ucywgcHJvcCkpIHtcbiAgICAgIHRoaXNbcHJvcF0gPSBvcHRpb25zW3Byb3BdO1xuICAgIH1cbiAgfVxuXG4gIC8qIFNldCBub24tcGF0aCByZWxhdGVkIHByb3BlcnRpZXMuICovXG4gIGZvciAocHJvcCBpbiBvcHRpb25zKSB7XG4gICAgaWYgKG9yZGVyLmluZGV4T2YocHJvcCkgPT09IC0xKSB7XG4gICAgICB0aGlzW3Byb3BdID0gb3B0aW9uc1twcm9wXTtcbiAgICB9XG4gIH1cbn1cblxuLyogQWNjZXNzIGZ1bGwgcGF0aCAoYH4vaW5kZXgubWluLmpzYCkuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sICdwYXRoJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5oaXN0b3J5W3RoaXMuaGlzdG9yeS5sZW5ndGggLSAxXTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAocGF0aCkge1xuICAgIGFzc2VydE5vbkVtcHR5KHBhdGgsICdwYXRoJyk7XG5cbiAgICBpZiAocGF0aCAhPT0gdGhpcy5wYXRoKSB7XG4gICAgICB0aGlzLmhpc3RvcnkucHVzaChwYXRoKTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKiBBY2Nlc3MgcGFyZW50IHBhdGggKGB+YCkuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sICdkaXJuYW1lJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMucGF0aCA9PT0gJ3N0cmluZycgPyBwYXRoLmRpcm5hbWUodGhpcy5wYXRoKSA6IHVuZGVmaW5lZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAoZGlybmFtZSkge1xuICAgIGFzc2VydFBhdGgodGhpcy5wYXRoLCAnZGlybmFtZScpO1xuICAgIHRoaXMucGF0aCA9IHBhdGguam9pbihkaXJuYW1lIHx8ICcnLCB0aGlzLmJhc2VuYW1lKTtcbiAgfVxufSk7XG5cbi8qIEFjY2VzcyBiYXNlbmFtZSAoYGluZGV4Lm1pbi5qc2ApLiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCAnYmFzZW5hbWUnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0eXBlb2YgdGhpcy5wYXRoID09PSAnc3RyaW5nJyA/IHBhdGguYmFzZW5hbWUodGhpcy5wYXRoKSA6IHVuZGVmaW5lZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAoYmFzZW5hbWUpIHtcbiAgICBhc3NlcnROb25FbXB0eShiYXNlbmFtZSwgJ2Jhc2VuYW1lJyk7XG4gICAgYXNzZXJ0UGFydChiYXNlbmFtZSwgJ2Jhc2VuYW1lJyk7XG4gICAgdGhpcy5wYXRoID0gcGF0aC5qb2luKHRoaXMuZGlybmFtZSB8fCAnJywgYmFzZW5hbWUpO1xuICB9XG59KTtcblxuLyogQWNjZXNzIGV4dG5hbWUgKGAuanNgKS4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgJ2V4dG5hbWUnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0eXBlb2YgdGhpcy5wYXRoID09PSAnc3RyaW5nJyA/IHBhdGguZXh0bmFtZSh0aGlzLnBhdGgpIDogdW5kZWZpbmVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChleHRuYW1lKSB7XG4gICAgdmFyIGV4dCA9IGV4dG5hbWUgfHwgJyc7XG5cbiAgICBhc3NlcnRQYXJ0KGV4dCwgJ2V4dG5hbWUnKTtcbiAgICBhc3NlcnRQYXRoKHRoaXMucGF0aCwgJ2V4dG5hbWUnKTtcblxuICAgIGlmIChleHQpIHtcbiAgICAgIGlmIChleHQuY2hhckF0KDApICE9PSAnLicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgZXh0bmFtZWAgbXVzdCBzdGFydCB3aXRoIGAuYCcpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXh0LmluZGV4T2YoJy4nLCAxKSAhPT0gLTEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgZXh0bmFtZWAgY2Fubm90IGNvbnRhaW4gbXVsdGlwbGUgZG90cycpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMucGF0aCA9IHJlcGxhY2UodGhpcy5wYXRoLCBleHQpO1xuICB9XG59KTtcblxuLyogQWNjZXNzIHN0ZW0gKGBpbmRleC5taW5gKS4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgJ3N0ZW0nLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0eXBlb2YgdGhpcy5wYXRoID09PSAnc3RyaW5nJyA/IHBhdGguYmFzZW5hbWUodGhpcy5wYXRoLCB0aGlzLmV4dG5hbWUpIDogdW5kZWZpbmVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChzdGVtKSB7XG4gICAgYXNzZXJ0Tm9uRW1wdHkoc3RlbSwgJ3N0ZW0nKTtcbiAgICBhc3NlcnRQYXJ0KHN0ZW0sICdzdGVtJyk7XG4gICAgdGhpcy5wYXRoID0gcGF0aC5qb2luKHRoaXMuZGlybmFtZSB8fCAnJywgc3RlbSArICh0aGlzLmV4dG5hbWUgfHwgJycpKTtcbiAgfVxufSk7XG5cbi8qIEdldCB0aGUgdmFsdWUgb2YgdGhlIGZpbGUuICovXG5mdW5jdGlvbiB0b1N0cmluZyhlbmNvZGluZykge1xuICB2YXIgdmFsdWUgPSB0aGlzLmNvbnRlbnRzIHx8ICcnO1xuICByZXR1cm4gYnVmZmVyKHZhbHVlKSA/IHZhbHVlLnRvU3RyaW5nKGVuY29kaW5nKSA6IFN0cmluZyh2YWx1ZSk7XG59XG5cbi8qIEFzc2VydCB0aGF0IGBwYXJ0YCBpcyBub3QgYSBwYXRoIChpLmUuLCBkb2VzXG4gKiBub3QgY29udGFpbiBgcGF0aC5zZXBgKS4gKi9cbmZ1bmN0aW9uIGFzc2VydFBhcnQocGFydCwgbmFtZSkge1xuICBpZiAocGFydC5pbmRleE9mKHBhdGguc2VwKSAhPT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2AnICsgbmFtZSArICdgIGNhbm5vdCBiZSBhIHBhdGg6IGRpZCBub3QgZXhwZWN0IGAnICsgcGF0aC5zZXAgKyAnYCcpO1xuICB9XG59XG5cbi8qIEFzc2VydCB0aGF0IGBwYXJ0YCBpcyBub3QgZW1wdHkuICovXG5mdW5jdGlvbiBhc3NlcnROb25FbXB0eShwYXJ0LCBuYW1lKSB7XG4gIGlmICghcGFydCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYCcgKyBuYW1lICsgJ2AgY2Fubm90IGJlIGVtcHR5Jyk7XG4gIH1cbn1cblxuLyogQXNzZXJ0IGBwYXRoYCBleGlzdHMuICovXG5mdW5jdGlvbiBhc3NlcnRQYXRoKHBhdGgsIG5hbWUpIHtcbiAgaWYgKCFwYXRoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTZXR0aW5nIGAnICsgbmFtZSArICdgIHJlcXVpcmVzIGBwYXRoYCB0byBiZSBzZXQgdG9vJyk7XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmZ1bmN0aW9uIHJlcGxhY2VFeHQobnBhdGgsIGV4dCkge1xuICBpZiAodHlwZW9mIG5wYXRoICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBucGF0aDtcbiAgfVxuXG4gIGlmIChucGF0aC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnBhdGg7XG4gIH1cblxuICB2YXIgbkZpbGVOYW1lID0gcGF0aC5iYXNlbmFtZShucGF0aCwgcGF0aC5leHRuYW1lKG5wYXRoKSkgKyBleHQ7XG4gIHJldHVybiBwYXRoLmpvaW4ocGF0aC5kaXJuYW1lKG5wYXRoKSwgbkZpbGVOYW1lKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZXBsYWNlRXh0O1xuIiwiLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG4vLyBUaGUgX2lzQnVmZmVyIGNoZWNrIGlzIGZvciBTYWZhcmkgNS03IHN1cHBvcnQsIGJlY2F1c2UgaXQncyBtaXNzaW5nXG4vLyBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLiBSZW1vdmUgdGhpcyBldmVudHVhbGx5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIChpc0J1ZmZlcihvYmopIHx8IGlzU2xvd0J1ZmZlcihvYmopIHx8ICEhb2JqLl9pc0J1ZmZlcilcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKG9iaikge1xuICByZXR1cm4gISFvYmouY29uc3RydWN0b3IgJiYgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuXG4vLyBGb3IgTm9kZSB2MC4xMCBzdXBwb3J0LiBSZW1vdmUgdGhpcyBldmVudHVhbGx5LlxuZnVuY3Rpb24gaXNTbG93QnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmoucmVhZEZsb2F0TEUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5zbGljZSA9PT0gJ2Z1bmN0aW9uJyAmJiBpc0J1ZmZlcihvYmouc2xpY2UoMCwgMCkpXG59XG4iLCIndXNlIHN0cmljdCdcblxudmFyIHdyYXAgPSByZXF1aXJlKCcuL3dyYXAuanMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRyb3VnaFxuXG50cm91Z2gud3JhcCA9IHdyYXBcblxudmFyIHNsaWNlID0gW10uc2xpY2VcblxuLy8gQ3JlYXRlIG5ldyBtaWRkbGV3YXJlLlxuZnVuY3Rpb24gdHJvdWdoKCkge1xuICB2YXIgZm5zID0gW11cbiAgdmFyIG1pZGRsZXdhcmUgPSB7fVxuXG4gIG1pZGRsZXdhcmUucnVuID0gcnVuXG4gIG1pZGRsZXdhcmUudXNlID0gdXNlXG5cbiAgcmV0dXJuIG1pZGRsZXdhcmVcblxuICAvLyBSdW4gYGZuc2AuICBMYXN0IGFyZ3VtZW50IG11c3QgYmUgYSBjb21wbGV0aW9uIGhhbmRsZXIuXG4gIGZ1bmN0aW9uIHJ1bigpIHtcbiAgICB2YXIgaW5kZXggPSAtMVxuICAgIHZhciBpbnB1dCA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAwLCAtMSlcbiAgICB2YXIgZG9uZSA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV1cblxuICAgIGlmICh0eXBlb2YgZG9uZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBmdW5jdGlvbiBhcyBsYXN0IGFyZ3VtZW50LCBub3QgJyArIGRvbmUpXG4gICAgfVxuXG4gICAgbmV4dC5hcHBseShudWxsLCBbbnVsbF0uY29uY2F0KGlucHV0KSlcblxuICAgIC8vIFJ1biB0aGUgbmV4dCBgZm5gLCBpZiBhbnkuXG4gICAgZnVuY3Rpb24gbmV4dChlcnIpIHtcbiAgICAgIHZhciBmbiA9IGZuc1srK2luZGV4XVxuICAgICAgdmFyIHBhcmFtcyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKVxuICAgICAgdmFyIHZhbHVlcyA9IHBhcmFtcy5zbGljZSgxKVxuICAgICAgdmFyIGxlbmd0aCA9IGlucHV0Lmxlbmd0aFxuICAgICAgdmFyIHBvcyA9IC0xXG5cbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgZG9uZShlcnIpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICAvLyBDb3B5IG5vbi1udWxseSBpbnB1dCBpbnRvIHZhbHVlcy5cbiAgICAgIHdoaWxlICgrK3BvcyA8IGxlbmd0aCkge1xuICAgICAgICBpZiAodmFsdWVzW3Bvc10gPT09IG51bGwgfHwgdmFsdWVzW3Bvc10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhbHVlc1twb3NdID0gaW5wdXRbcG9zXVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlucHV0ID0gdmFsdWVzXG5cbiAgICAgIC8vIE5leHQgb3IgZG9uZS5cbiAgICAgIGlmIChmbikge1xuICAgICAgICB3cmFwKGZuLCBuZXh0KS5hcHBseShudWxsLCBpbnB1dClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvbmUuYXBwbHkobnVsbCwgW251bGxdLmNvbmNhdChpbnB1dCkpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIGBmbmAgdG8gdGhlIGxpc3QuXG4gIGZ1bmN0aW9uIHVzZShmbikge1xuICAgIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYGZuYCB0byBiZSBhIGZ1bmN0aW9uLCBub3QgJyArIGZuKVxuICAgIH1cblxuICAgIGZucy5wdXNoKGZuKVxuXG4gICAgcmV0dXJuIG1pZGRsZXdhcmVcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbnZhciBzbGljZSA9IFtdLnNsaWNlXG5cbm1vZHVsZS5leHBvcnRzID0gd3JhcFxuXG4vLyBXcmFwIGBmbmAuXG4vLyBDYW4gYmUgc3luYyBvciBhc3luYzsgcmV0dXJuIGEgcHJvbWlzZSwgcmVjZWl2ZSBhIGNvbXBsZXRpb24gaGFuZGxlciwgcmV0dXJuXG4vLyBuZXcgdmFsdWVzIGFuZCBlcnJvcnMuXG5mdW5jdGlvbiB3cmFwKGZuLCBjYWxsYmFjaykge1xuICB2YXIgaW52b2tlZFxuXG4gIHJldHVybiB3cmFwcGVkXG5cbiAgZnVuY3Rpb24gd3JhcHBlZCgpIHtcbiAgICB2YXIgcGFyYW1zID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDApXG4gICAgdmFyIGNhbGxiYWNrID0gZm4ubGVuZ3RoID4gcGFyYW1zLmxlbmd0aFxuICAgIHZhciByZXN1bHRcblxuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgcGFyYW1zLnB1c2goZG9uZSlcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gZm4uYXBwbHkobnVsbCwgcGFyYW1zKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBXZWxsLCB0aGlzIGlzIHF1aXRlIHRoZSBwaWNrbGUuXG4gICAgICAvLyBgZm5gIHJlY2VpdmVkIGEgY2FsbGJhY2sgYW5kIGludm9rZWQgaXQgKHRodXMgY29udGludWluZyB0aGUgcGlwZWxpbmUpLFxuICAgICAgLy8gYnV0IGxhdGVyIGFsc28gdGhyZXcgYW4gZXJyb3IuXG4gICAgICAvLyBXZeKAmXJlIG5vdCBhYm91dCB0byByZXN0YXJ0IHRoZSBwaXBlbGluZSBhZ2Fpbiwgc28gdGhlIG9ubHkgdGhpbmcgbGVmdFxuICAgICAgLy8gdG8gZG8gaXMgdG8gdGhyb3cgdGhlIHRoaW5nIGluc3RlYWQuXG4gICAgICBpZiAoY2FsbGJhY2sgJiYgaW52b2tlZCkge1xuICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZG9uZShlcnJvcilcbiAgICB9XG5cbiAgICBpZiAoIWNhbGxiYWNrKSB7XG4gICAgICBpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXN1bHQudGhlbih0aGVuLCBkb25lKVxuICAgICAgfSBlbHNlIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICBkb25lKHJlc3VsdClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoZW4ocmVzdWx0KVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEludm9rZSBgbmV4dGAsIG9ubHkgb25jZS5cbiAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICBpZiAoIWludm9rZWQpIHtcbiAgICAgIGludm9rZWQgPSB0cnVlXG5cbiAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICB9XG4gIH1cblxuICAvLyBJbnZva2UgYGRvbmVgIHdpdGggb25lIHZhbHVlLlxuICAvLyBUcmFja3MgaWYgYW4gZXJyb3IgaXMgcGFzc2VkLCB0b28uXG4gIGZ1bmN0aW9uIHRoZW4odmFsdWUpIHtcbiAgICBkb25lKG51bGwsIHZhbHVlKVxuICB9XG59XG4iLCJ2YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nXG5cbm1vZHVsZS5leHBvcnRzID0gaXNTdHJpbmdcblxuZnVuY3Rpb24gaXNTdHJpbmcob2JqKSB7XG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gXCJbb2JqZWN0IFN0cmluZ11cIlxufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHR2YXIgcHJvdG90eXBlO1xuXHRyZXR1cm4gdG9TdHJpbmcuY2FsbCh4KSA9PT0gJ1tvYmplY3QgT2JqZWN0XScgJiYgKHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih4KSwgcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHt9KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdW5oZXJpdCA9IHJlcXVpcmUoJ3VuaGVyaXQnKTtcbnZhciB4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJyk7XG52YXIgUGFyc2VyID0gcmVxdWlyZSgnLi9saWIvcGFyc2VyLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2U7XG5wYXJzZS5QYXJzZXIgPSBQYXJzZXI7XG5cbmZ1bmN0aW9uIHBhcnNlKG9wdGlvbnMpIHtcbiAgdmFyIExvY2FsID0gdW5oZXJpdChQYXJzZXIpO1xuICBMb2NhbC5wcm90b3R5cGUub3B0aW9ucyA9IHh0ZW5kKExvY2FsLnByb3RvdHlwZS5vcHRpb25zLCB0aGlzLmRhdGEoJ3NldHRpbmdzJyksIG9wdGlvbnMpO1xuICB0aGlzLlBhcnNlciA9IExvY2FsO1xufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbnZhciB4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJylcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcblxubW9kdWxlLmV4cG9ydHMgPSB1bmhlcml0XG5cbi8vIENyZWF0ZSBhIGN1c3RvbSBjb25zdHJ1Y3RvciB3aGljaCBjYW4gYmUgbW9kaWZpZWQgd2l0aG91dCBhZmZlY3RpbmcgdGhlXG4vLyBvcmlnaW5hbCBjbGFzcy5cbmZ1bmN0aW9uIHVuaGVyaXQoU3VwZXIpIHtcbiAgdmFyIHJlc3VsdFxuICB2YXIga2V5XG4gIHZhciB2YWx1ZVxuXG4gIGluaGVyaXRzKE9mLCBTdXBlcilcbiAgaW5oZXJpdHMoRnJvbSwgT2YpXG5cbiAgLy8gQ2xvbmUgdmFsdWVzLlxuICByZXN1bHQgPSBPZi5wcm90b3R5cGVcblxuICBmb3IgKGtleSBpbiByZXN1bHQpIHtcbiAgICB2YWx1ZSA9IHJlc3VsdFtrZXldXG5cbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgcmVzdWx0W2tleV0gPSAnY29uY2F0JyBpbiB2YWx1ZSA/IHZhbHVlLmNvbmNhdCgpIDogeHRlbmQodmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIE9mXG5cbiAgLy8gQ29uc3RydWN0b3IgYWNjZXB0aW5nIGEgc2luZ2xlIGFyZ3VtZW50LCB3aGljaCBpdHNlbGYgaXMgYW4gYGFyZ3VtZW50c2BcbiAgLy8gb2JqZWN0LlxuICBmdW5jdGlvbiBGcm9tKHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gU3VwZXIuYXBwbHkodGhpcywgcGFyYW1ldGVycylcbiAgfVxuXG4gIC8vIENvbnN0cnVjdG9yIGFjY2VwdGluZyB2YXJpYWRpYyBhcmd1bWVudHMuXG4gIGZ1bmN0aW9uIE9mKCkge1xuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBPZikpIHtcbiAgICAgIHJldHVybiBuZXcgRnJvbShhcmd1bWVudHMpXG4gICAgfVxuXG4gICAgcmV0dXJuIFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgfVxufVxuIiwiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICBjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59IGVsc2Uge1xuICAvLyBvbGQgc2Nob29sIHNoaW0gZm9yIG9sZCBicm93c2Vyc1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlXG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKVxuICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICB9XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJyk7XG52YXIgdG9nZ2xlID0gcmVxdWlyZSgnc3RhdGUtdG9nZ2xlJyk7XG52YXIgdmZpbGVMb2NhdGlvbiA9IHJlcXVpcmUoJ3ZmaWxlLWxvY2F0aW9uJyk7XG52YXIgdW5lc2NhcGUgPSByZXF1aXJlKCcuL3VuZXNjYXBlJyk7XG52YXIgZGVjb2RlID0gcmVxdWlyZSgnLi9kZWNvZGUnKTtcbnZhciB0b2tlbml6ZXIgPSByZXF1aXJlKCcuL3Rva2VuaXplcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhcnNlcjtcblxuZnVuY3Rpb24gUGFyc2VyKGRvYywgZmlsZSkge1xuICB0aGlzLmZpbGUgPSBmaWxlO1xuICB0aGlzLm9mZnNldCA9IHt9O1xuICB0aGlzLm9wdGlvbnMgPSB4dGVuZCh0aGlzLm9wdGlvbnMpO1xuICB0aGlzLnNldE9wdGlvbnMoe30pO1xuXG4gIHRoaXMuaW5MaXN0ID0gZmFsc2U7XG4gIHRoaXMuaW5CbG9jayA9IGZhbHNlO1xuICB0aGlzLmluTGluayA9IGZhbHNlO1xuICB0aGlzLmF0U3RhcnQgPSB0cnVlO1xuXG4gIHRoaXMudG9PZmZzZXQgPSB2ZmlsZUxvY2F0aW9uKGZpbGUpLnRvT2Zmc2V0O1xuICB0aGlzLnVuZXNjYXBlID0gdW5lc2NhcGUodGhpcywgJ2VzY2FwZScpO1xuICB0aGlzLmRlY29kZSA9IGRlY29kZSh0aGlzKTtcbn1cblxudmFyIHByb3RvID0gUGFyc2VyLnByb3RvdHlwZTtcblxuLyogRXhwb3NlIGNvcmUuICovXG5wcm90by5zZXRPcHRpb25zID0gcmVxdWlyZSgnLi9zZXQtb3B0aW9ucycpO1xucHJvdG8ucGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJyk7XG5cbi8qIEV4cG9zZSBgZGVmYXVsdHNgLiAqL1xucHJvdG8ub3B0aW9ucyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuLyogRW50ZXIgYW5kIGV4aXQgaGVscGVycy4gKi9cbnByb3RvLmV4aXRTdGFydCA9IHRvZ2dsZSgnYXRTdGFydCcsIHRydWUpO1xucHJvdG8uZW50ZXJMaXN0ID0gdG9nZ2xlKCdpbkxpc3QnLCBmYWxzZSk7XG5wcm90by5lbnRlckxpbmsgPSB0b2dnbGUoJ2luTGluaycsIGZhbHNlKTtcbnByb3RvLmVudGVyQmxvY2sgPSB0b2dnbGUoJ2luQmxvY2snLCBmYWxzZSk7XG5cbi8qIE5vZGVzIHRoYXQgY2FuIGludGVydXB0IGEgcGFyYWdyYXBoOlxuICpcbiAqIGBgYG1hcmtkb3duXG4gKiBBIHBhcmFncmFwaCwgZm9sbG93ZWQgYnkgYSB0aGVtYXRpYyBicmVhay5cbiAqIF9fX1xuICogYGBgXG4gKlxuICogSW4gdGhlIGFib3ZlIGV4YW1wbGUsIHRoZSB0aGVtYXRpYyBicmVhayDigJxpbnRlcnVwdHPigJ1cbiAqIHRoZSBwYXJhZ3JhcGguICovXG5wcm90by5pbnRlcnJ1cHRQYXJhZ3JhcGggPSBbXG4gIFsndGhlbWF0aWNCcmVhayddLFxuICBbJ2F0eEhlYWRpbmcnXSxcbiAgWydmZW5jZWRDb2RlJ10sXG4gIFsnYmxvY2txdW90ZSddLFxuICBbJ2h0bWwnXSxcbiAgWydzZXRleHRIZWFkaW5nJywge2NvbW1vbm1hcms6IGZhbHNlfV0sXG4gIFsnZGVmaW5pdGlvbicsIHtjb21tb25tYXJrOiBmYWxzZX1dLFxuICBbJ2Zvb3Rub3RlJywge2NvbW1vbm1hcms6IGZhbHNlfV1cbl07XG5cbi8qIE5vZGVzIHRoYXQgY2FuIGludGVydXB0IGEgbGlzdDpcbiAqXG4gKiBgYGBtYXJrZG93blxuICogLSBPbmVcbiAqIF9fX1xuICogYGBgXG4gKlxuICogSW4gdGhlIGFib3ZlIGV4YW1wbGUsIHRoZSB0aGVtYXRpYyBicmVhayDigJxpbnRlcnVwdHPigJ1cbiAqIHRoZSBsaXN0LiAqL1xucHJvdG8uaW50ZXJydXB0TGlzdCA9IFtcbiAgWydhdHhIZWFkaW5nJywge3BlZGFudGljOiBmYWxzZX1dLFxuICBbJ2ZlbmNlZENvZGUnLCB7cGVkYW50aWM6IGZhbHNlfV0sXG4gIFsndGhlbWF0aWNCcmVhaycsIHtwZWRhbnRpYzogZmFsc2V9XSxcbiAgWydkZWZpbml0aW9uJywge2NvbW1vbm1hcms6IGZhbHNlfV0sXG4gIFsnZm9vdG5vdGUnLCB7Y29tbW9ubWFyazogZmFsc2V9XVxuXTtcblxuLyogTm9kZXMgdGhhdCBjYW4gaW50ZXJ1cHQgYSBibG9ja3F1b3RlOlxuICpcbiAqIGBgYG1hcmtkb3duXG4gKiA+IEEgcGFyYWdyYXBoLlxuICogX19fXG4gKiBgYGBcbiAqXG4gKiBJbiB0aGUgYWJvdmUgZXhhbXBsZSwgdGhlIHRoZW1hdGljIGJyZWFrIOKAnGludGVydXB0c+KAnVxuICogdGhlIGJsb2NrcXVvdGUuICovXG5wcm90by5pbnRlcnJ1cHRCbG9ja3F1b3RlID0gW1xuICBbJ2luZGVudGVkQ29kZScsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnZmVuY2VkQ29kZScsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnYXR4SGVhZGluZycsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnc2V0ZXh0SGVhZGluZycsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsndGhlbWF0aWNCcmVhaycsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnaHRtbCcsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnbGlzdCcsIHtjb21tb25tYXJrOiB0cnVlfV0sXG4gIFsnZGVmaW5pdGlvbicsIHtjb21tb25tYXJrOiBmYWxzZX1dLFxuICBbJ2Zvb3Rub3RlJywge2NvbW1vbm1hcms6IGZhbHNlfV1cbl07XG5cbi8qIEhhbmRsZXJzLiAqL1xucHJvdG8uYmxvY2tUb2tlbml6ZXJzID0ge1xuICBuZXdsaW5lOiByZXF1aXJlKCcuL3Rva2VuaXplL25ld2xpbmUnKSxcbiAgaW5kZW50ZWRDb2RlOiByZXF1aXJlKCcuL3Rva2VuaXplL2NvZGUtaW5kZW50ZWQnKSxcbiAgZmVuY2VkQ29kZTogcmVxdWlyZSgnLi90b2tlbml6ZS9jb2RlLWZlbmNlZCcpLFxuICBibG9ja3F1b3RlOiByZXF1aXJlKCcuL3Rva2VuaXplL2Jsb2NrcXVvdGUnKSxcbiAgYXR4SGVhZGluZzogcmVxdWlyZSgnLi90b2tlbml6ZS9oZWFkaW5nLWF0eCcpLFxuICB0aGVtYXRpY0JyZWFrOiByZXF1aXJlKCcuL3Rva2VuaXplL3RoZW1hdGljLWJyZWFrJyksXG4gIGxpc3Q6IHJlcXVpcmUoJy4vdG9rZW5pemUvbGlzdCcpLFxuICBzZXRleHRIZWFkaW5nOiByZXF1aXJlKCcuL3Rva2VuaXplL2hlYWRpbmctc2V0ZXh0JyksXG4gIGh0bWw6IHJlcXVpcmUoJy4vdG9rZW5pemUvaHRtbC1ibG9jaycpLFxuICBmb290bm90ZTogcmVxdWlyZSgnLi90b2tlbml6ZS9mb290bm90ZS1kZWZpbml0aW9uJyksXG4gIGRlZmluaXRpb246IHJlcXVpcmUoJy4vdG9rZW5pemUvZGVmaW5pdGlvbicpLFxuICB0YWJsZTogcmVxdWlyZSgnLi90b2tlbml6ZS90YWJsZScpLFxuICBwYXJhZ3JhcGg6IHJlcXVpcmUoJy4vdG9rZW5pemUvcGFyYWdyYXBoJylcbn07XG5cbnByb3RvLmlubGluZVRva2VuaXplcnMgPSB7XG4gIGVzY2FwZTogcmVxdWlyZSgnLi90b2tlbml6ZS9lc2NhcGUnKSxcbiAgYXV0b0xpbms6IHJlcXVpcmUoJy4vdG9rZW5pemUvYXV0by1saW5rJyksXG4gIHVybDogcmVxdWlyZSgnLi90b2tlbml6ZS91cmwnKSxcbiAgaHRtbDogcmVxdWlyZSgnLi90b2tlbml6ZS9odG1sLWlubGluZScpLFxuICBsaW5rOiByZXF1aXJlKCcuL3Rva2VuaXplL2xpbmsnKSxcbiAgcmVmZXJlbmNlOiByZXF1aXJlKCcuL3Rva2VuaXplL3JlZmVyZW5jZScpLFxuICBzdHJvbmc6IHJlcXVpcmUoJy4vdG9rZW5pemUvc3Ryb25nJyksXG4gIGVtcGhhc2lzOiByZXF1aXJlKCcuL3Rva2VuaXplL2VtcGhhc2lzJyksXG4gIGRlbGV0aW9uOiByZXF1aXJlKCcuL3Rva2VuaXplL2RlbGV0ZScpLFxuICBjb2RlOiByZXF1aXJlKCcuL3Rva2VuaXplL2NvZGUtaW5saW5lJyksXG4gIGJyZWFrOiByZXF1aXJlKCcuL3Rva2VuaXplL2JyZWFrJyksXG4gIHRleHQ6IHJlcXVpcmUoJy4vdG9rZW5pemUvdGV4dCcpXG59O1xuXG4vKiBFeHBvc2UgcHJlY2VkZW5jZS4gKi9cbnByb3RvLmJsb2NrTWV0aG9kcyA9IGtleXMocHJvdG8uYmxvY2tUb2tlbml6ZXJzKTtcbnByb3RvLmlubGluZU1ldGhvZHMgPSBrZXlzKHByb3RvLmlubGluZVRva2VuaXplcnMpO1xuXG4vKiBUb2tlbml6ZXJzLiAqL1xucHJvdG8udG9rZW5pemVCbG9jayA9IHRva2VuaXplcignYmxvY2snKTtcbnByb3RvLnRva2VuaXplSW5saW5lID0gdG9rZW5pemVyKCdpbmxpbmUnKTtcbnByb3RvLnRva2VuaXplRmFjdG9yeSA9IHRva2VuaXplcjtcblxuLyogR2V0IGFsbCBrZXlzIGluIGB2YWx1ZWAuICovXG5mdW5jdGlvbiBrZXlzKHZhbHVlKSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcblxuICBmb3IgKGtleSBpbiB2YWx1ZSkge1xuICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZmFjdG9yeVxuXG4vLyBDb25zdHJ1Y3QgYSBzdGF0ZSBgdG9nZ2xlcmA6IGEgZnVuY3Rpb24gd2hpY2ggaW52ZXJzZXMgYHByb3BlcnR5YCBpbiBjb250ZXh0XG4vLyBiYXNlZCBvbiBpdHMgY3VycmVudCB2YWx1ZS5cbi8vIFRoZSBieSBgdG9nZ2xlcmAgcmV0dXJuZWQgZnVuY3Rpb24gcmVzdG9yZXMgdGhhdCB2YWx1ZS5cbmZ1bmN0aW9uIGZhY3Rvcnkoa2V5LCBzdGF0ZSwgY3R4KSB7XG4gIHJldHVybiBlbnRlclxuXG4gIGZ1bmN0aW9uIGVudGVyKCkge1xuICAgIHZhciBjb250ZXh0ID0gY3R4IHx8IHRoaXNcbiAgICB2YXIgY3VycmVudCA9IGNvbnRleHRba2V5XVxuXG4gICAgY29udGV4dFtrZXldID0gIXN0YXRlXG5cbiAgICByZXR1cm4gZXhpdFxuXG4gICAgZnVuY3Rpb24gZXhpdCgpIHtcbiAgICAgIGNvbnRleHRba2V5XSA9IGN1cnJlbnRcbiAgICB9XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnlcblxuZnVuY3Rpb24gZmFjdG9yeShmaWxlKSB7XG4gIHZhciBjb250ZW50cyA9IGluZGljZXMoU3RyaW5nKGZpbGUpKVxuXG4gIHJldHVybiB7XG4gICAgdG9Qb3NpdGlvbjogb2Zmc2V0VG9Qb3NpdGlvbkZhY3RvcnkoY29udGVudHMpLFxuICAgIHRvT2Zmc2V0OiBwb3NpdGlvblRvT2Zmc2V0RmFjdG9yeShjb250ZW50cylcbiAgfVxufVxuXG4vLyBGYWN0b3J5IHRvIGdldCB0aGUgbGluZSBhbmQgY29sdW1uLWJhc2VkIGBwb3NpdGlvbmAgZm9yIGBvZmZzZXRgIGluIHRoZSBib3VuZFxuLy8gaW5kaWNlcy5cbmZ1bmN0aW9uIG9mZnNldFRvUG9zaXRpb25GYWN0b3J5KGluZGljZXMpIHtcbiAgcmV0dXJuIG9mZnNldFRvUG9zaXRpb25cblxuICAvLyBHZXQgdGhlIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGZvciBgb2Zmc2V0YCBpbiB0aGUgYm91bmQgaW5kaWNlcy5cbiAgZnVuY3Rpb24gb2Zmc2V0VG9Qb3NpdGlvbihvZmZzZXQpIHtcbiAgICB2YXIgaW5kZXggPSAtMVxuICAgIHZhciBsZW5ndGggPSBpbmRpY2VzLmxlbmd0aFxuXG4gICAgaWYgKG9mZnNldCA8IDApIHtcbiAgICAgIHJldHVybiB7fVxuICAgIH1cblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBpZiAoaW5kaWNlc1tpbmRleF0gPiBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsaW5lOiBpbmRleCArIDEsXG4gICAgICAgICAgY29sdW1uOiBvZmZzZXQgLSAoaW5kaWNlc1tpbmRleCAtIDFdIHx8IDApICsgMSxcbiAgICAgICAgICBvZmZzZXQ6IG9mZnNldFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHt9XG4gIH1cbn1cblxuLy8gRmFjdG9yeSB0byBnZXQgdGhlIGBvZmZzZXRgIGZvciBhIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGluIHRoZVxuLy8gYm91bmQgaW5kaWNlcy5cbmZ1bmN0aW9uIHBvc2l0aW9uVG9PZmZzZXRGYWN0b3J5KGluZGljZXMpIHtcbiAgcmV0dXJuIHBvc2l0aW9uVG9PZmZzZXRcblxuICAvLyBHZXQgdGhlIGBvZmZzZXRgIGZvciBhIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGluIHRoZSBib3VuZFxuICAvLyBpbmRpY2VzLlxuICBmdW5jdGlvbiBwb3NpdGlvblRvT2Zmc2V0KHBvc2l0aW9uKSB7XG4gICAgdmFyIGxpbmUgPSBwb3NpdGlvbiAmJiBwb3NpdGlvbi5saW5lXG4gICAgdmFyIGNvbHVtbiA9IHBvc2l0aW9uICYmIHBvc2l0aW9uLmNvbHVtblxuXG4gICAgaWYgKCFpc05hTihsaW5lKSAmJiAhaXNOYU4oY29sdW1uKSAmJiBsaW5lIC0gMSBpbiBpbmRpY2VzKSB7XG4gICAgICByZXR1cm4gKGluZGljZXNbbGluZSAtIDJdIHx8IDApICsgY29sdW1uIC0gMSB8fCAwXG4gICAgfVxuXG4gICAgcmV0dXJuIC0xXG4gIH1cbn1cblxuLy8gR2V0IGluZGljZXMgb2YgbGluZS1icmVha3MgaW4gYHZhbHVlYC5cbmZ1bmN0aW9uIGluZGljZXModmFsdWUpIHtcbiAgdmFyIHJlc3VsdCA9IFtdXG4gIHZhciBpbmRleCA9IHZhbHVlLmluZGV4T2YoJ1xcbicpXG5cbiAgd2hpbGUgKGluZGV4ICE9PSAtMSkge1xuICAgIHJlc3VsdC5wdXNoKGluZGV4ICsgMSlcbiAgICBpbmRleCA9IHZhbHVlLmluZGV4T2YoJ1xcbicsIGluZGV4ICsgMSlcbiAgfVxuXG4gIHJlc3VsdC5wdXNoKHZhbHVlLmxlbmd0aCArIDEpXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnk7XG5cbi8qIEZhY3RvcnkgdG8gZGUtZXNjYXBlIGEgdmFsdWUsIGJhc2VkIG9uIGEgbGlzdCBhdCBga2V5YFxuICogaW4gYGN0eGAuICovXG5mdW5jdGlvbiBmYWN0b3J5KGN0eCwga2V5KSB7XG4gIHJldHVybiB1bmVzY2FwZTtcblxuICAvKiBEZS1lc2NhcGUgYSBzdHJpbmcgdXNpbmcgdGhlIGV4cHJlc3Npb24gYXQgYGtleWBcbiAgICogaW4gYGN0eGAuICovXG4gIGZ1bmN0aW9uIHVuZXNjYXBlKHZhbHVlKSB7XG4gICAgdmFyIHByZXYgPSAwO1xuICAgIHZhciBpbmRleCA9IHZhbHVlLmluZGV4T2YoJ1xcXFwnKTtcbiAgICB2YXIgZXNjYXBlID0gY3R4W2tleV07XG4gICAgdmFyIHF1ZXVlID0gW107XG4gICAgdmFyIGNoYXJhY3RlcjtcblxuICAgIHdoaWxlIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHF1ZXVlLnB1c2godmFsdWUuc2xpY2UocHJldiwgaW5kZXgpKTtcbiAgICAgIHByZXYgPSBpbmRleCArIDE7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQocHJldik7XG5cbiAgICAgIC8qIElmIHRoZSBmb2xsb3dpbmcgY2hhcmFjdGVyIGlzIG5vdCBhIHZhbGlkIGVzY2FwZSxcbiAgICAgICAqIGFkZCB0aGUgc2xhc2guICovXG4gICAgICBpZiAoIWNoYXJhY3RlciB8fCBlc2NhcGUuaW5kZXhPZihjaGFyYWN0ZXIpID09PSAtMSkge1xuICAgICAgICBxdWV1ZS5wdXNoKCdcXFxcJyk7XG4gICAgICB9XG5cbiAgICAgIGluZGV4ID0gdmFsdWUuaW5kZXhPZignXFxcXCcsIHByZXYpO1xuICAgIH1cblxuICAgIHF1ZXVlLnB1c2godmFsdWUuc2xpY2UocHJldikpO1xuXG4gICAgcmV0dXJuIHF1ZXVlLmpvaW4oJycpO1xuICB9XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJyk7XG52YXIgZW50aXRpZXMgPSByZXF1aXJlKCdwYXJzZS1lbnRpdGllcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3Rvcnk7XG5cbi8qIEZhY3RvcnkgdG8gY3JlYXRlIGFuIGVudGl0eSBkZWNvZGVyLiAqL1xuZnVuY3Rpb24gZmFjdG9yeShjdHgpIHtcbiAgZGVjb2Rlci5yYXcgPSBkZWNvZGVSYXc7XG5cbiAgcmV0dXJuIGRlY29kZXI7XG5cbiAgLyogTm9ybWFsaXplIGBwb3NpdGlvbmAgdG8gYWRkIGFuIGBpbmRlbnRgLiAqL1xuICBmdW5jdGlvbiBub3JtYWxpemUocG9zaXRpb24pIHtcbiAgICB2YXIgb2Zmc2V0cyA9IGN0eC5vZmZzZXQ7XG4gICAgdmFyIGxpbmUgPSBwb3NpdGlvbi5saW5lO1xuICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgIHdoaWxlICgrK2xpbmUpIHtcbiAgICAgIGlmICghKGxpbmUgaW4gb2Zmc2V0cykpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdC5wdXNoKChvZmZzZXRzW2xpbmVdIHx8IDApICsgMSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXJ0OiBwb3NpdGlvbixcbiAgICAgIGluZGVudDogcmVzdWx0XG4gICAgfTtcbiAgfVxuXG4gIC8qIEhhbmRsZSBhIHdhcm5pbmcuXG4gICAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vd29vb3JtL3BhcnNlLWVudGl0aWVzXG4gICAqIGZvciB0aGUgd2FybmluZ3MuICovXG4gIGZ1bmN0aW9uIGhhbmRsZVdhcm5pbmcocmVhc29uLCBwb3NpdGlvbiwgY29kZSkge1xuICAgIGlmIChjb2RlID09PSAzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY3R4LmZpbGUubWVzc2FnZShyZWFzb24sIHBvc2l0aW9uKTtcbiAgfVxuXG4gIC8qIERlY29kZSBgdmFsdWVgIChhdCBgcG9zaXRpb25gKSBpbnRvIHRleHQtbm9kZXMuICovXG4gIGZ1bmN0aW9uIGRlY29kZXIodmFsdWUsIHBvc2l0aW9uLCBoYW5kbGVyKSB7XG4gICAgZW50aXRpZXModmFsdWUsIHtcbiAgICAgIHBvc2l0aW9uOiBub3JtYWxpemUocG9zaXRpb24pLFxuICAgICAgd2FybmluZzogaGFuZGxlV2FybmluZyxcbiAgICAgIHRleHQ6IGhhbmRsZXIsXG4gICAgICByZWZlcmVuY2U6IGhhbmRsZXIsXG4gICAgICB0ZXh0Q29udGV4dDogY3R4LFxuICAgICAgcmVmZXJlbmNlQ29udGV4dDogY3R4XG4gICAgfSk7XG4gIH1cblxuICAvKiBEZWNvZGUgYHZhbHVlYCAoYXQgYHBvc2l0aW9uYCkgaW50byBhIHN0cmluZy4gKi9cbiAgZnVuY3Rpb24gZGVjb2RlUmF3KHZhbHVlLCBwb3NpdGlvbiwgb3B0aW9ucykge1xuICAgIHJldHVybiBlbnRpdGllcyh2YWx1ZSwgeHRlbmQob3B0aW9ucywge1xuICAgICAgcG9zaXRpb246IG5vcm1hbGl6ZShwb3NpdGlvbiksXG4gICAgICB3YXJuaW5nOiBoYW5kbGVXYXJuaW5nXG4gICAgfSkpO1xuICB9XG59XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBoZXhhZGVjaW1hbFxuXG4vLyBDaGVjayBpZiB0aGUgZ2l2ZW4gY2hhcmFjdGVyIGNvZGUsIG9yIHRoZSBjaGFyYWN0ZXIgY29kZSBhdCB0aGUgZmlyc3Rcbi8vIGNoYXJhY3RlciwgaXMgaGV4YWRlY2ltYWwuXG5mdW5jdGlvbiBoZXhhZGVjaW1hbChjaGFyYWN0ZXIpIHtcbiAgdmFyIGNvZGUgPSB0eXBlb2YgY2hhcmFjdGVyID09PSAnc3RyaW5nJyA/IGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApIDogY2hhcmFjdGVyXG5cbiAgcmV0dXJuIChcbiAgICAoY29kZSA+PSA5NyAvKiBhICovICYmIGNvZGUgPD0gMTAyKSAvKiB6ICovIHx8XG4gICAgKGNvZGUgPj0gNjUgLyogQSAqLyAmJiBjb2RlIDw9IDcwKSAvKiBaICovIHx8XG4gICAgKGNvZGUgPj0gNDggLyogQSAqLyAmJiBjb2RlIDw9IDU3KSAvKiBaICovXG4gIClcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG52YXIgYWxwaGFiZXRpY2FsID0gcmVxdWlyZSgnaXMtYWxwaGFiZXRpY2FsJylcbnZhciBkZWNpbWFsID0gcmVxdWlyZSgnaXMtZGVjaW1hbCcpXG5cbm1vZHVsZS5leHBvcnRzID0gYWxwaGFudW1lcmljYWxcblxuLy8gQ2hlY2sgaWYgdGhlIGdpdmVuIGNoYXJhY3RlciBjb2RlLCBvciB0aGUgY2hhcmFjdGVyIGNvZGUgYXQgdGhlIGZpcnN0XG4vLyBjaGFyYWN0ZXIsIGlzIGFscGhhbnVtZXJpY2FsLlxuZnVuY3Rpb24gYWxwaGFudW1lcmljYWwoY2hhcmFjdGVyKSB7XG4gIHJldHVybiBhbHBoYWJldGljYWwoY2hhcmFjdGVyKSB8fCBkZWNpbWFsKGNoYXJhY3Rlcilcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxudmFyIGVsXG5cbnZhciBzZW1pY29sb24gPSA1OSAvLyAgJzsnXG5cbm1vZHVsZS5leHBvcnRzID0gZGVjb2RlRW50aXR5XG5cbmZ1bmN0aW9uIGRlY29kZUVudGl0eShjaGFyYWN0ZXJzKSB7XG4gIHZhciBlbnRpdHkgPSAnJicgKyBjaGFyYWN0ZXJzICsgJzsnXG4gIHZhciBjaGFyXG5cbiAgZWwgPSBlbCB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJylcbiAgZWwuaW5uZXJIVE1MID0gZW50aXR5XG4gIGNoYXIgPSBlbC50ZXh0Q29udGVudFxuXG4gIC8vIFNvbWUgZW50aXRpZXMgZG8gbm90IHJlcXVpcmUgdGhlIGNsb3Npbmcgc2VtaWNvbG9uIChgJm5vdGAgLSBmb3IgaW5zdGFuY2UpLFxuICAvLyB3aGljaCBsZWFkcyB0byBzaXR1YXRpb25zIHdoZXJlIHBhcnNpbmcgdGhlIGFzc3VtZWQgZW50aXR5IG9mICZub3RpdDsgd2lsbFxuICAvLyByZXN1bHQgaW4gdGhlIHN0cmluZyBgwqxpdDtgLiAgV2hlbiB3ZSBlbmNvdW50ZXIgYSB0cmFpbGluZyBzZW1pY29sb24gYWZ0ZXJcbiAgLy8gcGFyc2luZyBhbmQgdGhlIGVudGl0eSB0byBkZWNvZGUgd2FzIG5vdCBhIHNlbWljb2xvbiAoYCZzZW1pO2ApLCB3ZSBjYW5cbiAgLy8gYXNzdW1lIHRoYXQgdGhlIG1hdGNoaW5nIHdhcyBpbmNvbXBsZXRlXG4gIGlmIChjaGFyLmNoYXJDb2RlQXQoY2hhci5sZW5ndGggLSAxKSA9PT0gc2VtaWNvbG9uICYmIGNoYXJhY3RlcnMgIT09ICdzZW1pJykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLy8gSWYgdGhlIGRlY29kZWQgc3RyaW5nIGlzIGVxdWFsIHRvIHRoZSBpbnB1dCwgdGhlIGVudGl0eSB3YXMgbm90IHZhbGlkXG4gIHJldHVybiBjaGFyID09PSBlbnRpdHkgPyBmYWxzZSA6IGNoYXJcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5O1xuXG52YXIgTUVSR0VBQkxFX05PREVTID0ge1xuICB0ZXh0OiBtZXJnZVRleHQsXG4gIGJsb2NrcXVvdGU6IG1lcmdlQmxvY2txdW90ZVxufTtcblxuLyogQ2hlY2sgd2hldGhlciBhIG5vZGUgaXMgbWVyZ2VhYmxlIHdpdGggYWRqYWNlbnQgbm9kZXMuICovXG5mdW5jdGlvbiBtZXJnZWFibGUobm9kZSkge1xuICB2YXIgc3RhcnQ7XG4gIHZhciBlbmQ7XG5cbiAgaWYgKG5vZGUudHlwZSAhPT0gJ3RleHQnIHx8ICFub2RlLnBvc2l0aW9uKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBzdGFydCA9IG5vZGUucG9zaXRpb24uc3RhcnQ7XG4gIGVuZCA9IG5vZGUucG9zaXRpb24uZW5kO1xuXG4gIC8qIE9ubHkgbWVyZ2Ugbm9kZXMgd2hpY2ggb2NjdXB5IHRoZSBzYW1lIHNpemUgYXMgdGhlaXJcbiAgICogYHZhbHVlYC4gKi9cbiAgcmV0dXJuIHN0YXJ0LmxpbmUgIT09IGVuZC5saW5lIHx8XG4gICAgICBlbmQuY29sdW1uIC0gc3RhcnQuY29sdW1uID09PSBub2RlLnZhbHVlLmxlbmd0aDtcbn1cblxuLyogTWVyZ2UgdHdvIHRleHQgbm9kZXM6IGBub2RlYCBpbnRvIGBwcmV2YC4gKi9cbmZ1bmN0aW9uIG1lcmdlVGV4dChwcmV2LCBub2RlKSB7XG4gIHByZXYudmFsdWUgKz0gbm9kZS52YWx1ZTtcblxuICByZXR1cm4gcHJldjtcbn1cblxuLyogTWVyZ2UgdHdvIGJsb2NrcXVvdGVzOiBgbm9kZWAgaW50byBgcHJldmAsIHVubGVzcyBpblxuICogQ29tbW9uTWFyayBtb2RlLiAqL1xuZnVuY3Rpb24gbWVyZ2VCbG9ja3F1b3RlKHByZXYsIG5vZGUpIHtcbiAgaWYgKHRoaXMub3B0aW9ucy5jb21tb25tYXJrKSB7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cblxuICBwcmV2LmNoaWxkcmVuID0gcHJldi5jaGlsZHJlbi5jb25jYXQobm9kZS5jaGlsZHJlbik7XG5cbiAgcmV0dXJuIHByZXY7XG59XG5cbi8qIENvbnN0cnVjdCBhIHRva2VuaXplci4gIFRoaXMgY3JlYXRlcyBib3RoXG4gKiBgdG9rZW5pemVJbmxpbmVgIGFuZCBgdG9rZW5pemVCbG9ja2AuICovXG5mdW5jdGlvbiBmYWN0b3J5KHR5cGUpIHtcbiAgcmV0dXJuIHRva2VuaXplO1xuXG4gIC8qIFRva2VuaXplciBmb3IgYSBib3VuZCBgdHlwZWAuICovXG4gIGZ1bmN0aW9uIHRva2VuaXplKHZhbHVlLCBsb2NhdGlvbikge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgb2Zmc2V0ID0gc2VsZi5vZmZzZXQ7XG4gICAgdmFyIHRva2VucyA9IFtdO1xuICAgIHZhciBtZXRob2RzID0gc2VsZlt0eXBlICsgJ01ldGhvZHMnXTtcbiAgICB2YXIgdG9rZW5pemVycyA9IHNlbGZbdHlwZSArICdUb2tlbml6ZXJzJ107XG4gICAgdmFyIGxpbmUgPSBsb2NhdGlvbi5saW5lO1xuICAgIHZhciBjb2x1bW4gPSBsb2NhdGlvbi5jb2x1bW47XG4gICAgdmFyIGluZGV4O1xuICAgIHZhciBsZW5ndGg7XG4gICAgdmFyIG1ldGhvZDtcbiAgICB2YXIgbmFtZTtcbiAgICB2YXIgbWF0Y2hlZDtcbiAgICB2YXIgdmFsdWVMZW5ndGg7XG5cbiAgICAvKiBUcmltIHdoaXRlIHNwYWNlIG9ubHkgbGluZXMuICovXG4gICAgaWYgKCF2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRva2VucztcbiAgICB9XG5cbiAgICAvKiBFeHBvc2Ugb24gYGVhdGAuICovXG4gICAgZWF0Lm5vdyA9IG5vdztcbiAgICBlYXQuZmlsZSA9IHNlbGYuZmlsZTtcblxuICAgIC8qIFN5bmMgaW5pdGlhbCBvZmZzZXQuICovXG4gICAgdXBkYXRlUG9zaXRpb24oJycpO1xuXG4gICAgLyogSXRlcmF0ZSBvdmVyIGB2YWx1ZWAsIGFuZCBpdGVyYXRlIG92ZXIgYWxsXG4gICAgICogdG9rZW5pemVycy4gIFdoZW4gb25lIGVhdHMgc29tZXRoaW5nLCByZS1pdGVyYXRlXG4gICAgICogd2l0aCB0aGUgcmVtYWluaW5nIHZhbHVlLiAgSWYgbm8gdG9rZW5pemVyIGVhdHMsXG4gICAgICogc29tZXRoaW5nIGZhaWxlZCAoc2hvdWxkIG5vdCBoYXBwZW4pIGFuZCBhblxuICAgICAqIGV4Y2VwdGlvbiBpcyB0aHJvd24uICovXG4gICAgd2hpbGUgKHZhbHVlKSB7XG4gICAgICBpbmRleCA9IC0xO1xuICAgICAgbGVuZ3RoID0gbWV0aG9kcy5sZW5ndGg7XG4gICAgICBtYXRjaGVkID0gZmFsc2U7XG5cbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIG5hbWUgPSBtZXRob2RzW2luZGV4XTtcbiAgICAgICAgbWV0aG9kID0gdG9rZW5pemVyc1tuYW1lXTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgbWV0aG9kICYmXG4gICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gKCFtZXRob2Qub25seUF0U3RhcnQgfHwgc2VsZi5hdFN0YXJ0KSAmJlxuICAgICAgICAgICghbWV0aG9kLm5vdEluTGlzdCB8fCAhc2VsZi5pbkxpc3QpICYmXG4gICAgICAgICAgKCFtZXRob2Qubm90SW5CbG9jayB8fCAhc2VsZi5pbkJsb2NrKSAmJlxuICAgICAgICAgICghbWV0aG9kLm5vdEluTGluayB8fCAhc2VsZi5pbkxpbmspXG4gICAgICAgICkge1xuICAgICAgICAgIHZhbHVlTGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuXG4gICAgICAgICAgbWV0aG9kLmFwcGx5KHNlbGYsIFtlYXQsIHZhbHVlXSk7XG5cbiAgICAgICAgICBtYXRjaGVkID0gdmFsdWVMZW5ndGggIT09IHZhbHVlLmxlbmd0aDtcblxuICAgICAgICAgIGlmIChtYXRjaGVkKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAoIW1hdGNoZWQpIHtcbiAgICAgICAgc2VsZi5maWxlLmZhaWwobmV3IEVycm9yKCdJbmZpbml0ZSBsb29wJyksIGVhdC5ub3coKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2VsZi5lb2YgPSBub3coKTtcblxuICAgIHJldHVybiB0b2tlbnM7XG5cbiAgICAvKiBVcGRhdGUgbGluZSwgY29sdW1uLCBhbmQgb2Zmc2V0IGJhc2VkIG9uXG4gICAgICogYHZhbHVlYC4gKi9cbiAgICBmdW5jdGlvbiB1cGRhdGVQb3NpdGlvbihzdWJ2YWx1ZSkge1xuICAgICAgdmFyIGxhc3RJbmRleCA9IC0xO1xuICAgICAgdmFyIGluZGV4ID0gc3VidmFsdWUuaW5kZXhPZignXFxuJyk7XG5cbiAgICAgIHdoaWxlIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgbGluZSsrO1xuICAgICAgICBsYXN0SW5kZXggPSBpbmRleDtcbiAgICAgICAgaW5kZXggPSBzdWJ2YWx1ZS5pbmRleE9mKCdcXG4nLCBpbmRleCArIDEpO1xuICAgICAgfVxuXG4gICAgICBpZiAobGFzdEluZGV4ID09PSAtMSkge1xuICAgICAgICBjb2x1bW4gKz0gc3VidmFsdWUubGVuZ3RoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29sdW1uID0gc3VidmFsdWUubGVuZ3RoIC0gbGFzdEluZGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAobGluZSBpbiBvZmZzZXQpIHtcbiAgICAgICAgaWYgKGxhc3RJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICBjb2x1bW4gKz0gb2Zmc2V0W2xpbmVdO1xuICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbiA8PSBvZmZzZXRbbGluZV0pIHtcbiAgICAgICAgICBjb2x1bW4gPSBvZmZzZXRbbGluZV0gKyAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyogR2V0IG9mZnNldC4gIENhbGxlZCBiZWZvcmUgdGhlIGZpcnN0IGNoYXJhY3RlciBpc1xuICAgICAqIGVhdGVuIHRvIHJldHJpZXZlIHRoZSByYW5nZSdzIG9mZnNldHMuICovXG4gICAgZnVuY3Rpb24gZ2V0T2Zmc2V0KCkge1xuICAgICAgdmFyIGluZGVudGF0aW9uID0gW107XG4gICAgICB2YXIgcG9zID0gbGluZSArIDE7XG5cbiAgICAgIC8qIERvbmUuICBDYWxsZWQgd2hlbiB0aGUgbGFzdCBjaGFyYWN0ZXIgaXNcbiAgICAgICAqIGVhdGVuIHRvIHJldHJpZXZlIHRoZSByYW5nZeKAmXMgb2Zmc2V0cy4gKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsYXN0ID0gbGluZSArIDE7XG5cbiAgICAgICAgd2hpbGUgKHBvcyA8IGxhc3QpIHtcbiAgICAgICAgICBpbmRlbnRhdGlvbi5wdXNoKChvZmZzZXRbcG9zXSB8fCAwKSArIDEpO1xuXG4gICAgICAgICAgcG9zKys7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5kZW50YXRpb247XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8qIEdldCB0aGUgY3VycmVudCBwb3NpdGlvbi4gKi9cbiAgICBmdW5jdGlvbiBub3coKSB7XG4gICAgICB2YXIgcG9zID0ge2xpbmU6IGxpbmUsIGNvbHVtbjogY29sdW1ufTtcblxuICAgICAgcG9zLm9mZnNldCA9IHNlbGYudG9PZmZzZXQocG9zKTtcblxuICAgICAgcmV0dXJuIHBvcztcbiAgICB9XG5cbiAgICAvKiBTdG9yZSBwb3NpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYSBub2RlLiAqL1xuICAgIGZ1bmN0aW9uIFBvc2l0aW9uKHN0YXJ0KSB7XG4gICAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7XG4gICAgICB0aGlzLmVuZCA9IG5vdygpO1xuICAgIH1cblxuICAgIC8qIFRocm93IHdoZW4gYSB2YWx1ZSBpcyBpbmNvcnJlY3RseSBlYXRlbi5cbiAgICAgKiBUaGlzIHNob3VsZG7igJl0IGhhcHBlbiBidXQgd2lsbCB0aHJvdyBvbiBuZXcsXG4gICAgICogaW5jb3JyZWN0IHJ1bGVzLiAqL1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlRWF0KHN1YnZhbHVlKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmICh2YWx1ZS5zdWJzdHJpbmcoMCwgc3VidmFsdWUubGVuZ3RoKSAhPT0gc3VidmFsdWUpIHtcbiAgICAgICAgLyogQ2FwdHVyZSBzdGFjay10cmFjZS4gKi9cbiAgICAgICAgc2VsZi5maWxlLmZhaWwoXG4gICAgICAgICAgbmV3IEVycm9yKFxuICAgICAgICAgICAgJ0luY29ycmVjdGx5IGVhdGVuIHZhbHVlOiBwbGVhc2UgcmVwb3J0IHRoaXMgJyArXG4gICAgICAgICAgICAnd2FybmluZyBvbiBodHRwOi8vZ2l0LmlvL3ZnNUZ0J1xuICAgICAgICAgICksXG4gICAgICAgICAgbm93KClcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBNYXJrIHBvc2l0aW9uIGFuZCBwYXRjaCBgbm9kZS5wb3NpdGlvbmAuICovXG4gICAgZnVuY3Rpb24gcG9zaXRpb24oKSB7XG4gICAgICB2YXIgYmVmb3JlID0gbm93KCk7XG5cbiAgICAgIHJldHVybiB1cGRhdGU7XG5cbiAgICAgIC8qIEFkZCB0aGUgcG9zaXRpb24gdG8gYSBub2RlLiAqL1xuICAgICAgZnVuY3Rpb24gdXBkYXRlKG5vZGUsIGluZGVudCkge1xuICAgICAgICB2YXIgcHJldiA9IG5vZGUucG9zaXRpb247XG4gICAgICAgIHZhciBzdGFydCA9IHByZXYgPyBwcmV2LnN0YXJ0IDogYmVmb3JlO1xuICAgICAgICB2YXIgY29tYmluZWQgPSBbXTtcbiAgICAgICAgdmFyIG4gPSBwcmV2ICYmIHByZXYuZW5kLmxpbmU7XG4gICAgICAgIHZhciBsID0gYmVmb3JlLmxpbmU7XG5cbiAgICAgICAgbm9kZS5wb3NpdGlvbiA9IG5ldyBQb3NpdGlvbihzdGFydCk7XG5cbiAgICAgICAgLyogSWYgdGhlcmUgd2FzIGFscmVhZHkgYSBgcG9zaXRpb25gLCB0aGlzXG4gICAgICAgICAqIG5vZGUgd2FzIG1lcmdlZC4gIEZpeGluZyBgc3RhcnRgIHdhc27igJl0XG4gICAgICAgICAqIGhhcmQsIGJ1dCB0aGUgaW5kZW50IGlzIGRpZmZlcmVudC5cbiAgICAgICAgICogRXNwZWNpYWxseSBiZWNhdXNlIHNvbWUgaW5mb3JtYXRpb24sIHRoZVxuICAgICAgICAgKiBpbmRlbnQgYmV0d2VlbiBgbmAgYW5kIGBsYCB3YXNu4oCZdFxuICAgICAgICAgKiB0cmFja2VkLiAgTHVja2lseSwgdGhhdCBzcGFjZSBpc1xuICAgICAgICAgKiAoc2hvdWxkIGJlPykgZW1wdHksIHNvIHdlIGNhbiBzYWZlbHlcbiAgICAgICAgICogY2hlY2sgZm9yIGl0IG5vdy4gKi9cbiAgICAgICAgaWYgKHByZXYgJiYgaW5kZW50ICYmIHByZXYuaW5kZW50KSB7XG4gICAgICAgICAgY29tYmluZWQgPSBwcmV2LmluZGVudDtcblxuICAgICAgICAgIGlmIChuIDwgbCkge1xuICAgICAgICAgICAgd2hpbGUgKCsrbiA8IGwpIHtcbiAgICAgICAgICAgICAgY29tYmluZWQucHVzaCgob2Zmc2V0W25dIHx8IDApICsgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbWJpbmVkLnB1c2goYmVmb3JlLmNvbHVtbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaW5kZW50ID0gY29tYmluZWQuY29uY2F0KGluZGVudCk7XG4gICAgICAgIH1cblxuICAgICAgICBub2RlLnBvc2l0aW9uLmluZGVudCA9IGluZGVudCB8fCBbXTtcblxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBBZGQgYG5vZGVgIHRvIGBwYXJlbnRgcyBjaGlsZHJlbiBvciB0byBgdG9rZW5zYC5cbiAgICAgKiBQZXJmb3JtcyBtZXJnZXMgd2hlcmUgcG9zc2libGUuICovXG4gICAgZnVuY3Rpb24gYWRkKG5vZGUsIHBhcmVudCkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gcGFyZW50ID8gcGFyZW50LmNoaWxkcmVuIDogdG9rZW5zO1xuICAgICAgdmFyIHByZXYgPSBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXTtcblxuICAgICAgaWYgKFxuICAgICAgICBwcmV2ICYmXG4gICAgICAgIG5vZGUudHlwZSA9PT0gcHJldi50eXBlICYmXG4gICAgICAgIG5vZGUudHlwZSBpbiBNRVJHRUFCTEVfTk9ERVMgJiZcbiAgICAgICAgbWVyZ2VhYmxlKHByZXYpICYmXG4gICAgICAgIG1lcmdlYWJsZShub2RlKVxuICAgICAgKSB7XG4gICAgICAgIG5vZGUgPSBNRVJHRUFCTEVfTk9ERVNbbm9kZS50eXBlXS5jYWxsKHNlbGYsIHByZXYsIG5vZGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZSAhPT0gcHJldikge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKG5vZGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2VsZi5hdFN0YXJ0ICYmIHRva2Vucy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgc2VsZi5leGl0U3RhcnQoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgLyogUmVtb3ZlIGBzdWJ2YWx1ZWAgZnJvbSBgdmFsdWVgLlxuICAgICAqIGBzdWJ2YWx1ZWAgbXVzdCBiZSBhdCB0aGUgc3RhcnQgb2YgYHZhbHVlYC4gKi9cbiAgICBmdW5jdGlvbiBlYXQoc3VidmFsdWUpIHtcbiAgICAgIHZhciBpbmRlbnQgPSBnZXRPZmZzZXQoKTtcbiAgICAgIHZhciBwb3MgPSBwb3NpdGlvbigpO1xuICAgICAgdmFyIGN1cnJlbnQgPSBub3coKTtcblxuICAgICAgdmFsaWRhdGVFYXQoc3VidmFsdWUpO1xuXG4gICAgICBhcHBseS5yZXNldCA9IHJlc2V0O1xuICAgICAgcmVzZXQudGVzdCA9IHRlc3Q7XG4gICAgICBhcHBseS50ZXN0ID0gdGVzdDtcblxuICAgICAgdmFsdWUgPSB2YWx1ZS5zdWJzdHJpbmcoc3VidmFsdWUubGVuZ3RoKTtcblxuICAgICAgdXBkYXRlUG9zaXRpb24oc3VidmFsdWUpO1xuXG4gICAgICBpbmRlbnQgPSBpbmRlbnQoKTtcblxuICAgICAgcmV0dXJuIGFwcGx5O1xuXG4gICAgICAvKiBBZGQgdGhlIGdpdmVuIGFyZ3VtZW50cywgYWRkIGBwb3NpdGlvbmAgdG9cbiAgICAgICAqIHRoZSByZXR1cm5lZCBub2RlLCBhbmQgcmV0dXJuIHRoZSBub2RlLiAqL1xuICAgICAgZnVuY3Rpb24gYXBwbHkobm9kZSwgcGFyZW50KSB7XG4gICAgICAgIHJldHVybiBwb3MoYWRkKHBvcyhub2RlKSwgcGFyZW50KSwgaW5kZW50KTtcbiAgICAgIH1cblxuICAgICAgLyogRnVuY3Rpb25zIGp1c3QgbGlrZSBhcHBseSwgYnV0IHJlc2V0cyB0aGVcbiAgICAgICAqIGNvbnRlbnQ6ICB0aGUgbGluZSBhbmQgY29sdW1uIGFyZSByZXZlcnNlZCxcbiAgICAgICAqIGFuZCB0aGUgZWF0ZW4gdmFsdWUgaXMgcmUtYWRkZWQuXG4gICAgICAgKiBUaGlzIGlzIHVzZWZ1bCBmb3Igbm9kZXMgd2l0aCBhIHNpbmdsZVxuICAgICAgICogdHlwZSBvZiBjb250ZW50LCBzdWNoIGFzIGxpc3RzIGFuZCB0YWJsZXMuXG4gICAgICAgKiBTZWUgYGFwcGx5YCBhYm92ZSBmb3Igd2hhdCBwYXJhbWV0ZXJzIGFyZVxuICAgICAgICogZXhwZWN0ZWQuICovXG4gICAgICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgICAgdmFyIG5vZGUgPSBhcHBseS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuXG4gICAgICAgIGxpbmUgPSBjdXJyZW50LmxpbmU7XG4gICAgICAgIGNvbHVtbiA9IGN1cnJlbnQuY29sdW1uO1xuICAgICAgICB2YWx1ZSA9IHN1YnZhbHVlICsgdmFsdWU7XG5cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9XG5cbiAgICAgIC8qIFRlc3QgdGhlIHBvc2l0aW9uLCBhZnRlciBlYXRpbmcsIGFuZCByZXZlcnNlXG4gICAgICAgKiB0byBhIG5vdC1lYXRlbiBzdGF0ZS4gKi9cbiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBwb3Moe30pO1xuXG4gICAgICAgIGxpbmUgPSBjdXJyZW50LmxpbmU7XG4gICAgICAgIGNvbHVtbiA9IGN1cnJlbnQuY29sdW1uO1xuICAgICAgICB2YWx1ZSA9IHN1YnZhbHVlICsgdmFsdWU7XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdC5wb3NpdGlvbjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHh0ZW5kID0gcmVxdWlyZSgneHRlbmQnKTtcbnZhciBlc2NhcGVzID0gcmVxdWlyZSgnbWFya2Rvd24tZXNjYXBlcycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNldE9wdGlvbnM7XG5cbmZ1bmN0aW9uIHNldE9wdGlvbnMob3B0aW9ucykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBjdXJyZW50ID0gc2VsZi5vcHRpb25zO1xuICB2YXIga2V5O1xuICB2YXIgdmFsdWU7XG5cbiAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcpIHtcbiAgICBvcHRpb25zID0geHRlbmQob3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0ludmFsaWQgdmFsdWUgYCcgKyBvcHRpb25zICsgJ2AgJyArXG4gICAgICAnZm9yIHNldHRpbmcgYG9wdGlvbnNgJ1xuICAgICk7XG4gIH1cblxuICBmb3IgKGtleSBpbiBkZWZhdWx0cykge1xuICAgIHZhbHVlID0gb3B0aW9uc1trZXldO1xuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHZhbHVlID0gY3VycmVudFtrZXldO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIChrZXkgIT09ICdibG9ja3MnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ2Jvb2xlYW4nKSB8fFxuICAgICAgKGtleSA9PT0gJ2Jsb2NrcycgJiYgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JylcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB2YWx1ZSBgJyArIHZhbHVlICsgJ2AgZm9yIHNldHRpbmcgYG9wdGlvbnMuJyArIGtleSArICdgJyk7XG4gICAgfVxuXG4gICAgb3B0aW9uc1trZXldID0gdmFsdWU7XG4gIH1cblxuICBzZWxmLm9wdGlvbnMgPSBvcHRpb25zO1xuICBzZWxmLmVzY2FwZSA9IGVzY2FwZXMob3B0aW9ucyk7XG5cbiAgcmV0dXJuIHNlbGY7XG59XG4iLCIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBlc2NhcGVzXG5cbnZhciBkZWZhdWx0cyA9IFtcbiAgJ1xcXFwnLFxuICAnYCcsXG4gICcqJyxcbiAgJ3snLFxuICAnfScsXG4gICdbJyxcbiAgJ10nLFxuICAnKCcsXG4gICcpJyxcbiAgJyMnLFxuICAnKycsXG4gICctJyxcbiAgJy4nLFxuICAnIScsXG4gICdfJyxcbiAgJz4nXG5dXG5cbnZhciBnZm0gPSBkZWZhdWx0cy5jb25jYXQoWyd+JywgJ3wnXSlcblxudmFyIGNvbW1vbm1hcmsgPSBnZm0uY29uY2F0KFtcbiAgJ1xcbicsXG4gICdcIicsXG4gICckJyxcbiAgJyUnLFxuICAnJicsXG4gIFwiJ1wiLFxuICAnLCcsXG4gICcvJyxcbiAgJzonLFxuICAnOycsXG4gICc8JyxcbiAgJz0nLFxuICAnPycsXG4gICdAJyxcbiAgJ14nXG5dKVxuXG5lc2NhcGVzLmRlZmF1bHQgPSBkZWZhdWx0c1xuZXNjYXBlcy5nZm0gPSBnZm1cbmVzY2FwZXMuY29tbW9ubWFyayA9IGNvbW1vbm1hcmtcblxuLy8gR2V0IG1hcmtkb3duIGVzY2FwZXMuXG5mdW5jdGlvbiBlc2NhcGVzKG9wdGlvbnMpIHtcbiAgdmFyIHNldHRpbmdzID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChzZXR0aW5ncy5jb21tb25tYXJrKSB7XG4gICAgcmV0dXJuIGNvbW1vbm1hcmtcbiAgfVxuXG4gIHJldHVybiBzZXR0aW5ncy5nZm0gPyBnZm0gOiBkZWZhdWx0c1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgeHRlbmQgPSByZXF1aXJlKCd4dGVuZCcpO1xudmFyIHJlbW92ZVBvc2l0aW9uID0gcmVxdWlyZSgndW5pc3QtdXRpbC1yZW1vdmUtcG9zaXRpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZTtcblxudmFyIENfTkVXTElORSA9ICdcXG4nO1xudmFyIEVYUFJFU1NJT05fTElORV9CUkVBS1MgPSAvXFxyXFxufFxcci9nO1xuXG4vKiBQYXJzZSB0aGUgYm91bmQgZmlsZS4gKi9cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciB2YWx1ZSA9IFN0cmluZyhzZWxmLmZpbGUpO1xuICB2YXIgc3RhcnQgPSB7bGluZTogMSwgY29sdW1uOiAxLCBvZmZzZXQ6IDB9O1xuICB2YXIgY29udGVudCA9IHh0ZW5kKHN0YXJ0KTtcbiAgdmFyIG5vZGU7XG5cbiAgLyogQ2xlYW4gbm9uLXVuaXggbmV3bGluZXM6IGBcXHJcXG5gIGFuZCBgXFxyYCBhcmUgYWxsXG4gICAqIGNoYW5nZWQgdG8gYFxcbmAuICBUaGlzIHNob3VsZCBub3QgYWZmZWN0IHBvc2l0aW9uYWxcbiAgICogaW5mb3JtYXRpb24uICovXG4gIHZhbHVlID0gdmFsdWUucmVwbGFjZShFWFBSRVNTSU9OX0xJTkVfQlJFQUtTLCBDX05FV0xJTkUpO1xuXG4gIGlmICh2YWx1ZS5jaGFyQ29kZUF0KDApID09PSAweEZFRkYpIHtcbiAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDEpO1xuXG4gICAgY29udGVudC5jb2x1bW4rKztcbiAgICBjb250ZW50Lm9mZnNldCsrO1xuICB9XG5cbiAgbm9kZSA9IHtcbiAgICB0eXBlOiAncm9vdCcsXG4gICAgY2hpbGRyZW46IHNlbGYudG9rZW5pemVCbG9jayh2YWx1ZSwgY29udGVudCksXG4gICAgcG9zaXRpb246IHtcbiAgICAgIHN0YXJ0OiBzdGFydCxcbiAgICAgIGVuZDogc2VsZi5lb2YgfHwgeHRlbmQoc3RhcnQpXG4gICAgfVxuICB9O1xuXG4gIGlmICghc2VsZi5vcHRpb25zLnBvc2l0aW9uKSB7XG4gICAgcmVtb3ZlUG9zaXRpb24obm9kZSwgdHJ1ZSk7XG4gIH1cblxuICByZXR1cm4gbm9kZTtcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG52YXIgdmlzaXQgPSByZXF1aXJlKCd1bmlzdC11dGlsLXZpc2l0JylcblxubW9kdWxlLmV4cG9ydHMgPSByZW1vdmVQb3NpdGlvblxuXG5mdW5jdGlvbiByZW1vdmVQb3NpdGlvbihub2RlLCBmb3JjZSkge1xuICB2aXNpdChub2RlLCBmb3JjZSA/IGhhcmQgOiBzb2Z0KVxuICByZXR1cm4gbm9kZVxufVxuXG5mdW5jdGlvbiBoYXJkKG5vZGUpIHtcbiAgZGVsZXRlIG5vZGUucG9zaXRpb25cbn1cblxuZnVuY3Rpb24gc29mdChub2RlKSB7XG4gIG5vZGUucG9zaXRpb24gPSB1bmRlZmluZWRcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZpc2l0UGFyZW50c1xuXG52YXIgY29udmVydCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtaXMvY29udmVydCcpXG5cbnZhciBDT05USU5VRSA9IHRydWVcbnZhciBTS0lQID0gJ3NraXAnXG52YXIgRVhJVCA9IGZhbHNlXG5cbnZpc2l0UGFyZW50cy5DT05USU5VRSA9IENPTlRJTlVFXG52aXNpdFBhcmVudHMuU0tJUCA9IFNLSVBcbnZpc2l0UGFyZW50cy5FWElUID0gRVhJVFxuXG5mdW5jdGlvbiB2aXNpdFBhcmVudHModHJlZSwgdGVzdCwgdmlzaXRvciwgcmV2ZXJzZSkge1xuICB2YXIgaXNcblxuICBpZiAodHlwZW9mIHRlc3QgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZpc2l0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXZlcnNlID0gdmlzaXRvclxuICAgIHZpc2l0b3IgPSB0ZXN0XG4gICAgdGVzdCA9IG51bGxcbiAgfVxuXG4gIGlzID0gY29udmVydCh0ZXN0KVxuXG4gIG9uZSh0cmVlLCBudWxsLCBbXSlcblxuICAvLyBWaXNpdCBhIHNpbmdsZSBub2RlLlxuICBmdW5jdGlvbiBvbmUobm9kZSwgaW5kZXgsIHBhcmVudHMpIHtcbiAgICB2YXIgcmVzdWx0ID0gW11cbiAgICB2YXIgc3VicmVzdWx0XG5cbiAgICBpZiAoIXRlc3QgfHwgaXMobm9kZSwgaW5kZXgsIHBhcmVudHNbcGFyZW50cy5sZW5ndGggLSAxXSB8fCBudWxsKSkge1xuICAgICAgcmVzdWx0ID0gdG9SZXN1bHQodmlzaXRvcihub2RlLCBwYXJlbnRzKSlcblxuICAgICAgaWYgKHJlc3VsdFswXSA9PT0gRVhJVCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG5vZGUuY2hpbGRyZW4gJiYgcmVzdWx0WzBdICE9PSBTS0lQKSB7XG4gICAgICBzdWJyZXN1bHQgPSB0b1Jlc3VsdChhbGwobm9kZS5jaGlsZHJlbiwgcGFyZW50cy5jb25jYXQobm9kZSkpKVxuICAgICAgcmV0dXJuIHN1YnJlc3VsdFswXSA9PT0gRVhJVCA/IHN1YnJlc3VsdCA6IHJlc3VsdFxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8vIFZpc2l0IGNoaWxkcmVuIGluIGBwYXJlbnRgLlxuICBmdW5jdGlvbiBhbGwoY2hpbGRyZW4sIHBhcmVudHMpIHtcbiAgICB2YXIgbWluID0gLTFcbiAgICB2YXIgc3RlcCA9IHJldmVyc2UgPyAtMSA6IDFcbiAgICB2YXIgaW5kZXggPSAocmV2ZXJzZSA/IGNoaWxkcmVuLmxlbmd0aCA6IG1pbikgKyBzdGVwXG4gICAgdmFyIHJlc3VsdFxuXG4gICAgd2hpbGUgKGluZGV4ID4gbWluICYmIGluZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICByZXN1bHQgPSBvbmUoY2hpbGRyZW5baW5kZXhdLCBpbmRleCwgcGFyZW50cylcblxuICAgICAgaWYgKHJlc3VsdFswXSA9PT0gRVhJVCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICB9XG5cbiAgICAgIGluZGV4ID0gdHlwZW9mIHJlc3VsdFsxXSA9PT0gJ251bWJlcicgPyByZXN1bHRbMV0gOiBpbmRleCArIHN0ZXBcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9SZXN1bHQodmFsdWUpIHtcbiAgaWYgKHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gdmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIFtDT05USU5VRSwgdmFsdWVdXG4gIH1cblxuICByZXR1cm4gW3ZhbHVlXVxufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydFxuXG5mdW5jdGlvbiBjb252ZXJ0KHRlc3QpIHtcbiAgaWYgKHR5cGVvZiB0ZXN0ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB0eXBlRmFjdG9yeSh0ZXN0KVxuICB9XG5cbiAgaWYgKHRlc3QgPT09IG51bGwgfHwgdGVzdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG9rXG4gIH1cblxuICBpZiAodHlwZW9mIHRlc3QgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuICgnbGVuZ3RoJyBpbiB0ZXN0ID8gYW55RmFjdG9yeSA6IG1hdGNoZXNGYWN0b3J5KSh0ZXN0KVxuICB9XG5cbiAgaWYgKHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRlc3RcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZnVuY3Rpb24sIHN0cmluZywgb3Igb2JqZWN0IGFzIHRlc3QnKVxufVxuXG5mdW5jdGlvbiBjb252ZXJ0QWxsKHRlc3RzKSB7XG4gIHZhciByZXN1bHRzID0gW11cbiAgdmFyIGxlbmd0aCA9IHRlc3RzLmxlbmd0aFxuICB2YXIgaW5kZXggPSAtMVxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0c1tpbmRleF0gPSBjb252ZXJ0KHRlc3RzW2luZGV4XSlcbiAgfVxuXG4gIHJldHVybiByZXN1bHRzXG59XG5cbi8vIFV0aWxpdHkgYXNzZXJ0IGVhY2ggcHJvcGVydHkgaW4gYHRlc3RgIGlzIHJlcHJlc2VudGVkIGluIGBub2RlYCwgYW5kIGVhY2hcbi8vIHZhbHVlcyBhcmUgc3RyaWN0bHkgZXF1YWwuXG5mdW5jdGlvbiBtYXRjaGVzRmFjdG9yeSh0ZXN0KSB7XG4gIHJldHVybiBtYXRjaGVzXG5cbiAgZnVuY3Rpb24gbWF0Y2hlcyhub2RlKSB7XG4gICAgdmFyIGtleVxuXG4gICAgZm9yIChrZXkgaW4gdGVzdCkge1xuICAgICAgaWYgKG5vZGVba2V5XSAhPT0gdGVzdFtrZXldKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlXG4gIH1cbn1cblxuZnVuY3Rpb24gYW55RmFjdG9yeSh0ZXN0cykge1xuICB2YXIgY2hlY2tzID0gY29udmVydEFsbCh0ZXN0cylcbiAgdmFyIGxlbmd0aCA9IGNoZWNrcy5sZW5ndGhcblxuICByZXR1cm4gbWF0Y2hlc1xuXG4gIGZ1bmN0aW9uIG1hdGNoZXMoKSB7XG4gICAgdmFyIGluZGV4ID0gLTFcblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBpZiAoY2hlY2tzW2luZGV4XS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLy8gVXRpbGl0eSB0byBjb252ZXJ0IGEgc3RyaW5nIGludG8gYSBmdW5jdGlvbiB3aGljaCBjaGVja3MgYSBnaXZlbiBub2Rl4oCZcyB0eXBlXG4vLyBmb3Igc2FpZCBzdHJpbmcuXG5mdW5jdGlvbiB0eXBlRmFjdG9yeSh0ZXN0KSB7XG4gIHJldHVybiB0eXBlXG5cbiAgZnVuY3Rpb24gdHlwZShub2RlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4obm9kZSAmJiBub2RlLnR5cGUgPT09IHRlc3QpXG4gIH1cbn1cblxuLy8gVXRpbGl0eSB0byByZXR1cm4gdHJ1ZS5cbmZ1bmN0aW9uIG9rKCkge1xuICByZXR1cm4gdHJ1ZVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgd2hpdGVzcGFjZSA9IHJlcXVpcmUoJ2lzLXdoaXRlc3BhY2UtY2hhcmFjdGVyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3bGluZTtcblxuLyogVG9rZW5pc2UgbmV3bGluZS4gKi9cbmZ1bmN0aW9uIG5ld2xpbmUoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoMCk7XG4gIHZhciBsZW5ndGg7XG4gIHZhciBzdWJ2YWx1ZTtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgaW5kZXg7XG5cbiAgaWYgKGNoYXJhY3RlciAhPT0gJ1xcbicpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgLSBuZXZlciB1c2VkICh5ZXQpICovXG4gIGlmIChzaWxlbnQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGluZGV4ID0gMTtcbiAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICBzdWJ2YWx1ZSA9IGNoYXJhY3RlcjtcbiAgcXVldWUgPSAnJztcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKCF3aGl0ZXNwYWNlKGNoYXJhY3RlcikpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09ICdcXG4nKSB7XG4gICAgICBzdWJ2YWx1ZSArPSBxdWV1ZTtcbiAgICAgIHF1ZXVlID0gJyc7XG4gICAgfVxuXG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGVhdChzdWJ2YWx1ZSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciByZXBlYXQgPSByZXF1aXJlKCdyZXBlYXQtc3RyaW5nJyk7XG52YXIgdHJpbSA9IHJlcXVpcmUoJ3RyaW0tdHJhaWxpbmctbGluZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbmRlbnRlZENvZGU7XG5cbnZhciBDX05FV0xJTkUgPSAnXFxuJztcbnZhciBDX1RBQiA9ICdcXHQnO1xudmFyIENfU1BBQ0UgPSAnICc7XG5cbnZhciBDT0RFX0lOREVOVF9DT1VOVCA9IDQ7XG52YXIgQ09ERV9JTkRFTlQgPSByZXBlYXQoQ19TUEFDRSwgQ09ERV9JTkRFTlRfQ09VTlQpO1xuXG4vKiBUb2tlbmlzZSBpbmRlbnRlZCBjb2RlLiAqL1xuZnVuY3Rpb24gaW5kZW50ZWRDb2RlKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgaW5kZXggPSAtMTtcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcbiAgdmFyIHN1YnZhbHVlID0gJyc7XG4gIHZhciBjb250ZW50ID0gJyc7XG4gIHZhciBzdWJ2YWx1ZVF1ZXVlID0gJyc7XG4gIHZhciBjb250ZW50UXVldWUgPSAnJztcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIGJsYW5rUXVldWU7XG4gIHZhciBpbmRlbnQ7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGluZGVudCkge1xuICAgICAgaW5kZW50ID0gZmFsc2U7XG5cbiAgICAgIHN1YnZhbHVlICs9IHN1YnZhbHVlUXVldWU7XG4gICAgICBjb250ZW50ICs9IGNvbnRlbnRRdWV1ZTtcbiAgICAgIHN1YnZhbHVlUXVldWUgPSAnJztcbiAgICAgIGNvbnRlbnRRdWV1ZSA9ICcnO1xuXG4gICAgICBpZiAoY2hhcmFjdGVyID09PSBDX05FV0xJTkUpIHtcbiAgICAgICAgc3VidmFsdWVRdWV1ZSA9IGNoYXJhY3RlcjtcbiAgICAgICAgY29udGVudFF1ZXVlID0gY2hhcmFjdGVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgICAgICBjb250ZW50ICs9IGNoYXJhY3RlcjtcblxuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgICAgICBpZiAoIWNoYXJhY3RlciB8fCBjaGFyYWN0ZXIgPT09IENfTkVXTElORSkge1xuICAgICAgICAgICAgY29udGVudFF1ZXVlID0gY2hhcmFjdGVyO1xuICAgICAgICAgICAgc3VidmFsdWVRdWV1ZSA9IGNoYXJhY3RlcjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcbiAgICAgICAgICBjb250ZW50ICs9IGNoYXJhY3RlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBjaGFyYWN0ZXIgPT09IENfU1BBQ0UgJiZcbiAgICAgIHZhbHVlLmNoYXJBdChpbmRleCArIDEpID09PSBjaGFyYWN0ZXIgJiZcbiAgICAgIHZhbHVlLmNoYXJBdChpbmRleCArIDIpID09PSBjaGFyYWN0ZXIgJiZcbiAgICAgIHZhbHVlLmNoYXJBdChpbmRleCArIDMpID09PSBjaGFyYWN0ZXJcbiAgICApIHtcbiAgICAgIHN1YnZhbHVlUXVldWUgKz0gQ09ERV9JTkRFTlQ7XG4gICAgICBpbmRleCArPSAzO1xuICAgICAgaW5kZW50ID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gQ19UQUIpIHtcbiAgICAgIHN1YnZhbHVlUXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgaW5kZW50ID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgYmxhbmtRdWV1ZSA9ICcnO1xuXG4gICAgICB3aGlsZSAoY2hhcmFjdGVyID09PSBDX1RBQiB8fCBjaGFyYWN0ZXIgPT09IENfU1BBQ0UpIHtcbiAgICAgICAgYmxhbmtRdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgrK2luZGV4KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNoYXJhY3RlciAhPT0gQ19ORVdMSU5FKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBzdWJ2YWx1ZVF1ZXVlICs9IGJsYW5rUXVldWUgKyBjaGFyYWN0ZXI7XG4gICAgICBjb250ZW50UXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIH1cbiAgfVxuXG4gIGlmIChjb250ZW50KSB7XG4gICAgaWYgKHNpbGVudCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe1xuICAgICAgdHlwZTogJ2NvZGUnLFxuICAgICAgbGFuZzogbnVsbCxcbiAgICAgIHZhbHVlOiB0cmltKGNvbnRlbnQpXG4gICAgfSk7XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHRyaW0gPSByZXF1aXJlKCd0cmltLXRyYWlsaW5nLWxpbmVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZmVuY2VkQ29kZTtcblxudmFyIENfTkVXTElORSA9ICdcXG4nO1xudmFyIENfVEFCID0gJ1xcdCc7XG52YXIgQ19TUEFDRSA9ICcgJztcbnZhciBDX1RJTERFID0gJ34nO1xudmFyIENfVElDSyA9ICdgJztcblxudmFyIE1JTl9GRU5DRV9DT1VOVCA9IDM7XG52YXIgQ09ERV9JTkRFTlRfQ09VTlQgPSA0O1xuXG5mdW5jdGlvbiBmZW5jZWRDb2RlKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzZXR0aW5ncyA9IHNlbGYub3B0aW9ucztcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aCArIDE7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBzdWJ2YWx1ZSA9ICcnO1xuICB2YXIgZmVuY2VDb3VudDtcbiAgdmFyIG1hcmtlcjtcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIGZsYWc7XG4gIHZhciBxdWV1ZTtcbiAgdmFyIGNvbnRlbnQ7XG4gIHZhciBleGRlbnRlZENvbnRlbnQ7XG4gIHZhciBjbG9zaW5nO1xuICB2YXIgZXhkZW50ZWRDbG9zaW5nO1xuICB2YXIgaW5kZW50O1xuICB2YXIgbm93O1xuXG4gIGlmICghc2V0dGluZ3MuZ2ZtKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyogRWF0IGluaXRpYWwgc3BhY2luZy4gKi9cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiYgY2hhcmFjdGVyICE9PSBDX1RBQikge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBpbmRlbnQgPSBpbmRleDtcblxuICAvKiBFYXQgdGhlIGZlbmNlLiAqL1xuICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gIGlmIChjaGFyYWN0ZXIgIT09IENfVElMREUgJiYgY2hhcmFjdGVyICE9PSBDX1RJQ0spIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpbmRleCsrO1xuICBtYXJrZXIgPSBjaGFyYWN0ZXI7XG4gIGZlbmNlQ291bnQgPSAxO1xuICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IG1hcmtlcikge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIGZlbmNlQ291bnQrKztcbiAgICBpbmRleCsrO1xuICB9XG5cbiAgaWYgKGZlbmNlQ291bnQgPCBNSU5fRkVOQ0VfQ09VTlQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKiBFYXQgc3BhY2luZyBiZWZvcmUgZmxhZy4gKi9cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiYgY2hhcmFjdGVyICE9PSBDX1RBQikge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICAvKiBFYXQgZmxhZy4gKi9cbiAgZmxhZyA9ICcnO1xuICBxdWV1ZSA9ICcnO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoXG4gICAgICBjaGFyYWN0ZXIgPT09IENfTkVXTElORSB8fFxuICAgICAgY2hhcmFjdGVyID09PSBDX1RJTERFIHx8XG4gICAgICBjaGFyYWN0ZXIgPT09IENfVElDS1xuICAgICkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gQ19TUEFDRSB8fCBjaGFyYWN0ZXIgPT09IENfVEFCKSB7XG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZsYWcgKz0gcXVldWUgKyBjaGFyYWN0ZXI7XG4gICAgICBxdWV1ZSA9ICcnO1xuICAgIH1cblxuICAgIGluZGV4Kys7XG4gIH1cblxuICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gIGlmIChjaGFyYWN0ZXIgJiYgY2hhcmFjdGVyICE9PSBDX05FV0xJTkUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBub3cgPSBlYXQubm93KCk7XG4gIG5vdy5jb2x1bW4gKz0gc3VidmFsdWUubGVuZ3RoO1xuICBub3cub2Zmc2V0ICs9IHN1YnZhbHVlLmxlbmd0aDtcblxuICBzdWJ2YWx1ZSArPSBmbGFnO1xuICBmbGFnID0gc2VsZi5kZWNvZGUucmF3KHNlbGYudW5lc2NhcGUoZmxhZyksIG5vdyk7XG5cbiAgaWYgKHF1ZXVlKSB7XG4gICAgc3VidmFsdWUgKz0gcXVldWU7XG4gIH1cblxuICBxdWV1ZSA9ICcnO1xuICBjbG9zaW5nID0gJyc7XG4gIGV4ZGVudGVkQ2xvc2luZyA9ICcnO1xuICBjb250ZW50ID0gJyc7XG4gIGV4ZGVudGVkQ29udGVudCA9ICcnO1xuXG4gIC8qIEVhdCBjb250ZW50LiAqL1xuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICAgIGNvbnRlbnQgKz0gY2xvc2luZztcbiAgICBleGRlbnRlZENvbnRlbnQgKz0gZXhkZW50ZWRDbG9zaW5nO1xuICAgIGNsb3NpbmcgPSAnJztcbiAgICBleGRlbnRlZENsb3NpbmcgPSAnJztcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IENfTkVXTElORSkge1xuICAgICAgY29udGVudCArPSBjaGFyYWN0ZXI7XG4gICAgICBleGRlbnRlZENsb3NpbmcgKz0gY2hhcmFjdGVyO1xuICAgICAgaW5kZXgrKztcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8qIEFkZCB0aGUgbmV3bGluZSB0byBgc3VidmFsdWVgIGlmIGl0cyB0aGUgZmlyc3RcbiAgICAgKiBjaGFyYWN0ZXIuICBPdGhlcndpc2UsIGFkZCBpdCB0byB0aGUgYGNsb3NpbmdgXG4gICAgICogcXVldWUuICovXG4gICAgaWYgKGNvbnRlbnQpIHtcbiAgICAgIGNsb3NpbmcgKz0gY2hhcmFjdGVyO1xuICAgICAgZXhkZW50ZWRDbG9zaW5nICs9IGNoYXJhY3RlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIH1cblxuICAgIHF1ZXVlID0gJyc7XG4gICAgaW5kZXgrKztcblxuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgaWYgKGNoYXJhY3RlciAhPT0gQ19TUEFDRSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICBjbG9zaW5nICs9IHF1ZXVlO1xuICAgIGV4ZGVudGVkQ2xvc2luZyArPSBxdWV1ZS5zbGljZShpbmRlbnQpO1xuXG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA+PSBDT0RFX0lOREVOVF9DT1VOVCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgcXVldWUgPSAnJztcblxuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgaWYgKGNoYXJhY3RlciAhPT0gbWFya2VyKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIGNsb3NpbmcgKz0gcXVldWU7XG4gICAgZXhkZW50ZWRDbG9zaW5nICs9IHF1ZXVlO1xuXG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA8IGZlbmNlQ291bnQpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHF1ZXVlID0gJyc7XG5cbiAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiYgY2hhcmFjdGVyICE9PSBDX1RBQikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgY2xvc2luZyArPSBjaGFyYWN0ZXI7XG4gICAgICBleGRlbnRlZENsb3NpbmcgKz0gY2hhcmFjdGVyO1xuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICBpZiAoIWNoYXJhY3RlciB8fCBjaGFyYWN0ZXIgPT09IENfTkVXTElORSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgc3VidmFsdWUgKz0gY29udGVudCArIGNsb3Npbmc7XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe1xuICAgIHR5cGU6ICdjb2RlJyxcbiAgICBsYW5nOiBmbGFnIHx8IG51bGwsXG4gICAgdmFsdWU6IHRyaW0oZXhkZW50ZWRDb250ZW50KVxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHRyaW0gPSByZXF1aXJlKCd0cmltJyk7XG52YXIgaW50ZXJydXB0ID0gcmVxdWlyZSgnLi4vdXRpbC9pbnRlcnJ1cHQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBibG9ja3F1b3RlO1xuXG52YXIgQ19ORVdMSU5FID0gJ1xcbic7XG52YXIgQ19UQUIgPSAnXFx0JztcbnZhciBDX1NQQUNFID0gJyAnO1xudmFyIENfR1QgPSAnPic7XG5cbi8qIFRva2VuaXNlIGEgYmxvY2txdW90ZS4gKi9cbmZ1bmN0aW9uIGJsb2NrcXVvdGUoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIG9mZnNldHMgPSBzZWxmLm9mZnNldDtcbiAgdmFyIHRva2VuaXplcnMgPSBzZWxmLmJsb2NrVG9rZW5pemVycztcbiAgdmFyIGludGVycnVwdG9ycyA9IHNlbGYuaW50ZXJydXB0QmxvY2txdW90ZTtcbiAgdmFyIG5vdyA9IGVhdC5ub3coKTtcbiAgdmFyIGN1cnJlbnRMaW5lID0gbm93LmxpbmU7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciB2YWx1ZXMgPSBbXTtcbiAgdmFyIGNvbnRlbnRzID0gW107XG4gIHZhciBpbmRlbnRzID0gW107XG4gIHZhciBhZGQ7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciByZXN0O1xuICB2YXIgbmV4dEluZGV4O1xuICB2YXIgY29udGVudDtcbiAgdmFyIGxpbmU7XG4gIHZhciBzdGFydEluZGV4O1xuICB2YXIgcHJlZml4ZWQ7XG4gIHZhciBleGl0O1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyICE9PSBDX1NQQUNFICYmIGNoYXJhY3RlciAhPT0gQ19UQUIpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGluZGV4Kys7XG4gIH1cblxuICBpZiAodmFsdWUuY2hhckF0KGluZGV4KSAhPT0gQ19HVCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChzaWxlbnQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGluZGV4ID0gMDtcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBuZXh0SW5kZXggPSB2YWx1ZS5pbmRleE9mKENfTkVXTElORSwgaW5kZXgpO1xuICAgIHN0YXJ0SW5kZXggPSBpbmRleDtcbiAgICBwcmVmaXhlZCA9IGZhbHNlO1xuXG4gICAgaWYgKG5leHRJbmRleCA9PT0gLTEpIHtcbiAgICAgIG5leHRJbmRleCA9IGxlbmd0aDtcbiAgICB9XG5cbiAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiYgY2hhcmFjdGVyICE9PSBDX1RBQikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICBpZiAodmFsdWUuY2hhckF0KGluZGV4KSA9PT0gQ19HVCkge1xuICAgICAgaW5kZXgrKztcbiAgICAgIHByZWZpeGVkID0gdHJ1ZTtcblxuICAgICAgaWYgKHZhbHVlLmNoYXJBdChpbmRleCkgPT09IENfU1BBQ0UpIHtcbiAgICAgICAgaW5kZXgrKztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaW5kZXggPSBzdGFydEluZGV4O1xuICAgIH1cblxuICAgIGNvbnRlbnQgPSB2YWx1ZS5zbGljZShpbmRleCwgbmV4dEluZGV4KTtcblxuICAgIGlmICghcHJlZml4ZWQgJiYgIXRyaW0oY29udGVudCkpIHtcbiAgICAgIGluZGV4ID0gc3RhcnRJbmRleDtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmICghcHJlZml4ZWQpIHtcbiAgICAgIHJlc3QgPSB2YWx1ZS5zbGljZShpbmRleCk7XG5cbiAgICAgIC8qIENoZWNrIGlmIHRoZSBmb2xsb3dpbmcgY29kZSBjb250YWlucyBhIHBvc3NpYmxlXG4gICAgICAgKiBibG9jay4gKi9cbiAgICAgIGlmIChpbnRlcnJ1cHQoaW50ZXJydXB0b3JzLCB0b2tlbml6ZXJzLCBzZWxmLCBbZWF0LCByZXN0LCB0cnVlXSkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGluZSA9IHN0YXJ0SW5kZXggPT09IGluZGV4ID8gY29udGVudCA6IHZhbHVlLnNsaWNlKHN0YXJ0SW5kZXgsIG5leHRJbmRleCk7XG5cbiAgICBpbmRlbnRzLnB1c2goaW5kZXggLSBzdGFydEluZGV4KTtcbiAgICB2YWx1ZXMucHVzaChsaW5lKTtcbiAgICBjb250ZW50cy5wdXNoKGNvbnRlbnQpO1xuXG4gICAgaW5kZXggPSBuZXh0SW5kZXggKyAxO1xuICB9XG5cbiAgaW5kZXggPSAtMTtcbiAgbGVuZ3RoID0gaW5kZW50cy5sZW5ndGg7XG4gIGFkZCA9IGVhdCh2YWx1ZXMuam9pbihDX05FV0xJTkUpKTtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIG9mZnNldHNbY3VycmVudExpbmVdID0gKG9mZnNldHNbY3VycmVudExpbmVdIHx8IDApICsgaW5kZW50c1tpbmRleF07XG4gICAgY3VycmVudExpbmUrKztcbiAgfVxuXG4gIGV4aXQgPSBzZWxmLmVudGVyQmxvY2soKTtcbiAgY29udGVudHMgPSBzZWxmLnRva2VuaXplQmxvY2soY29udGVudHMuam9pbihDX05FV0xJTkUpLCBub3cpO1xuICBleGl0KCk7XG5cbiAgcmV0dXJuIGFkZCh7XG4gICAgdHlwZTogJ2Jsb2NrcXVvdGUnLFxuICAgIGNoaWxkcmVuOiBjb250ZW50c1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBhdHhIZWFkaW5nO1xuXG52YXIgQ19ORVdMSU5FID0gJ1xcbic7XG52YXIgQ19UQUIgPSAnXFx0JztcbnZhciBDX1NQQUNFID0gJyAnO1xudmFyIENfSEFTSCA9ICcjJztcblxudmFyIE1BWF9BVFhfQ09VTlQgPSA2O1xuXG5mdW5jdGlvbiBhdHhIZWFkaW5nKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzZXR0aW5ncyA9IHNlbGYub3B0aW9ucztcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aCArIDE7XG4gIHZhciBpbmRleCA9IC0xO1xuICB2YXIgbm93ID0gZWF0Lm5vdygpO1xuICB2YXIgc3VidmFsdWUgPSAnJztcbiAgdmFyIGNvbnRlbnQgPSAnJztcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgZGVwdGg7XG5cbiAgLyogRWF0IGluaXRpYWwgc3BhY2luZy4gKi9cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19TUEFDRSAmJiBjaGFyYWN0ZXIgIT09IENfVEFCKSB7XG4gICAgICBpbmRleC0tO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICB9XG5cbiAgLyogRWF0IGhhc2hlcy4gKi9cbiAgZGVwdGggPSAwO1xuXG4gIHdoaWxlICgrK2luZGV4IDw9IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyICE9PSBDX0hBU0gpIHtcbiAgICAgIGluZGV4LS07XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gICAgZGVwdGgrKztcbiAgfVxuXG4gIGlmIChkZXB0aCA+IE1BWF9BVFhfQ09VTlQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoXG4gICAgIWRlcHRoIHx8XG4gICAgKCFzZXR0aW5ncy5wZWRhbnRpYyAmJiB2YWx1ZS5jaGFyQXQoaW5kZXggKyAxKSA9PT0gQ19IQVNIKVxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZW5ndGggPSB2YWx1ZS5sZW5ndGggKyAxO1xuXG4gIC8qIEVhdCBpbnRlcm1lZGlhdGUgd2hpdGUtc3BhY2UuICovXG4gIHF1ZXVlID0gJyc7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19TUEFDRSAmJiBjaGFyYWN0ZXIgIT09IENfVEFCKSB7XG4gICAgICBpbmRleC0tO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICB9XG5cbiAgLyogRXhpdCB3aGVuIG5vdCBpbiBwZWRhbnRpYyBtb2RlIHdpdGhvdXQgc3BhY2luZy4gKi9cbiAgaWYgKFxuICAgICFzZXR0aW5ncy5wZWRhbnRpYyAmJlxuICAgIHF1ZXVlLmxlbmd0aCA9PT0gMCAmJlxuICAgIGNoYXJhY3RlciAmJlxuICAgIGNoYXJhY3RlciAhPT0gQ19ORVdMSU5FXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChzaWxlbnQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qIEVhdCBjb250ZW50LiAqL1xuICBzdWJ2YWx1ZSArPSBxdWV1ZTtcbiAgcXVldWUgPSAnJztcbiAgY29udGVudCA9ICcnO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmICghY2hhcmFjdGVyIHx8IGNoYXJhY3RlciA9PT0gQ19ORVdMSU5FKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiZcbiAgICAgIGNoYXJhY3RlciAhPT0gQ19UQUIgJiZcbiAgICAgIGNoYXJhY3RlciAhPT0gQ19IQVNIXG4gICAgKSB7XG4gICAgICBjb250ZW50ICs9IHF1ZXVlICsgY2hhcmFjdGVyO1xuICAgICAgcXVldWUgPSAnJztcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHdoaWxlIChjaGFyYWN0ZXIgPT09IENfU1BBQ0UgfHwgY2hhcmFjdGVyID09PSBDX1RBQikge1xuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICAgIH1cblxuICAgIHdoaWxlIChjaGFyYWN0ZXIgPT09IENfSEFTSCkge1xuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICAgIH1cblxuICAgIHdoaWxlIChjaGFyYWN0ZXIgPT09IENfU1BBQ0UgfHwgY2hhcmFjdGVyID09PSBDX1RBQikge1xuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICAgIH1cblxuICAgIGluZGV4LS07XG4gIH1cblxuICBub3cuY29sdW1uICs9IHN1YnZhbHVlLmxlbmd0aDtcbiAgbm93Lm9mZnNldCArPSBzdWJ2YWx1ZS5sZW5ndGg7XG4gIHN1YnZhbHVlICs9IGNvbnRlbnQgKyBxdWV1ZTtcblxuICByZXR1cm4gZWF0KHN1YnZhbHVlKSh7XG4gICAgdHlwZTogJ2hlYWRpbmcnLFxuICAgIGRlcHRoOiBkZXB0aCxcbiAgICBjaGlsZHJlbjogc2VsZi50b2tlbml6ZUlubGluZShjb250ZW50LCBub3cpXG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRoZW1hdGljQnJlYWs7XG5cbnZhciBDX05FV0xJTkUgPSAnXFxuJztcbnZhciBDX1RBQiA9ICdcXHQnO1xudmFyIENfU1BBQ0UgPSAnICc7XG52YXIgQ19BU1RFUklTSyA9ICcqJztcbnZhciBDX1VOREVSU0NPUkUgPSAnXyc7XG52YXIgQ19EQVNIID0gJy0nO1xuXG52YXIgVEhFTUFUSUNfQlJFQUtfTUFSS0VSX0NPVU5UID0gMztcblxuZnVuY3Rpb24gdGhlbWF0aWNCcmVhayhlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGggKyAxO1xuICB2YXIgc3VidmFsdWUgPSAnJztcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIG1hcmtlcjtcbiAgdmFyIG1hcmtlckNvdW50O1xuICB2YXIgcXVldWU7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19UQUIgJiYgY2hhcmFjdGVyICE9PSBDX1NQQUNFKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gIH1cblxuICBpZiAoXG4gICAgY2hhcmFjdGVyICE9PSBDX0FTVEVSSVNLICYmXG4gICAgY2hhcmFjdGVyICE9PSBDX0RBU0ggJiZcbiAgICBjaGFyYWN0ZXIgIT09IENfVU5ERVJTQ09SRVxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBtYXJrZXIgPSBjaGFyYWN0ZXI7XG4gIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcbiAgbWFya2VyQ291bnQgPSAxO1xuICBxdWV1ZSA9ICcnO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IG1hcmtlcikge1xuICAgICAgbWFya2VyQ291bnQrKztcbiAgICAgIHN1YnZhbHVlICs9IHF1ZXVlICsgbWFya2VyO1xuICAgICAgcXVldWUgPSAnJztcbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gQ19TUEFDRSkge1xuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBtYXJrZXJDb3VudCA+PSBUSEVNQVRJQ19CUkVBS19NQVJLRVJfQ09VTlQgJiZcbiAgICAgICghY2hhcmFjdGVyIHx8IGNoYXJhY3RlciA9PT0gQ19ORVdMSU5FKVxuICAgICkge1xuICAgICAgc3VidmFsdWUgKz0gcXVldWU7XG5cbiAgICAgIGlmIChzaWxlbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBlYXQoc3VidmFsdWUpKHt0eXBlOiAndGhlbWF0aWNCcmVhayd9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtcGFyYW1zICovXG5cbnZhciB0cmltID0gcmVxdWlyZSgndHJpbScpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJ3JlcGVhdC1zdHJpbmcnKTtcbnZhciBkZWNpbWFsID0gcmVxdWlyZSgnaXMtZGVjaW1hbCcpO1xudmFyIGdldEluZGVudCA9IHJlcXVpcmUoJy4uL3V0aWwvZ2V0LWluZGVudGF0aW9uJyk7XG52YXIgcmVtb3ZlSW5kZW50ID0gcmVxdWlyZSgnLi4vdXRpbC9yZW1vdmUtaW5kZW50YXRpb24nKTtcbnZhciBpbnRlcnJ1cHQgPSByZXF1aXJlKCcuLi91dGlsL2ludGVycnVwdCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3Q7XG5cbnZhciBDX0FTVEVSSVNLID0gJyonO1xudmFyIENfVU5ERVJTQ09SRSA9ICdfJztcbnZhciBDX1BMVVMgPSAnKyc7XG52YXIgQ19EQVNIID0gJy0nO1xudmFyIENfRE9UID0gJy4nO1xudmFyIENfU1BBQ0UgPSAnICc7XG52YXIgQ19ORVdMSU5FID0gJ1xcbic7XG52YXIgQ19UQUIgPSAnXFx0JztcbnZhciBDX1BBUkVOX0NMT1NFID0gJyknO1xudmFyIENfWF9MT1dFUiA9ICd4JztcblxudmFyIFRBQl9TSVpFID0gNDtcbnZhciBFWFBSRVNTSU9OX0xPT1NFX0xJU1RfSVRFTSA9IC9cXG5cXG4oPyFcXHMqJCkvO1xudmFyIEVYUFJFU1NJT05fVEFTS19JVEVNID0gL15cXFsoWyBcXHRdfHh8WCldWyBcXHRdLztcbnZhciBFWFBSRVNTSU9OX0JVTExFVCA9IC9eKFsgXFx0XSopKFsqKy1dfFxcZCtbLildKSggezEsNH0oPyEgKXwgfFxcdHwkfCg/PVxcbikpKFteXFxuXSopLztcbnZhciBFWFBSRVNTSU9OX1BFREFOVElDX0JVTExFVCA9IC9eKFsgXFx0XSopKFsqKy1dfFxcZCtbLildKShbIFxcdF0rKS87XG52YXIgRVhQUkVTU0lPTl9JTklUSUFMX0lOREVOVCA9IC9eKCB7MSw0fXxcXHQpPy9nbTtcblxuLyogTWFwIG9mIGNoYXJhY3RlcnMgd2hpY2ggY2FuIGJlIHVzZWQgdG8gbWFya1xuICogbGlzdC1pdGVtcy4gKi9cbnZhciBMSVNUX1VOT1JERVJFRF9NQVJLRVJTID0ge307XG5cbkxJU1RfVU5PUkRFUkVEX01BUktFUlNbQ19BU1RFUklTS10gPSB0cnVlO1xuTElTVF9VTk9SREVSRURfTUFSS0VSU1tDX1BMVVNdID0gdHJ1ZTtcbkxJU1RfVU5PUkRFUkVEX01BUktFUlNbQ19EQVNIXSA9IHRydWU7XG5cbi8qIE1hcCBvZiBjaGFyYWN0ZXJzIHdoaWNoIGNhbiBiZSB1c2VkIHRvIG1hcmtcbiAqIGxpc3QtaXRlbXMgYWZ0ZXIgYSBkaWdpdC4gKi9cbnZhciBMSVNUX09SREVSRURfTUFSS0VSUyA9IHt9O1xuXG5MSVNUX09SREVSRURfTUFSS0VSU1tDX0RPVF0gPSB0cnVlO1xuXG4vKiBNYXAgb2YgY2hhcmFjdGVycyB3aGljaCBjYW4gYmUgdXNlZCB0byBtYXJrXG4gKiBsaXN0LWl0ZW1zIGFmdGVyIGEgZGlnaXQuICovXG52YXIgTElTVF9PUkRFUkVEX0NPTU1PTk1BUktfTUFSS0VSUyA9IHt9O1xuXG5MSVNUX09SREVSRURfQ09NTU9OTUFSS19NQVJLRVJTW0NfRE9UXSA9IHRydWU7XG5MSVNUX09SREVSRURfQ09NTU9OTUFSS19NQVJLRVJTW0NfUEFSRU5fQ0xPU0VdID0gdHJ1ZTtcblxuZnVuY3Rpb24gbGlzdChlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY29tbW9ubWFyayA9IHNlbGYub3B0aW9ucy5jb21tb25tYXJrO1xuICB2YXIgcGVkYW50aWMgPSBzZWxmLm9wdGlvbnMucGVkYW50aWM7XG4gIHZhciB0b2tlbml6ZXJzID0gc2VsZi5ibG9ja1Rva2VuaXplcnM7XG4gIHZhciBpbnRlcnVwdG9ycyA9IHNlbGYuaW50ZXJydXB0TGlzdDtcbiAgdmFyIG1hcmtlcnM7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciBzdGFydCA9IG51bGw7XG4gIHZhciBzaXplID0gMDtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgb3JkZXJlZDtcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIG1hcmtlcjtcbiAgdmFyIG5leHRJbmRleDtcbiAgdmFyIHN0YXJ0SW5kZXg7XG4gIHZhciBwcmVmaXhlZDtcbiAgdmFyIGN1cnJlbnRNYXJrZXI7XG4gIHZhciBjb250ZW50O1xuICB2YXIgbGluZTtcbiAgdmFyIHByZXZFbXB0eTtcbiAgdmFyIGVtcHR5O1xuICB2YXIgaXRlbXM7XG4gIHZhciBhbGxMaW5lcztcbiAgdmFyIGVtcHR5TGluZXM7XG4gIHZhciBpdGVtO1xuICB2YXIgZW50ZXJUb3A7XG4gIHZhciBleGl0QmxvY2txdW90ZTtcbiAgdmFyIGlzTG9vc2U7XG4gIHZhciBub2RlO1xuICB2YXIgbm93O1xuICB2YXIgZW5kO1xuICB2YXIgaW5kZW50ZWQ7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfVEFCKSB7XG4gICAgICBzaXplICs9IFRBQl9TSVpFIC0gKHNpemUgJSBUQUJfU0laRSk7XG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09IENfU1BBQ0UpIHtcbiAgICAgIHNpemUrKztcbiAgICB9IGVsc2Uge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmIChzaXplID49IFRBQl9TSVpFKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICBtYXJrZXJzID0gY29tbW9ubWFyayA/XG4gICAgTElTVF9PUkRFUkVEX0NPTU1PTk1BUktfTUFSS0VSUyA6XG4gICAgTElTVF9PUkRFUkVEX01BUktFUlM7XG5cbiAgaWYgKExJU1RfVU5PUkRFUkVEX01BUktFUlNbY2hhcmFjdGVyXSA9PT0gdHJ1ZSkge1xuICAgIG1hcmtlciA9IGNoYXJhY3RlcjtcbiAgICBvcmRlcmVkID0gZmFsc2U7XG4gIH0gZWxzZSB7XG4gICAgb3JkZXJlZCA9IHRydWU7XG4gICAgcXVldWUgPSAnJztcblxuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgaWYgKCFkZWNpbWFsKGNoYXJhY3RlcikpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG4gICAgfVxuXG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmICghcXVldWUgfHwgbWFya2Vyc1tjaGFyYWN0ZXJdICE9PSB0cnVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3RhcnQgPSBwYXJzZUludChxdWV1ZSwgMTApO1xuICAgIG1hcmtlciA9IGNoYXJhY3RlcjtcbiAgfVxuXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgrK2luZGV4KTtcblxuICBpZiAoY2hhcmFjdGVyICE9PSBDX1NQQUNFICYmIGNoYXJhY3RlciAhPT0gQ19UQUIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpbmRleCA9IDA7XG4gIGl0ZW1zID0gW107XG4gIGFsbExpbmVzID0gW107XG4gIGVtcHR5TGluZXMgPSBbXTtcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBuZXh0SW5kZXggPSB2YWx1ZS5pbmRleE9mKENfTkVXTElORSwgaW5kZXgpO1xuICAgIHN0YXJ0SW5kZXggPSBpbmRleDtcbiAgICBwcmVmaXhlZCA9IGZhbHNlO1xuICAgIGluZGVudGVkID0gZmFsc2U7XG5cbiAgICBpZiAobmV4dEluZGV4ID09PSAtMSkge1xuICAgICAgbmV4dEluZGV4ID0gbGVuZ3RoO1xuICAgIH1cblxuICAgIGVuZCA9IGluZGV4ICsgVEFCX1NJWkU7XG4gICAgc2l6ZSA9IDA7XG5cbiAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgPT09IENfVEFCKSB7XG4gICAgICAgIHNpemUgKz0gVEFCX1NJWkUgLSAoc2l6ZSAlIFRBQl9TSVpFKTtcbiAgICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX1NQQUNFKSB7XG4gICAgICAgIHNpemUrKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIGlmIChzaXplID49IFRBQl9TSVpFKSB7XG4gICAgICBpbmRlbnRlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKGl0ZW0gJiYgc2l6ZSA+PSBpdGVtLmluZGVudCkge1xuICAgICAgaW5kZW50ZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gICAgY3VycmVudE1hcmtlciA9IG51bGw7XG5cbiAgICBpZiAoIWluZGVudGVkKSB7XG4gICAgICBpZiAoTElTVF9VTk9SREVSRURfTUFSS0VSU1tjaGFyYWN0ZXJdID09PSB0cnVlKSB7XG4gICAgICAgIGN1cnJlbnRNYXJrZXIgPSBjaGFyYWN0ZXI7XG4gICAgICAgIGluZGV4Kys7XG4gICAgICAgIHNpemUrKztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlID0gJyc7XG5cbiAgICAgICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgICAgIGlmICghZGVjaW1hbChjaGFyYWN0ZXIpKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfVxuXG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gICAgICAgIGluZGV4Kys7XG5cbiAgICAgICAgaWYgKHF1ZXVlICYmIG1hcmtlcnNbY2hhcmFjdGVyXSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGN1cnJlbnRNYXJrZXIgPSBjaGFyYWN0ZXI7XG4gICAgICAgICAgc2l6ZSArPSBxdWV1ZS5sZW5ndGggKyAxO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChjdXJyZW50TWFya2VyKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19UQUIpIHtcbiAgICAgICAgICBzaXplICs9IFRBQl9TSVpFIC0gKHNpemUgJSBUQUJfU0laRSk7XG4gICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09IENfU1BBQ0UpIHtcbiAgICAgICAgICBlbmQgPSBpbmRleCArIFRBQl9TSVpFO1xuXG4gICAgICAgICAgd2hpbGUgKGluZGV4IDwgZW5kKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUuY2hhckF0KGluZGV4KSAhPT0gQ19TUEFDRSkge1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgIHNpemUrKztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaW5kZXggPT09IGVuZCAmJiB2YWx1ZS5jaGFyQXQoaW5kZXgpID09PSBDX1NQQUNFKSB7XG4gICAgICAgICAgICBpbmRleCAtPSBUQUJfU0laRSAtIDE7XG4gICAgICAgICAgICBzaXplIC09IFRBQl9TSVpFIC0gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyICE9PSBDX05FV0xJTkUgJiYgY2hhcmFjdGVyICE9PSAnJykge1xuICAgICAgICAgIGN1cnJlbnRNYXJrZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnRNYXJrZXIpIHtcbiAgICAgIGlmICghcGVkYW50aWMgJiYgbWFya2VyICE9PSBjdXJyZW50TWFya2VyKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBwcmVmaXhlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghY29tbW9ubWFyayAmJiAhaW5kZW50ZWQgJiYgdmFsdWUuY2hhckF0KHN0YXJ0SW5kZXgpID09PSBDX1NQQUNFKSB7XG4gICAgICAgIGluZGVudGVkID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoY29tbW9ubWFyayAmJiBpdGVtKSB7XG4gICAgICAgIGluZGVudGVkID0gc2l6ZSA+PSBpdGVtLmluZGVudCB8fCBzaXplID4gVEFCX1NJWkU7XG4gICAgICB9XG5cbiAgICAgIHByZWZpeGVkID0gZmFsc2U7XG4gICAgICBpbmRleCA9IHN0YXJ0SW5kZXg7XG4gICAgfVxuXG4gICAgbGluZSA9IHZhbHVlLnNsaWNlKHN0YXJ0SW5kZXgsIG5leHRJbmRleCk7XG4gICAgY29udGVudCA9IHN0YXJ0SW5kZXggPT09IGluZGV4ID8gbGluZSA6IHZhbHVlLnNsaWNlKGluZGV4LCBuZXh0SW5kZXgpO1xuXG4gICAgaWYgKFxuICAgICAgY3VycmVudE1hcmtlciA9PT0gQ19BU1RFUklTSyB8fFxuICAgICAgY3VycmVudE1hcmtlciA9PT0gQ19VTkRFUlNDT1JFIHx8XG4gICAgICBjdXJyZW50TWFya2VyID09PSBDX0RBU0hcbiAgICApIHtcbiAgICAgIGlmICh0b2tlbml6ZXJzLnRoZW1hdGljQnJlYWsuY2FsbChzZWxmLCBlYXQsIGxpbmUsIHRydWUpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIHByZXZFbXB0eSA9IGVtcHR5O1xuICAgIGVtcHR5ID0gIXRyaW0oY29udGVudCkubGVuZ3RoO1xuXG4gICAgaWYgKGluZGVudGVkICYmIGl0ZW0pIHtcbiAgICAgIGl0ZW0udmFsdWUgPSBpdGVtLnZhbHVlLmNvbmNhdChlbXB0eUxpbmVzLCBsaW5lKTtcbiAgICAgIGFsbExpbmVzID0gYWxsTGluZXMuY29uY2F0KGVtcHR5TGluZXMsIGxpbmUpO1xuICAgICAgZW1wdHlMaW5lcyA9IFtdO1xuICAgIH0gZWxzZSBpZiAocHJlZml4ZWQpIHtcbiAgICAgIGlmIChlbXB0eUxpbmVzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICBpdGVtLnZhbHVlLnB1c2goJycpO1xuICAgICAgICBpdGVtLnRyYWlsID0gZW1wdHlMaW5lcy5jb25jYXQoKTtcbiAgICAgIH1cblxuICAgICAgaXRlbSA9IHtcbiAgICAgICAgdmFsdWU6IFtsaW5lXSxcbiAgICAgICAgaW5kZW50OiBzaXplLFxuICAgICAgICB0cmFpbDogW11cbiAgICAgIH07XG5cbiAgICAgIGl0ZW1zLnB1c2goaXRlbSk7XG4gICAgICBhbGxMaW5lcyA9IGFsbExpbmVzLmNvbmNhdChlbXB0eUxpbmVzLCBsaW5lKTtcbiAgICAgIGVtcHR5TGluZXMgPSBbXTtcbiAgICB9IGVsc2UgaWYgKGVtcHR5KSB7XG4gICAgICBpZiAocHJldkVtcHR5KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBlbXB0eUxpbmVzLnB1c2gobGluZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcmV2RW1wdHkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmIChpbnRlcnJ1cHQoaW50ZXJ1cHRvcnMsIHRva2VuaXplcnMsIHNlbGYsIFtlYXQsIGxpbmUsIHRydWVdKSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaXRlbS52YWx1ZSA9IGl0ZW0udmFsdWUuY29uY2F0KGVtcHR5TGluZXMsIGxpbmUpO1xuICAgICAgYWxsTGluZXMgPSBhbGxMaW5lcy5jb25jYXQoZW1wdHlMaW5lcywgbGluZSk7XG4gICAgICBlbXB0eUxpbmVzID0gW107XG4gICAgfVxuXG4gICAgaW5kZXggPSBuZXh0SW5kZXggKyAxO1xuICB9XG5cbiAgbm9kZSA9IGVhdChhbGxMaW5lcy5qb2luKENfTkVXTElORSkpLnJlc2V0KHtcbiAgICB0eXBlOiAnbGlzdCcsXG4gICAgb3JkZXJlZDogb3JkZXJlZCxcbiAgICBzdGFydDogc3RhcnQsXG4gICAgbG9vc2U6IG51bGwsXG4gICAgY2hpbGRyZW46IFtdXG4gIH0pO1xuXG4gIGVudGVyVG9wID0gc2VsZi5lbnRlckxpc3QoKTtcbiAgZXhpdEJsb2NrcXVvdGUgPSBzZWxmLmVudGVyQmxvY2soKTtcbiAgaXNMb29zZSA9IGZhbHNlO1xuICBpbmRleCA9IC0xO1xuICBsZW5ndGggPSBpdGVtcy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBpdGVtID0gaXRlbXNbaW5kZXhdLnZhbHVlLmpvaW4oQ19ORVdMSU5FKTtcbiAgICBub3cgPSBlYXQubm93KCk7XG5cbiAgICBpdGVtID0gZWF0KGl0ZW0pKGxpc3RJdGVtKHNlbGYsIGl0ZW0sIG5vdyksIG5vZGUpO1xuXG4gICAgaWYgKGl0ZW0ubG9vc2UpIHtcbiAgICAgIGlzTG9vc2UgPSB0cnVlO1xuICAgIH1cblxuICAgIGl0ZW0gPSBpdGVtc1tpbmRleF0udHJhaWwuam9pbihDX05FV0xJTkUpO1xuXG4gICAgaWYgKGluZGV4ICE9PSBsZW5ndGggLSAxKSB7XG4gICAgICBpdGVtICs9IENfTkVXTElORTtcbiAgICB9XG5cbiAgICBlYXQoaXRlbSk7XG4gIH1cblxuICBlbnRlclRvcCgpO1xuICBleGl0QmxvY2txdW90ZSgpO1xuXG4gIG5vZGUubG9vc2UgPSBpc0xvb3NlO1xuXG4gIHJldHVybiBub2RlO1xufVxuXG5mdW5jdGlvbiBsaXN0SXRlbShjdHgsIHZhbHVlLCBwb3NpdGlvbikge1xuICB2YXIgb2Zmc2V0cyA9IGN0eC5vZmZzZXQ7XG4gIHZhciBmbiA9IGN0eC5vcHRpb25zLnBlZGFudGljID8gcGVkYW50aWNMaXN0SXRlbSA6IG5vcm1hbExpc3RJdGVtO1xuICB2YXIgY2hlY2tlZCA9IG51bGw7XG4gIHZhciB0YXNrO1xuICB2YXIgaW5kZW50O1xuXG4gIHZhbHVlID0gZm4uYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcblxuICBpZiAoY3R4Lm9wdGlvbnMuZ2ZtKSB7XG4gICAgdGFzayA9IHZhbHVlLm1hdGNoKEVYUFJFU1NJT05fVEFTS19JVEVNKTtcblxuICAgIGlmICh0YXNrKSB7XG4gICAgICBpbmRlbnQgPSB0YXNrWzBdLmxlbmd0aDtcbiAgICAgIGNoZWNrZWQgPSB0YXNrWzFdLnRvTG93ZXJDYXNlKCkgPT09IENfWF9MT1dFUjtcbiAgICAgIG9mZnNldHNbcG9zaXRpb24ubGluZV0gKz0gaW5kZW50O1xuICAgICAgdmFsdWUgPSB2YWx1ZS5zbGljZShpbmRlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHlwZTogJ2xpc3RJdGVtJyxcbiAgICBsb29zZTogRVhQUkVTU0lPTl9MT09TRV9MSVNUX0lURU0udGVzdCh2YWx1ZSkgfHxcbiAgICAgIHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSA9PT0gQ19ORVdMSU5FLFxuICAgIGNoZWNrZWQ6IGNoZWNrZWQsXG4gICAgY2hpbGRyZW46IGN0eC50b2tlbml6ZUJsb2NrKHZhbHVlLCBwb3NpdGlvbilcbiAgfTtcbn1cblxuLyogQ3JlYXRlIGEgbGlzdC1pdGVtIHVzaW5nIG92ZXJseSBzaW1wbGUgbWVjaGFuaWNzLiAqL1xuZnVuY3Rpb24gcGVkYW50aWNMaXN0SXRlbShjdHgsIHZhbHVlLCBwb3NpdGlvbikge1xuICB2YXIgb2Zmc2V0cyA9IGN0eC5vZmZzZXQ7XG4gIHZhciBsaW5lID0gcG9zaXRpb24ubGluZTtcblxuICAvKiBSZW1vdmUgdGhlIGxpc3QtaXRlbeKAmXMgYnVsbGV0LiAqL1xuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoRVhQUkVTU0lPTl9QRURBTlRJQ19CVUxMRVQsIHJlcGxhY2VyKTtcblxuICAvKiBUaGUgaW5pdGlhbCBsaW5lIHdhcyBhbHNvIG1hdGNoZWQgYnkgdGhlIGJlbG93LCBzb1xuICAgKiB3ZSByZXNldCB0aGUgYGxpbmVgLiAqL1xuICBsaW5lID0gcG9zaXRpb24ubGluZTtcblxuICByZXR1cm4gdmFsdWUucmVwbGFjZShFWFBSRVNTSU9OX0lOSVRJQUxfSU5ERU5ULCByZXBsYWNlcik7XG5cbiAgLyogQSBzaW1wbGUgcmVwbGFjZXIgd2hpY2ggcmVtb3ZlZCBhbGwgbWF0Y2hlcyxcbiAgICogYW5kIGFkZHMgdGhlaXIgbGVuZ3RoIHRvIGBvZmZzZXRgLiAqL1xuICBmdW5jdGlvbiByZXBsYWNlcigkMCkge1xuICAgIG9mZnNldHNbbGluZV0gPSAob2Zmc2V0c1tsaW5lXSB8fCAwKSArICQwLmxlbmd0aDtcbiAgICBsaW5lKys7XG5cbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cblxuLyogQ3JlYXRlIGEgbGlzdC1pdGVtIHVzaW5nIHNhbmUgbWVjaGFuaWNzLiAqL1xuZnVuY3Rpb24gbm9ybWFsTGlzdEl0ZW0oY3R4LCB2YWx1ZSwgcG9zaXRpb24pIHtcbiAgdmFyIG9mZnNldHMgPSBjdHgub2Zmc2V0O1xuICB2YXIgbGluZSA9IHBvc2l0aW9uLmxpbmU7XG4gIHZhciBtYXg7XG4gIHZhciBidWxsZXQ7XG4gIHZhciByZXN0O1xuICB2YXIgbGluZXM7XG4gIHZhciB0cmltbWVkTGluZXM7XG4gIHZhciBpbmRleDtcbiAgdmFyIGxlbmd0aDtcblxuICAvKiBSZW1vdmUgdGhlIGxpc3QtaXRlbeKAmXMgYnVsbGV0LiAqL1xuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoRVhQUkVTU0lPTl9CVUxMRVQsIHJlcGxhY2VyKTtcblxuICBsaW5lcyA9IHZhbHVlLnNwbGl0KENfTkVXTElORSk7XG5cbiAgdHJpbW1lZExpbmVzID0gcmVtb3ZlSW5kZW50KHZhbHVlLCBnZXRJbmRlbnQobWF4KS5pbmRlbnQpLnNwbGl0KENfTkVXTElORSk7XG5cbiAgLyogV2UgcmVwbGFjZWQgdGhlIGluaXRpYWwgYnVsbGV0IHdpdGggc29tZXRoaW5nXG4gICAqIGVsc2UgYWJvdmUsIHdoaWNoIHdhcyB1c2VkIHRvIHRyaWNrXG4gICAqIGByZW1vdmVJbmRlbnRhdGlvbmAgaW50byByZW1vdmluZyBzb21lIG1vcmVcbiAgICogY2hhcmFjdGVycyB3aGVuIHBvc3NpYmxlLiAgSG93ZXZlciwgdGhhdCBjb3VsZFxuICAgKiByZXN1bHQgaW4gdGhlIGluaXRpYWwgbGluZSB0byBiZSBzdHJpcHBlZCBtb3JlXG4gICAqIHRoYW4gaXQgc2hvdWxkIGJlLiAqL1xuICB0cmltbWVkTGluZXNbMF0gPSByZXN0O1xuXG4gIG9mZnNldHNbbGluZV0gPSAob2Zmc2V0c1tsaW5lXSB8fCAwKSArIGJ1bGxldC5sZW5ndGg7XG4gIGxpbmUrKztcblxuICBpbmRleCA9IDA7XG4gIGxlbmd0aCA9IGxpbmVzLmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIG9mZnNldHNbbGluZV0gPSAob2Zmc2V0c1tsaW5lXSB8fCAwKSArXG4gICAgICBsaW5lc1tpbmRleF0ubGVuZ3RoIC0gdHJpbW1lZExpbmVzW2luZGV4XS5sZW5ndGg7XG4gICAgbGluZSsrO1xuICB9XG5cbiAgcmV0dXJuIHRyaW1tZWRMaW5lcy5qb2luKENfTkVXTElORSk7XG5cbiAgZnVuY3Rpb24gcmVwbGFjZXIoJDAsICQxLCAkMiwgJDMsICQ0KSB7XG4gICAgYnVsbGV0ID0gJDEgKyAkMiArICQzO1xuICAgIHJlc3QgPSAkNDtcblxuICAgIC8qIE1ha2Ugc3VyZSB0aGF0IHRoZSBmaXJzdCBuaW5lIG51bWJlcmVkIGxpc3QgaXRlbXNcbiAgICAgKiBjYW4gaW5kZW50IHdpdGggYW4gZXh0cmEgc3BhY2UuICBUaGF0IGlzLCB3aGVuXG4gICAgICogdGhlIGJ1bGxldCBkaWQgbm90IHJlY2VpdmUgYW4gZXh0cmEgZmluYWwgc3BhY2UuICovXG4gICAgaWYgKE51bWJlcigkMikgPCAxMCAmJiBidWxsZXQubGVuZ3RoICUgMiA9PT0gMSkge1xuICAgICAgJDIgPSBDX1NQQUNFICsgJDI7XG4gICAgfVxuXG4gICAgbWF4ID0gJDEgKyByZXBlYXQoQ19TUEFDRSwgJDIubGVuZ3RoKSArICQzO1xuXG4gICAgcmV0dXJuIG1heCArIHJlc3Q7XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHRyaW0gPSByZXF1aXJlKCd0cmltJyk7XG52YXIgcmVwZWF0ID0gcmVxdWlyZSgncmVwZWF0LXN0cmluZycpO1xudmFyIGdldEluZGVudCA9IHJlcXVpcmUoJy4vZ2V0LWluZGVudGF0aW9uJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gaW5kZW50YXRpb247XG5cbnZhciBDX1NQQUNFID0gJyAnO1xudmFyIENfTkVXTElORSA9ICdcXG4nO1xudmFyIENfVEFCID0gJ1xcdCc7XG5cbi8qIFJlbW92ZSB0aGUgbWluaW11bSBpbmRlbnQgZnJvbSBldmVyeSBsaW5lIGluIGB2YWx1ZWAuXG4gKiBTdXBwb3J0cyBib3RoIHRhYiwgc3BhY2VkLCBhbmQgbWl4ZWQgaW5kZW50YXRpb24gKGFzXG4gKiB3ZWxsIGFzIHBvc3NpYmxlKS4gKi9cbmZ1bmN0aW9uIGluZGVudGF0aW9uKHZhbHVlLCBtYXhpbXVtKSB7XG4gIHZhciB2YWx1ZXMgPSB2YWx1ZS5zcGxpdChDX05FV0xJTkUpO1xuICB2YXIgcG9zaXRpb24gPSB2YWx1ZXMubGVuZ3RoICsgMTtcbiAgdmFyIG1pbkluZGVudCA9IEluZmluaXR5O1xuICB2YXIgbWF0cml4ID0gW107XG4gIHZhciBpbmRleDtcbiAgdmFyIGluZGVudGF0aW9uO1xuICB2YXIgc3RvcHM7XG4gIHZhciBwYWRkaW5nO1xuXG4gIHZhbHVlcy51bnNoaWZ0KHJlcGVhdChDX1NQQUNFLCBtYXhpbXVtKSArICchJyk7XG5cbiAgd2hpbGUgKHBvc2l0aW9uLS0pIHtcbiAgICBpbmRlbnRhdGlvbiA9IGdldEluZGVudCh2YWx1ZXNbcG9zaXRpb25dKTtcblxuICAgIG1hdHJpeFtwb3NpdGlvbl0gPSBpbmRlbnRhdGlvbi5zdG9wcztcblxuICAgIGlmICh0cmltKHZhbHVlc1twb3NpdGlvbl0pLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGluZGVudGF0aW9uLmluZGVudCkge1xuICAgICAgaWYgKGluZGVudGF0aW9uLmluZGVudCA+IDAgJiYgaW5kZW50YXRpb24uaW5kZW50IDwgbWluSW5kZW50KSB7XG4gICAgICAgIG1pbkluZGVudCA9IGluZGVudGF0aW9uLmluZGVudDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbWluSW5kZW50ID0gSW5maW5pdHk7XG5cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmIChtaW5JbmRlbnQgIT09IEluZmluaXR5KSB7XG4gICAgcG9zaXRpb24gPSB2YWx1ZXMubGVuZ3RoO1xuXG4gICAgd2hpbGUgKHBvc2l0aW9uLS0pIHtcbiAgICAgIHN0b3BzID0gbWF0cml4W3Bvc2l0aW9uXTtcbiAgICAgIGluZGV4ID0gbWluSW5kZW50O1xuXG4gICAgICB3aGlsZSAoaW5kZXggJiYgIShpbmRleCBpbiBzdG9wcykpIHtcbiAgICAgICAgaW5kZXgtLTtcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICB0cmltKHZhbHVlc1twb3NpdGlvbl0pLmxlbmd0aCAhPT0gMCAmJlxuICAgICAgICBtaW5JbmRlbnQgJiZcbiAgICAgICAgaW5kZXggIT09IG1pbkluZGVudFxuICAgICAgKSB7XG4gICAgICAgIHBhZGRpbmcgPSBDX1RBQjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhZGRpbmcgPSAnJztcbiAgICAgIH1cblxuICAgICAgdmFsdWVzW3Bvc2l0aW9uXSA9IHBhZGRpbmcgKyB2YWx1ZXNbcG9zaXRpb25dLnNsaWNlKFxuICAgICAgICBpbmRleCBpbiBzdG9wcyA/IHN0b3BzW2luZGV4XSArIDEgOiAwXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHZhbHVlcy5zaGlmdCgpO1xuXG4gIHJldHVybiB2YWx1ZXMuam9pbihDX05FV0xJTkUpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNldGV4dEhlYWRpbmc7XG5cbnZhciBDX05FV0xJTkUgPSAnXFxuJztcbnZhciBDX1RBQiA9ICdcXHQnO1xudmFyIENfU1BBQ0UgPSAnICc7XG52YXIgQ19FUVVBTFMgPSAnPSc7XG52YXIgQ19EQVNIID0gJy0nO1xuXG52YXIgTUFYX0hFQURJTkdfSU5ERU5UID0gMztcblxuLyogTWFwIG9mIGNoYXJhY3RlcnMgd2hpY2ggY2FuIGJlIHVzZWQgdG8gbWFyayBzZXRleHRcbiAqIGhlYWRlcnMsIG1hcHBpbmcgdG8gdGhlaXIgY29ycmVzcG9uZGluZyBkZXB0aC4gKi9cbnZhciBTRVRFWFRfTUFSS0VSUyA9IHt9O1xuXG5TRVRFWFRfTUFSS0VSU1tDX0VRVUFMU10gPSAxO1xuU0VURVhUX01BUktFUlNbQ19EQVNIXSA9IDI7XG5cbmZ1bmN0aW9uIHNldGV4dEhlYWRpbmcoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIG5vdyA9IGVhdC5ub3coKTtcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHZhciBzdWJ2YWx1ZSA9ICcnO1xuICB2YXIgY29udGVudDtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgY2hhcmFjdGVyO1xuICB2YXIgbWFya2VyO1xuICB2YXIgZGVwdGg7XG5cbiAgLyogRWF0IGluaXRpYWwgaW5kZW50YXRpb24uICovXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IENfU1BBQ0UgfHwgaW5kZXggPj0gTUFYX0hFQURJTkdfSU5ERU5UKSB7XG4gICAgICBpbmRleC0tO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICB9XG5cbiAgLyogRWF0IGNvbnRlbnQuICovXG4gIGNvbnRlbnQgPSAnJztcbiAgcXVldWUgPSAnJztcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX05FV0xJTkUpIHtcbiAgICAgIGluZGV4LS07XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX1NQQUNFIHx8IGNoYXJhY3RlciA9PT0gQ19UQUIpIHtcbiAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGVudCArPSBxdWV1ZSArIGNoYXJhY3RlcjtcbiAgICAgIHF1ZXVlID0gJyc7XG4gICAgfVxuICB9XG5cbiAgbm93LmNvbHVtbiArPSBzdWJ2YWx1ZS5sZW5ndGg7XG4gIG5vdy5vZmZzZXQgKz0gc3VidmFsdWUubGVuZ3RoO1xuICBzdWJ2YWx1ZSArPSBjb250ZW50ICsgcXVldWU7XG5cbiAgLyogRW5zdXJlIHRoZSBjb250ZW50IGlzIGZvbGxvd2VkIGJ5IGEgbmV3bGluZSBhbmQgYVxuICAgKiB2YWxpZCBtYXJrZXIuICovXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgrK2luZGV4KTtcbiAgbWFya2VyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuXG4gIGlmIChjaGFyYWN0ZXIgIT09IENfTkVXTElORSB8fCAhU0VURVhUX01BUktFUlNbbWFya2VyXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcblxuICAvKiBFYXQgU2V0ZXh0LWxpbmUuICovXG4gIHF1ZXVlID0gbWFya2VyO1xuICBkZXB0aCA9IFNFVEVYVF9NQVJLRVJTW21hcmtlcl07XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gbWFya2VyKSB7XG4gICAgICBpZiAoY2hhcmFjdGVyICE9PSBDX05FV0xJTkUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpbmRleC0tO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICB9XG5cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSArIHF1ZXVlKSh7XG4gICAgdHlwZTogJ2hlYWRpbmcnLFxuICAgIGRlcHRoOiBkZXB0aCxcbiAgICBjaGlsZHJlbjogc2VsZi50b2tlbml6ZUlubGluZShjb250ZW50LCBub3cpXG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgb3BlbkNsb3NlVGFnID0gcmVxdWlyZSgnLi4vdXRpbC9odG1sJykub3BlbkNsb3NlVGFnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJsb2NrSFRNTDtcblxudmFyIENfVEFCID0gJ1xcdCc7XG52YXIgQ19TUEFDRSA9ICcgJztcbnZhciBDX05FV0xJTkUgPSAnXFxuJztcbnZhciBDX0xUID0gJzwnO1xuXG5mdW5jdGlvbiBibG9ja0hUTUwoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGJsb2NrcyA9IHNlbGYub3B0aW9ucy5ibG9ja3M7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBuZXh0O1xuICB2YXIgbGluZTtcbiAgdmFyIG9mZnNldDtcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIGNvdW50O1xuICB2YXIgc2VxdWVuY2U7XG4gIHZhciBzdWJ2YWx1ZTtcblxuICB2YXIgc2VxdWVuY2VzID0gW1xuICAgIFsvXjwoc2NyaXB0fHByZXxzdHlsZSkoPz0oXFxzfD58JCkpL2ksIC88XFwvKHNjcmlwdHxwcmV8c3R5bGUpPi9pLCB0cnVlXSxcbiAgICBbL148IS0tLywgLy0tPi8sIHRydWVdLFxuICAgIFsvXjxcXD8vLCAvXFw/Pi8sIHRydWVdLFxuICAgIFsvXjwhW0EtWmEtel0vLCAvPi8sIHRydWVdLFxuICAgIFsvXjwhXFxbQ0RBVEFcXFsvLCAvXFxdXFxdPi8sIHRydWVdLFxuICAgIFtuZXcgUmVnRXhwKCdePC8/KCcgKyBibG9ja3Muam9pbignfCcpICsgJykoPz0oXFxcXHN8Lz8+fCQpKScsICdpJyksIC9eJC8sIHRydWVdLFxuICAgIFtuZXcgUmVnRXhwKG9wZW5DbG9zZVRhZy5zb3VyY2UgKyAnXFxcXHMqJCcpLCAvXiQvLCBmYWxzZV1cbiAgXTtcblxuICAvKiBFYXQgaW5pdGlhbCBzcGFjaW5nLiAqL1xuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19UQUIgJiYgY2hhcmFjdGVyICE9PSBDX1NQQUNFKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBpbmRleCsrO1xuICB9XG5cbiAgaWYgKHZhbHVlLmNoYXJBdChpbmRleCkgIT09IENfTFQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBuZXh0ID0gdmFsdWUuaW5kZXhPZihDX05FV0xJTkUsIGluZGV4ICsgMSk7XG4gIG5leHQgPSBuZXh0ID09PSAtMSA/IGxlbmd0aCA6IG5leHQ7XG4gIGxpbmUgPSB2YWx1ZS5zbGljZShpbmRleCwgbmV4dCk7XG4gIG9mZnNldCA9IC0xO1xuICBjb3VudCA9IHNlcXVlbmNlcy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsrb2Zmc2V0IDwgY291bnQpIHtcbiAgICBpZiAoc2VxdWVuY2VzW29mZnNldF1bMF0udGVzdChsaW5lKSkge1xuICAgICAgc2VxdWVuY2UgPSBzZXF1ZW5jZXNbb2Zmc2V0XTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmICghc2VxdWVuY2UpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHNlcXVlbmNlWzJdO1xuICB9XG5cbiAgaW5kZXggPSBuZXh0O1xuXG4gIGlmICghc2VxdWVuY2VbMV0udGVzdChsaW5lKSkge1xuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgbmV4dCA9IHZhbHVlLmluZGV4T2YoQ19ORVdMSU5FLCBpbmRleCArIDEpO1xuICAgICAgbmV4dCA9IG5leHQgPT09IC0xID8gbGVuZ3RoIDogbmV4dDtcbiAgICAgIGxpbmUgPSB2YWx1ZS5zbGljZShpbmRleCArIDEsIG5leHQpO1xuXG4gICAgICBpZiAoc2VxdWVuY2VbMV0udGVzdChsaW5lKSkge1xuICAgICAgICBpZiAobGluZSkge1xuICAgICAgICAgIGluZGV4ID0gbmV4dDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpbmRleCA9IG5leHQ7XG4gICAgfVxuICB9XG5cbiAgc3VidmFsdWUgPSB2YWx1ZS5zbGljZSgwLCBpbmRleCk7XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe3R5cGU6ICdodG1sJywgdmFsdWU6IHN1YnZhbHVlfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBub3JtYWxpemUgPSByZXF1aXJlKCcuLi91dGlsL25vcm1hbGl6ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZvb3Rub3RlRGVmaW5pdGlvbjtcbmZvb3Rub3RlRGVmaW5pdGlvbi5ub3RJbkxpc3QgPSB0cnVlO1xuZm9vdG5vdGVEZWZpbml0aW9uLm5vdEluQmxvY2sgPSB0cnVlO1xuXG52YXIgQ19CQUNLU0xBU0ggPSAnXFxcXCc7XG52YXIgQ19ORVdMSU5FID0gJ1xcbic7XG52YXIgQ19UQUIgPSAnXFx0JztcbnZhciBDX1NQQUNFID0gJyAnO1xudmFyIENfQlJBQ0tFVF9PUEVOID0gJ1snO1xudmFyIENfQlJBQ0tFVF9DTE9TRSA9ICddJztcbnZhciBDX0NBUkVUID0gJ14nO1xudmFyIENfQ09MT04gPSAnOic7XG5cbnZhciBFWFBSRVNTSU9OX0lOSVRJQUxfVEFCID0gL14oIHs0fXxcXHQpPy9nbTtcblxuZnVuY3Rpb24gZm9vdG5vdGVEZWZpbml0aW9uKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBvZmZzZXRzID0gc2VsZi5vZmZzZXQ7XG4gIHZhciBpbmRleDtcbiAgdmFyIGxlbmd0aDtcbiAgdmFyIHN1YnZhbHVlO1xuICB2YXIgbm93O1xuICB2YXIgY3VycmVudExpbmU7XG4gIHZhciBjb250ZW50O1xuICB2YXIgcXVldWU7XG4gIHZhciBzdWJxdWV1ZTtcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIGlkZW50aWZpZXI7XG4gIHZhciBhZGQ7XG4gIHZhciBleGl0O1xuXG4gIGlmICghc2VsZi5vcHRpb25zLmZvb3Rub3Rlcykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGluZGV4ID0gMDtcbiAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICBzdWJ2YWx1ZSA9ICcnO1xuICBub3cgPSBlYXQubm93KCk7XG4gIGN1cnJlbnRMaW5lID0gbm93LmxpbmU7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmICghd2hpdGVzcGFjZShjaGFyYWN0ZXIpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmIChcbiAgICB2YWx1ZS5jaGFyQXQoaW5kZXgpICE9PSBDX0JSQUNLRVRfT1BFTiB8fFxuICAgIHZhbHVlLmNoYXJBdChpbmRleCArIDEpICE9PSBDX0NBUkVUXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHN1YnZhbHVlICs9IENfQlJBQ0tFVF9PUEVOICsgQ19DQVJFVDtcbiAgaW5kZXggPSBzdWJ2YWx1ZS5sZW5ndGg7XG4gIHF1ZXVlID0gJyc7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9DTE9TRSkge1xuICAgICAgYnJlYWs7XG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09IENfQkFDS1NMQVNIKSB7XG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcbiAgICB9XG5cbiAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmIChcbiAgICAhcXVldWUgfHxcbiAgICB2YWx1ZS5jaGFyQXQoaW5kZXgpICE9PSBDX0JSQUNLRVRfQ0xPU0UgfHxcbiAgICB2YWx1ZS5jaGFyQXQoaW5kZXggKyAxKSAhPT0gQ19DT0xPTlxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZGVudGlmaWVyID0gbm9ybWFsaXplKHF1ZXVlKTtcbiAgc3VidmFsdWUgKz0gcXVldWUgKyBDX0JSQUNLRVRfQ0xPU0UgKyBDX0NPTE9OO1xuICBpbmRleCA9IHN1YnZhbHVlLmxlbmd0aDtcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19UQUIgJiYgY2hhcmFjdGVyICE9PSBDX1NQQUNFKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIG5vdy5jb2x1bW4gKz0gc3VidmFsdWUubGVuZ3RoO1xuICBub3cub2Zmc2V0ICs9IHN1YnZhbHVlLmxlbmd0aDtcbiAgcXVldWUgPSAnJztcbiAgY29udGVudCA9ICcnO1xuICBzdWJxdWV1ZSA9ICcnO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX05FV0xJTkUpIHtcbiAgICAgIHN1YnF1ZXVlID0gY2hhcmFjdGVyO1xuICAgICAgaW5kZXgrKztcblxuICAgICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciAhPT0gQ19ORVdMSU5FKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBzdWJxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgIGluZGV4Kys7XG4gICAgICB9XG5cbiAgICAgIHF1ZXVlICs9IHN1YnF1ZXVlO1xuICAgICAgc3VicXVldWUgPSAnJztcblxuICAgICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciAhPT0gQ19TUEFDRSkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VicXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgICBpbmRleCsrO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3VicXVldWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBxdWV1ZSArPSBzdWJxdWV1ZTtcbiAgICB9XG5cbiAgICBpZiAocXVldWUpIHtcbiAgICAgIGNvbnRlbnQgKz0gcXVldWU7XG4gICAgICBxdWV1ZSA9ICcnO1xuICAgIH1cblxuICAgIGNvbnRlbnQgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBzdWJ2YWx1ZSArPSBjb250ZW50O1xuXG4gIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2UoRVhQUkVTU0lPTl9JTklUSUFMX1RBQiwgZnVuY3Rpb24gKGxpbmUpIHtcbiAgICBvZmZzZXRzW2N1cnJlbnRMaW5lXSA9IChvZmZzZXRzW2N1cnJlbnRMaW5lXSB8fCAwKSArIGxpbmUubGVuZ3RoO1xuICAgIGN1cnJlbnRMaW5lKys7XG5cbiAgICByZXR1cm4gJyc7XG4gIH0pO1xuXG4gIGFkZCA9IGVhdChzdWJ2YWx1ZSk7XG5cbiAgZXhpdCA9IHNlbGYuZW50ZXJCbG9jaygpO1xuICBjb250ZW50ID0gc2VsZi50b2tlbml6ZUJsb2NrKGNvbnRlbnQsIG5vdyk7XG4gIGV4aXQoKTtcblxuICByZXR1cm4gYWRkKHtcbiAgICB0eXBlOiAnZm9vdG5vdGVEZWZpbml0aW9uJyxcbiAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgIGNoaWxkcmVuOiBjb250ZW50XG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gY29sbGFwc2VcblxuLy8gYGNvbGxhcHNlKCcgXFx0XFxuYmFyIFxcbmJhelxcdCcpIC8vICcgYmFyIGJheiAnYFxuZnVuY3Rpb24gY29sbGFwc2UodmFsdWUpIHtcbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSkucmVwbGFjZSgvXFxzKy9nLCAnICcpXG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBub3JtYWxpemUgPSByZXF1aXJlKCcuLi91dGlsL25vcm1hbGl6ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmluaXRpb247XG5kZWZpbml0aW9uLm5vdEluTGlzdCA9IHRydWU7XG5kZWZpbml0aW9uLm5vdEluQmxvY2sgPSB0cnVlO1xuXG52YXIgQ19ET1VCTEVfUVVPVEUgPSAnXCInO1xudmFyIENfU0lOR0xFX1FVT1RFID0gJ1xcJyc7XG52YXIgQ19CQUNLU0xBU0ggPSAnXFxcXCc7XG52YXIgQ19ORVdMSU5FID0gJ1xcbic7XG52YXIgQ19UQUIgPSAnXFx0JztcbnZhciBDX1NQQUNFID0gJyAnO1xudmFyIENfQlJBQ0tFVF9PUEVOID0gJ1snO1xudmFyIENfQlJBQ0tFVF9DTE9TRSA9ICddJztcbnZhciBDX1BBUkVOX09QRU4gPSAnKCc7XG52YXIgQ19QQVJFTl9DTE9TRSA9ICcpJztcbnZhciBDX0NPTE9OID0gJzonO1xudmFyIENfTFQgPSAnPCc7XG52YXIgQ19HVCA9ICc+JztcblxuZnVuY3Rpb24gZGVmaW5pdGlvbihlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY29tbW9ubWFyayA9IHNlbGYub3B0aW9ucy5jb21tb25tYXJrO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICB2YXIgc3VidmFsdWUgPSAnJztcbiAgdmFyIGJlZm9yZVVSTDtcbiAgdmFyIGJlZm9yZVRpdGxlO1xuICB2YXIgcXVldWU7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciB0ZXN0O1xuICB2YXIgaWRlbnRpZmllcjtcbiAgdmFyIHVybDtcbiAgdmFyIHRpdGxlO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyICE9PSBDX1NQQUNFICYmIGNoYXJhY3RlciAhPT0gQ19UQUIpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuICB9XG5cbiAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICBpZiAoY2hhcmFjdGVyICE9PSBDX0JSQUNLRVRfT1BFTikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGluZGV4Kys7XG4gIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcbiAgcXVldWUgPSAnJztcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gQ19CUkFDS0VUX0NMT1NFKSB7XG4gICAgICBicmVhaztcbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gQ19CQUNLU0xBU0gpIHtcbiAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICAgIH1cblxuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuICB9XG5cbiAgaWYgKFxuICAgICFxdWV1ZSB8fFxuICAgIHZhbHVlLmNoYXJBdChpbmRleCkgIT09IENfQlJBQ0tFVF9DTE9TRSB8fFxuICAgIHZhbHVlLmNoYXJBdChpbmRleCArIDEpICE9PSBDX0NPTE9OXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlkZW50aWZpZXIgPSBxdWV1ZTtcbiAgc3VidmFsdWUgKz0gcXVldWUgKyBDX0JSQUNLRVRfQ0xPU0UgKyBDX0NPTE9OO1xuICBpbmRleCA9IHN1YnZhbHVlLmxlbmd0aDtcbiAgcXVldWUgPSAnJztcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKFxuICAgICAgY2hhcmFjdGVyICE9PSBDX1RBQiAmJlxuICAgICAgY2hhcmFjdGVyICE9PSBDX1NQQUNFICYmXG4gICAgICBjaGFyYWN0ZXIgIT09IENfTkVXTElORVxuICAgICkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICBxdWV1ZSA9ICcnO1xuICBiZWZvcmVVUkwgPSBzdWJ2YWx1ZTtcblxuICBpZiAoY2hhcmFjdGVyID09PSBDX0xUKSB7XG4gICAgaW5kZXgrKztcblxuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgaWYgKCFpc0VuY2xvc2VkVVJMQ2hhcmFjdGVyKGNoYXJhY3RlcikpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG4gICAgfVxuXG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IGlzRW5jbG9zZWRVUkxDaGFyYWN0ZXIuZGVsaW1pdGVyKSB7XG4gICAgICBzdWJ2YWx1ZSArPSBDX0xUICsgcXVldWUgKyBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoY29tbW9ubWFyaykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGluZGV4IC09IHF1ZXVlLmxlbmd0aCArIDE7XG4gICAgICBxdWV1ZSA9ICcnO1xuICAgIH1cbiAgfVxuXG4gIGlmICghcXVldWUpIHtcbiAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmICghaXNVbmNsb3NlZFVSTENoYXJhY3RlcihjaGFyYWN0ZXIpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIHN1YnZhbHVlICs9IHF1ZXVlO1xuICB9XG5cbiAgaWYgKCFxdWV1ZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHVybCA9IHF1ZXVlO1xuICBxdWV1ZSA9ICcnO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoXG4gICAgICBjaGFyYWN0ZXIgIT09IENfVEFCICYmXG4gICAgICBjaGFyYWN0ZXIgIT09IENfU1BBQ0UgJiZcbiAgICAgIGNoYXJhY3RlciAhPT0gQ19ORVdMSU5FXG4gICAgKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gIHRlc3QgPSBudWxsO1xuXG4gIGlmIChjaGFyYWN0ZXIgPT09IENfRE9VQkxFX1FVT1RFKSB7XG4gICAgdGVzdCA9IENfRE9VQkxFX1FVT1RFO1xuICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gQ19TSU5HTEVfUVVPVEUpIHtcbiAgICB0ZXN0ID0gQ19TSU5HTEVfUVVPVEU7XG4gIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX1BBUkVOX09QRU4pIHtcbiAgICB0ZXN0ID0gQ19QQVJFTl9DTE9TRTtcbiAgfVxuXG4gIGlmICghdGVzdCkge1xuICAgIHF1ZXVlID0gJyc7XG4gICAgaW5kZXggPSBzdWJ2YWx1ZS5sZW5ndGg7XG4gIH0gZWxzZSBpZiAocXVldWUpIHtcbiAgICBzdWJ2YWx1ZSArPSBxdWV1ZSArIGNoYXJhY3RlcjtcbiAgICBpbmRleCA9IHN1YnZhbHVlLmxlbmd0aDtcbiAgICBxdWV1ZSA9ICcnO1xuXG4gICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgICBpZiAoY2hhcmFjdGVyID09PSB0ZXN0KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2hhcmFjdGVyID09PSBDX05FV0xJTkUpIHtcbiAgICAgICAgaW5kZXgrKztcbiAgICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSBDX05FV0xJTkUgfHwgY2hhcmFjdGVyID09PSB0ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcXVldWUgKz0gQ19ORVdMSU5FO1xuICAgICAgfVxuXG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyICE9PSB0ZXN0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYmVmb3JlVGl0bGUgPSBzdWJ2YWx1ZTtcbiAgICBzdWJ2YWx1ZSArPSBxdWV1ZSArIGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuICAgIHRpdGxlID0gcXVldWU7XG4gICAgcXVldWUgPSAnJztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciAhPT0gQ19UQUIgJiYgY2hhcmFjdGVyICE9PSBDX1NQQUNFKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgaWYgKCFjaGFyYWN0ZXIgfHwgY2hhcmFjdGVyID09PSBDX05FV0xJTkUpIHtcbiAgICBpZiAoc2lsZW50KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBiZWZvcmVVUkwgPSBlYXQoYmVmb3JlVVJMKS50ZXN0KCkuZW5kO1xuICAgIHVybCA9IHNlbGYuZGVjb2RlLnJhdyhzZWxmLnVuZXNjYXBlKHVybCksIGJlZm9yZVVSTCwge25vblRlcm1pbmF0ZWQ6IGZhbHNlfSk7XG5cbiAgICBpZiAodGl0bGUpIHtcbiAgICAgIGJlZm9yZVRpdGxlID0gZWF0KGJlZm9yZVRpdGxlKS50ZXN0KCkuZW5kO1xuICAgICAgdGl0bGUgPSBzZWxmLmRlY29kZS5yYXcoc2VsZi51bmVzY2FwZSh0aXRsZSksIGJlZm9yZVRpdGxlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZWF0KHN1YnZhbHVlKSh7XG4gICAgICB0eXBlOiAnZGVmaW5pdGlvbicsXG4gICAgICBpZGVudGlmaWVyOiBub3JtYWxpemUoaWRlbnRpZmllciksXG4gICAgICB0aXRsZTogdGl0bGUgfHwgbnVsbCxcbiAgICAgIHVybDogdXJsXG4gICAgfSk7XG4gIH1cbn1cblxuLyogQ2hlY2sgaWYgYGNoYXJhY3RlcmAgY2FuIGJlIGluc2lkZSBhbiBlbmNsb3NlZCBVUkkuICovXG5mdW5jdGlvbiBpc0VuY2xvc2VkVVJMQ2hhcmFjdGVyKGNoYXJhY3Rlcikge1xuICByZXR1cm4gY2hhcmFjdGVyICE9PSBDX0dUICYmXG4gICAgY2hhcmFjdGVyICE9PSBDX0JSQUNLRVRfT1BFTiAmJlxuICAgIGNoYXJhY3RlciAhPT0gQ19CUkFDS0VUX0NMT1NFO1xufVxuXG5pc0VuY2xvc2VkVVJMQ2hhcmFjdGVyLmRlbGltaXRlciA9IENfR1Q7XG5cbi8qIENoZWNrIGlmIGBjaGFyYWN0ZXJgIGNhbiBiZSBpbnNpZGUgYW4gdW5jbG9zZWQgVVJJLiAqL1xuZnVuY3Rpb24gaXNVbmNsb3NlZFVSTENoYXJhY3RlcihjaGFyYWN0ZXIpIHtcbiAgcmV0dXJuIGNoYXJhY3RlciAhPT0gQ19CUkFDS0VUX09QRU4gJiZcbiAgICBjaGFyYWN0ZXIgIT09IENfQlJBQ0tFVF9DTE9TRSAmJlxuICAgICF3aGl0ZXNwYWNlKGNoYXJhY3Rlcik7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSB0YWJsZTtcblxudmFyIENfQkFDS1NMQVNIID0gJ1xcXFwnO1xudmFyIENfVElDSyA9ICdgJztcbnZhciBDX0RBU0ggPSAnLSc7XG52YXIgQ19QSVBFID0gJ3wnO1xudmFyIENfQ09MT04gPSAnOic7XG52YXIgQ19TUEFDRSA9ICcgJztcbnZhciBDX05FV0xJTkUgPSAnXFxuJztcbnZhciBDX1RBQiA9ICdcXHQnO1xuXG52YXIgTUlOX1RBQkxFX0NPTFVNTlMgPSAxO1xudmFyIE1JTl9UQUJMRV9ST1dTID0gMjtcblxudmFyIFRBQkxFX0FMSUdOX0xFRlQgPSAnbGVmdCc7XG52YXIgVEFCTEVfQUxJR05fQ0VOVEVSID0gJ2NlbnRlcic7XG52YXIgVEFCTEVfQUxJR05fUklHSFQgPSAncmlnaHQnO1xudmFyIFRBQkxFX0FMSUdOX05PTkUgPSBudWxsO1xuXG5mdW5jdGlvbiB0YWJsZShlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgaW5kZXg7XG4gIHZhciBhbGlnbm1lbnRzO1xuICB2YXIgYWxpZ25tZW50O1xuICB2YXIgc3VidmFsdWU7XG4gIHZhciByb3c7XG4gIHZhciBsZW5ndGg7XG4gIHZhciBsaW5lcztcbiAgdmFyIHF1ZXVlO1xuICB2YXIgY2hhcmFjdGVyO1xuICB2YXIgaGFzRGFzaDtcbiAgdmFyIGFsaWduO1xuICB2YXIgY2VsbDtcbiAgdmFyIHByZWFtYmxlO1xuICB2YXIgY291bnQ7XG4gIHZhciBvcGVuaW5nO1xuICB2YXIgbm93O1xuICB2YXIgcG9zaXRpb247XG4gIHZhciBsaW5lQ291bnQ7XG4gIHZhciBsaW5lO1xuICB2YXIgcm93cztcbiAgdmFyIHRhYmxlO1xuICB2YXIgbGluZUluZGV4O1xuICB2YXIgcGlwZUluZGV4O1xuICB2YXIgZmlyc3Q7XG5cbiAgLyogRXhpdCB3aGVuIG5vdCBpbiBnZm0tbW9kZS4gKi9cbiAgaWYgKCFzZWxmLm9wdGlvbnMuZ2ZtKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyogR2V0IHRoZSByb3dzLlxuICAgKiBEZXRlY3RpbmcgdGFibGVzIHNvb24gaXMgaGFyZCwgc28gdGhlcmUgYXJlIHNvbWVcbiAgICogY2hlY2tzIGZvciBwZXJmb3JtYW5jZSBoZXJlLCBzdWNoIGFzIHRoZSBtaW5pbXVtXG4gICAqIG51bWJlciBvZiByb3dzLCBhbmQgYWxsb3dlZCBjaGFyYWN0ZXJzIGluIHRoZVxuICAgKiBhbGlnbm1lbnQgcm93LiAqL1xuICBpbmRleCA9IDA7XG4gIGxpbmVDb3VudCA9IDA7XG4gIGxlbmd0aCA9IHZhbHVlLmxlbmd0aCArIDE7XG4gIGxpbmVzID0gW107XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgbGluZUluZGV4ID0gdmFsdWUuaW5kZXhPZihDX05FV0xJTkUsIGluZGV4KTtcbiAgICBwaXBlSW5kZXggPSB2YWx1ZS5pbmRleE9mKENfUElQRSwgaW5kZXggKyAxKTtcblxuICAgIGlmIChsaW5lSW5kZXggPT09IC0xKSB7XG4gICAgICBsaW5lSW5kZXggPSB2YWx1ZS5sZW5ndGg7XG4gICAgfVxuXG4gICAgaWYgKHBpcGVJbmRleCA9PT0gLTEgfHwgcGlwZUluZGV4ID4gbGluZUluZGV4KSB7XG4gICAgICBpZiAobGluZUNvdW50IDwgTUlOX1RBQkxFX1JPV1MpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBsaW5lcy5wdXNoKHZhbHVlLnNsaWNlKGluZGV4LCBsaW5lSW5kZXgpKTtcbiAgICBsaW5lQ291bnQrKztcbiAgICBpbmRleCA9IGxpbmVJbmRleCArIDE7XG4gIH1cblxuICAvKiBQYXJzZSB0aGUgYWxpZ25tZW50IHJvdy4gKi9cbiAgc3VidmFsdWUgPSBsaW5lcy5qb2luKENfTkVXTElORSk7XG4gIGFsaWdubWVudHMgPSBsaW5lcy5zcGxpY2UoMSwgMSlbMF0gfHwgW107XG4gIGluZGV4ID0gMDtcbiAgbGVuZ3RoID0gYWxpZ25tZW50cy5sZW5ndGg7XG4gIGxpbmVDb3VudC0tO1xuICBhbGlnbm1lbnQgPSBmYWxzZTtcbiAgYWxpZ24gPSBbXTtcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSBhbGlnbm1lbnRzLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX1BJUEUpIHtcbiAgICAgIGhhc0Rhc2ggPSBudWxsO1xuXG4gICAgICBpZiAoYWxpZ25tZW50ID09PSBmYWxzZSkge1xuICAgICAgICBpZiAoZmlyc3QgPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbGlnbi5wdXNoKGFsaWdubWVudCk7XG4gICAgICAgIGFsaWdubWVudCA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBmaXJzdCA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX0RBU0gpIHtcbiAgICAgIGhhc0Rhc2ggPSB0cnVlO1xuICAgICAgYWxpZ25tZW50ID0gYWxpZ25tZW50IHx8IFRBQkxFX0FMSUdOX05PTkU7XG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09IENfQ09MT04pIHtcbiAgICAgIGlmIChhbGlnbm1lbnQgPT09IFRBQkxFX0FMSUdOX0xFRlQpIHtcbiAgICAgICAgYWxpZ25tZW50ID0gVEFCTEVfQUxJR05fQ0VOVEVSO1xuICAgICAgfSBlbHNlIGlmIChoYXNEYXNoICYmIGFsaWdubWVudCA9PT0gVEFCTEVfQUxJR05fTk9ORSkge1xuICAgICAgICBhbGlnbm1lbnQgPSBUQUJMRV9BTElHTl9SSUdIVDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFsaWdubWVudCA9IFRBQkxFX0FMSUdOX0xFRlQ7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghd2hpdGVzcGFjZShjaGFyYWN0ZXIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmIChhbGlnbm1lbnQgIT09IGZhbHNlKSB7XG4gICAgYWxpZ24ucHVzaChhbGlnbm1lbnQpO1xuICB9XG5cbiAgLyogRXhpdCB3aGVuIHdpdGhvdXQgZW5vdWdoIGNvbHVtbnMuICovXG4gIGlmIChhbGlnbi5sZW5ndGggPCBNSU5fVEFCTEVfQ09MVU1OUykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5ldmVyIHVzZWQgKHlldCkgKi9cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyogUGFyc2UgdGhlIHJvd3MuICovXG4gIHBvc2l0aW9uID0gLTE7XG4gIHJvd3MgPSBbXTtcblxuICB0YWJsZSA9IGVhdChzdWJ2YWx1ZSkucmVzZXQoe1xuICAgIHR5cGU6ICd0YWJsZScsXG4gICAgYWxpZ246IGFsaWduLFxuICAgIGNoaWxkcmVuOiByb3dzXG4gIH0pO1xuXG4gIHdoaWxlICgrK3Bvc2l0aW9uIDwgbGluZUNvdW50KSB7XG4gICAgbGluZSA9IGxpbmVzW3Bvc2l0aW9uXTtcbiAgICByb3cgPSB7dHlwZTogJ3RhYmxlUm93JywgY2hpbGRyZW46IFtdfTtcblxuICAgIC8qIEVhdCBhIG5ld2xpbmUgY2hhcmFjdGVyIHdoZW4gdGhpcyBpcyBub3QgdGhlXG4gICAgICogZmlyc3Qgcm93LiAqL1xuICAgIGlmIChwb3NpdGlvbikge1xuICAgICAgZWF0KENfTkVXTElORSk7XG4gICAgfVxuXG4gICAgLyogRWF0IHRoZSByb3cuICovXG4gICAgZWF0KGxpbmUpLnJlc2V0KHJvdywgdGFibGUpO1xuXG4gICAgbGVuZ3RoID0gbGluZS5sZW5ndGggKyAxO1xuICAgIGluZGV4ID0gMDtcbiAgICBxdWV1ZSA9ICcnO1xuICAgIGNlbGwgPSAnJztcbiAgICBwcmVhbWJsZSA9IHRydWU7XG4gICAgY291bnQgPSBudWxsO1xuICAgIG9wZW5pbmcgPSBudWxsO1xuXG4gICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBjaGFyYWN0ZXIgPSBsaW5lLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgPT09IENfVEFCIHx8IGNoYXJhY3RlciA9PT0gQ19TUEFDRSkge1xuICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlYXQoY2hhcmFjdGVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGluZGV4Kys7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2hhcmFjdGVyID09PSAnJyB8fCBjaGFyYWN0ZXIgPT09IENfUElQRSkge1xuICAgICAgICBpZiAocHJlYW1ibGUpIHtcbiAgICAgICAgICBlYXQoY2hhcmFjdGVyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoY2hhcmFjdGVyICYmIG9wZW5pbmcpIHtcbiAgICAgICAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgICAgICAgIGluZGV4Kys7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoKGNlbGwgfHwgY2hhcmFjdGVyKSAmJiAhcHJlYW1ibGUpIHtcbiAgICAgICAgICAgIHN1YnZhbHVlID0gY2VsbDtcblxuICAgICAgICAgICAgaWYgKHF1ZXVlLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgaWYgKGNoYXJhY3Rlcikge1xuICAgICAgICAgICAgICAgIHN1YnZhbHVlICs9IHF1ZXVlLnNsaWNlKDAsIHF1ZXVlLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICAgIHF1ZXVlID0gcXVldWUuY2hhckF0KHF1ZXVlLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN1YnZhbHVlICs9IHF1ZXVlO1xuICAgICAgICAgICAgICAgIHF1ZXVlID0gJyc7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbm93ID0gZWF0Lm5vdygpO1xuXG4gICAgICAgICAgICBlYXQoc3VidmFsdWUpKHtcbiAgICAgICAgICAgICAgdHlwZTogJ3RhYmxlQ2VsbCcsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBzZWxmLnRva2VuaXplSW5saW5lKGNlbGwsIG5vdylcbiAgICAgICAgICAgIH0sIHJvdyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZWF0KHF1ZXVlICsgY2hhcmFjdGVyKTtcblxuICAgICAgICAgIHF1ZXVlID0gJyc7XG4gICAgICAgICAgY2VsbCA9ICcnO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocXVldWUpIHtcbiAgICAgICAgICBjZWxsICs9IHF1ZXVlO1xuICAgICAgICAgIHF1ZXVlID0gJyc7XG4gICAgICAgIH1cblxuICAgICAgICBjZWxsICs9IGNoYXJhY3RlcjtcblxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSBDX0JBQ0tTTEFTSCAmJiBpbmRleCAhPT0gbGVuZ3RoIC0gMikge1xuICAgICAgICAgIGNlbGwgKz0gbGluZS5jaGFyQXQoaW5kZXggKyAxKTtcbiAgICAgICAgICBpbmRleCsrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19USUNLKSB7XG4gICAgICAgICAgY291bnQgPSAxO1xuXG4gICAgICAgICAgd2hpbGUgKGxpbmUuY2hhckF0KGluZGV4ICsgMSkgPT09IGNoYXJhY3Rlcikge1xuICAgICAgICAgICAgY2VsbCArPSBjaGFyYWN0ZXI7XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIW9wZW5pbmcpIHtcbiAgICAgICAgICAgIG9wZW5pbmcgPSBjb3VudDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNvdW50ID49IG9wZW5pbmcpIHtcbiAgICAgICAgICAgIG9wZW5pbmcgPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwcmVhbWJsZSA9IGZhbHNlO1xuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICAvKiBFYXQgdGhlIGFsaWdubWVudCByb3cuICovXG4gICAgaWYgKCFwb3NpdGlvbikge1xuICAgICAgZWF0KENfTkVXTElORSArIGFsaWdubWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YWJsZTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHRyaW0gPSByZXF1aXJlKCd0cmltJyk7XG52YXIgZGVjaW1hbCA9IHJlcXVpcmUoJ2lzLWRlY2ltYWwnKTtcbnZhciB0cmltVHJhaWxpbmdMaW5lcyA9IHJlcXVpcmUoJ3RyaW0tdHJhaWxpbmctbGluZXMnKTtcbnZhciBpbnRlcnJ1cHQgPSByZXF1aXJlKCcuLi91dGlsL2ludGVycnVwdCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcmFncmFwaDtcblxudmFyIENfTkVXTElORSA9ICdcXG4nO1xudmFyIENfVEFCID0gJ1xcdCc7XG52YXIgQ19TUEFDRSA9ICcgJztcblxudmFyIFRBQl9TSVpFID0gNDtcblxuLyogVG9rZW5pc2UgcGFyYWdyYXBoLiAqL1xuZnVuY3Rpb24gcGFyYWdyYXBoKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzZXR0aW5ncyA9IHNlbGYub3B0aW9ucztcbiAgdmFyIGNvbW1vbm1hcmsgPSBzZXR0aW5ncy5jb21tb25tYXJrO1xuICB2YXIgZ2ZtID0gc2V0dGluZ3MuZ2ZtO1xuICB2YXIgdG9rZW5pemVycyA9IHNlbGYuYmxvY2tUb2tlbml6ZXJzO1xuICB2YXIgaW50ZXJydXB0b3JzID0gc2VsZi5pbnRlcnJ1cHRQYXJhZ3JhcGg7XG4gIHZhciBpbmRleCA9IHZhbHVlLmluZGV4T2YoQ19ORVdMSU5FKTtcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcbiAgdmFyIHBvc2l0aW9uO1xuICB2YXIgc3VidmFsdWU7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciBzaXplO1xuICB2YXIgbm93O1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIC8qIEVhdCBldmVyeXRoaW5nIGlmIHRoZXJl4oCZcyBubyBmb2xsb3dpbmcgbmV3bGluZS4gKi9cbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICBpbmRleCA9IGxlbmd0aDtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8qIFN0b3AgaWYgdGhlIG5leHQgY2hhcmFjdGVyIGlzIE5FV0xJTkUuICovXG4gICAgaWYgKHZhbHVlLmNoYXJBdChpbmRleCArIDEpID09PSBDX05FV0xJTkUpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8qIEluIGNvbW1vbm1hcmstbW9kZSwgZm9sbG93aW5nIGluZGVudGVkIGxpbmVzXG4gICAgICogYXJlIHBhcnQgb2YgdGhlIHBhcmFncmFwaC4gKi9cbiAgICBpZiAoY29tbW9ubWFyaykge1xuICAgICAgc2l6ZSA9IDA7XG4gICAgICBwb3NpdGlvbiA9IGluZGV4ICsgMTtcblxuICAgICAgd2hpbGUgKHBvc2l0aW9uIDwgbGVuZ3RoKSB7XG4gICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChwb3NpdGlvbik7XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19UQUIpIHtcbiAgICAgICAgICBzaXplID0gVEFCX1NJWkU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX1NQQUNFKSB7XG4gICAgICAgICAgc2l6ZSsrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9zaXRpb24rKztcbiAgICAgIH1cblxuICAgICAgaWYgKHNpemUgPj0gVEFCX1NJWkUpIHtcbiAgICAgICAgaW5kZXggPSB2YWx1ZS5pbmRleE9mKENfTkVXTElORSwgaW5kZXggKyAxKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3VidmFsdWUgPSB2YWx1ZS5zbGljZShpbmRleCArIDEpO1xuXG4gICAgLyogQ2hlY2sgaWYgdGhlIGZvbGxvd2luZyBjb2RlIGNvbnRhaW5zIGEgcG9zc2libGVcbiAgICAgKiBibG9jay4gKi9cbiAgICBpZiAoaW50ZXJydXB0KGludGVycnVwdG9ycywgdG9rZW5pemVycywgc2VsZiwgW2VhdCwgc3VidmFsdWUsIHRydWVdKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgLyogQnJlYWsgaWYgdGhlIGZvbGxvd2luZyBsaW5lIHN0YXJ0cyBhIGxpc3QsIHdoZW5cbiAgICAgKiBhbHJlYWR5IGluIGEgbGlzdCwgb3Igd2hlbiBpbiBjb21tb25tYXJrLCBvciB3aGVuXG4gICAgICogaW4gZ2ZtIG1vZGUgYW5kIHRoZSBidWxsZXQgaXMgKm5vdCogbnVtZXJpYy4gKi9cbiAgICBpZiAoXG4gICAgICB0b2tlbml6ZXJzLmxpc3QuY2FsbChzZWxmLCBlYXQsIHN1YnZhbHVlLCB0cnVlKSAmJlxuICAgICAgKFxuICAgICAgICBzZWxmLmluTGlzdCB8fFxuICAgICAgICBjb21tb25tYXJrIHx8XG4gICAgICAgIChnZm0gJiYgIWRlY2ltYWwodHJpbS5sZWZ0KHN1YnZhbHVlKS5jaGFyQXQoMCkpKVxuICAgICAgKVxuICAgICkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcG9zaXRpb24gPSBpbmRleDtcbiAgICBpbmRleCA9IHZhbHVlLmluZGV4T2YoQ19ORVdMSU5FLCBpbmRleCArIDEpO1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSAmJiB0cmltKHZhbHVlLnNsaWNlKHBvc2l0aW9uLCBpbmRleCkpID09PSAnJykge1xuICAgICAgaW5kZXggPSBwb3NpdGlvbjtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHN1YnZhbHVlID0gdmFsdWUuc2xpY2UoMCwgaW5kZXgpO1xuXG4gIGlmICh0cmltKHN1YnZhbHVlKSA9PT0gJycpIHtcbiAgICBlYXQoc3VidmFsdWUpO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgLSBuZXZlciB1c2VkICh5ZXQpICovXG4gIGlmIChzaWxlbnQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIG5vdyA9IGVhdC5ub3coKTtcbiAgc3VidmFsdWUgPSB0cmltVHJhaWxpbmdMaW5lcyhzdWJ2YWx1ZSk7XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe1xuICAgIHR5cGU6ICdwYXJhZ3JhcGgnLFxuICAgIGNoaWxkcmVuOiBzZWxmLnRva2VuaXplSW5saW5lKHN1YnZhbHVlLCBub3cpXG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbG9jYXRlID0gcmVxdWlyZSgnLi4vbG9jYXRlL2VzY2FwZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVzY2FwZTtcbmVzY2FwZS5sb2NhdG9yID0gbG9jYXRlO1xuXG5mdW5jdGlvbiBlc2NhcGUoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIGNoYXJhY3RlcjtcbiAgdmFyIG5vZGU7XG5cbiAgaWYgKHZhbHVlLmNoYXJBdCgwKSA9PT0gJ1xcXFwnKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KDEpO1xuXG4gICAgaWYgKHNlbGYuZXNjYXBlLmluZGV4T2YoY2hhcmFjdGVyKSAhPT0gLTEpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5ldmVyIHVzZWQgKHlldCkgKi9cbiAgICAgIGlmIChzaWxlbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgPT09ICdcXG4nKSB7XG4gICAgICAgIG5vZGUgPSB7dHlwZTogJ2JyZWFrJ307XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlID0ge1xuICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICB2YWx1ZTogY2hhcmFjdGVyXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBlYXQoJ1xcXFwnICsgY2hhcmFjdGVyKShub2RlKTtcbiAgICB9XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBsb2NhdGU7XG5cbmZ1bmN0aW9uIGxvY2F0ZSh2YWx1ZSwgZnJvbUluZGV4KSB7XG4gIHJldHVybiB2YWx1ZS5pbmRleE9mKCdcXFxcJywgZnJvbUluZGV4KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHdoaXRlc3BhY2UgPSByZXF1aXJlKCdpcy13aGl0ZXNwYWNlLWNoYXJhY3RlcicpO1xudmFyIGRlY29kZSA9IHJlcXVpcmUoJ3BhcnNlLWVudGl0aWVzJyk7XG52YXIgbG9jYXRlID0gcmVxdWlyZSgnLi4vbG9jYXRlL3RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF1dG9MaW5rO1xuYXV0b0xpbmsubG9jYXRvciA9IGxvY2F0ZTtcbmF1dG9MaW5rLm5vdEluTGluayA9IHRydWU7XG5cbnZhciBDX0xUID0gJzwnO1xudmFyIENfR1QgPSAnPic7XG52YXIgQ19BVF9TSUdOID0gJ0AnO1xudmFyIENfU0xBU0ggPSAnLyc7XG52YXIgTUFJTFRPID0gJ21haWx0bzonO1xudmFyIE1BSUxUT19MRU5HVEggPSBNQUlMVE8ubGVuZ3RoO1xuXG4vKiBUb2tlbmlzZSBhIGxpbmsuICovXG5mdW5jdGlvbiBhdXRvTGluayhlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGY7XG4gIHZhciBzdWJ2YWx1ZTtcbiAgdmFyIGxlbmd0aDtcbiAgdmFyIGluZGV4O1xuICB2YXIgcXVldWU7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciBoYXNBdENoYXJhY3RlcjtcbiAgdmFyIGxpbms7XG4gIHZhciBub3c7XG4gIHZhciBjb250ZW50O1xuICB2YXIgdG9rZW5pemVycztcbiAgdmFyIGV4aXQ7XG5cbiAgaWYgKHZhbHVlLmNoYXJBdCgwKSAhPT0gQ19MVCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHNlbGYgPSB0aGlzO1xuICBzdWJ2YWx1ZSA9ICcnO1xuICBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIGluZGV4ID0gMDtcbiAgcXVldWUgPSAnJztcbiAgaGFzQXRDaGFyYWN0ZXIgPSBmYWxzZTtcbiAgbGluayA9ICcnO1xuXG4gIGluZGV4Kys7XG4gIHN1YnZhbHVlID0gQ19MVDtcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKFxuICAgICAgd2hpdGVzcGFjZShjaGFyYWN0ZXIpIHx8XG4gICAgICBjaGFyYWN0ZXIgPT09IENfR1QgfHxcbiAgICAgIGNoYXJhY3RlciA9PT0gQ19BVF9TSUdOIHx8XG4gICAgICAoY2hhcmFjdGVyID09PSAnOicgJiYgdmFsdWUuY2hhckF0KGluZGV4ICsgMSkgPT09IENfU0xBU0gpXG4gICAgKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGlmICghcXVldWUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBsaW5rICs9IHF1ZXVlO1xuICBxdWV1ZSA9ICcnO1xuXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gIGxpbmsgKz0gY2hhcmFjdGVyO1xuICBpbmRleCsrO1xuXG4gIGlmIChjaGFyYWN0ZXIgPT09IENfQVRfU0lHTikge1xuICAgIGhhc0F0Q2hhcmFjdGVyID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoXG4gICAgICBjaGFyYWN0ZXIgIT09ICc6JyB8fFxuICAgICAgdmFsdWUuY2hhckF0KGluZGV4ICsgMSkgIT09IENfU0xBU0hcbiAgICApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsaW5rICs9IENfU0xBU0g7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAod2hpdGVzcGFjZShjaGFyYWN0ZXIpIHx8IGNoYXJhY3RlciA9PT0gQ19HVCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gIGlmICghcXVldWUgfHwgY2hhcmFjdGVyICE9PSBDX0dUKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBsaW5rICs9IHF1ZXVlO1xuICBjb250ZW50ID0gbGluaztcbiAgc3VidmFsdWUgKz0gbGluayArIGNoYXJhY3RlcjtcbiAgbm93ID0gZWF0Lm5vdygpO1xuICBub3cuY29sdW1uKys7XG4gIG5vdy5vZmZzZXQrKztcblxuICBpZiAoaGFzQXRDaGFyYWN0ZXIpIHtcbiAgICBpZiAobGluay5zbGljZSgwLCBNQUlMVE9fTEVOR1RIKS50b0xvd2VyQ2FzZSgpID09PSBNQUlMVE8pIHtcbiAgICAgIGNvbnRlbnQgPSBjb250ZW50LnN1YnN0cihNQUlMVE9fTEVOR1RIKTtcbiAgICAgIG5vdy5jb2x1bW4gKz0gTUFJTFRPX0xFTkdUSDtcbiAgICAgIG5vdy5vZmZzZXQgKz0gTUFJTFRPX0xFTkdUSDtcbiAgICB9IGVsc2Uge1xuICAgICAgbGluayA9IE1BSUxUTyArIGxpbms7XG4gICAgfVxuICB9XG5cbiAgLyogVGVtcG9yYXJpbHkgcmVtb3ZlIGFsbCB0b2tlbml6ZXJzIGV4Y2VwdCB0ZXh0IGluIGF1dG9saW5rcy4gKi9cbiAgdG9rZW5pemVycyA9IHNlbGYuaW5saW5lVG9rZW5pemVycztcbiAgc2VsZi5pbmxpbmVUb2tlbml6ZXJzID0ge3RleHQ6IHRva2VuaXplcnMudGV4dH07XG5cbiAgZXhpdCA9IHNlbGYuZW50ZXJMaW5rKCk7XG5cbiAgY29udGVudCA9IHNlbGYudG9rZW5pemVJbmxpbmUoY29udGVudCwgbm93KTtcblxuICBzZWxmLmlubGluZVRva2VuaXplcnMgPSB0b2tlbml6ZXJzO1xuICBleGl0KCk7XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe1xuICAgIHR5cGU6ICdsaW5rJyxcbiAgICB0aXRsZTogbnVsbCxcbiAgICB1cmw6IGRlY29kZShsaW5rLCB7bm9uVGVybWluYXRlZDogZmFsc2V9KSxcbiAgICBjaGlsZHJlbjogY29udGVudFxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGRlY29kZSA9IHJlcXVpcmUoJ3BhcnNlLWVudGl0aWVzJyk7XG52YXIgd2hpdGVzcGFjZSA9IHJlcXVpcmUoJ2lzLXdoaXRlc3BhY2UtY2hhcmFjdGVyJyk7XG52YXIgbG9jYXRlID0gcmVxdWlyZSgnLi4vbG9jYXRlL3VybCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVybDtcbnVybC5sb2NhdG9yID0gbG9jYXRlO1xudXJsLm5vdEluTGluayA9IHRydWU7XG5cbnZhciBDX0JSQUNLRVRfT1BFTiA9ICdbJztcbnZhciBDX0JSQUNLRVRfQ0xPU0UgPSAnXSc7XG52YXIgQ19QQVJFTl9PUEVOID0gJygnO1xudmFyIENfUEFSRU5fQ0xPU0UgPSAnKSc7XG52YXIgQ19MVCA9ICc8JztcbnZhciBDX0FUX1NJR04gPSAnQCc7XG5cbnZhciBIVFRQX1BST1RPQ09MID0gJ2h0dHA6Ly8nO1xudmFyIEhUVFBTX1BST1RPQ09MID0gJ2h0dHBzOi8vJztcbnZhciBNQUlMVE9fUFJPVE9DT0wgPSAnbWFpbHRvOic7XG5cbnZhciBQUk9UT0NPTFMgPSBbXG4gIEhUVFBfUFJPVE9DT0wsXG4gIEhUVFBTX1BST1RPQ09MLFxuICBNQUlMVE9fUFJPVE9DT0xcbl07XG5cbnZhciBQUk9UT0NPTFNfTEVOR1RIID0gUFJPVE9DT0xTLmxlbmd0aDtcblxuZnVuY3Rpb24gdXJsKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBzdWJ2YWx1ZTtcbiAgdmFyIGNvbnRlbnQ7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciBpbmRleDtcbiAgdmFyIHBvc2l0aW9uO1xuICB2YXIgcHJvdG9jb2w7XG4gIHZhciBtYXRjaDtcbiAgdmFyIGxlbmd0aDtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgcGFyZW5Db3VudDtcbiAgdmFyIG5leHRDaGFyYWN0ZXI7XG4gIHZhciBleGl0O1xuXG4gIGlmICghc2VsZi5vcHRpb25zLmdmbSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHN1YnZhbHVlID0gJyc7XG4gIGluZGV4ID0gLTE7XG4gIGxlbmd0aCA9IFBST1RPQ09MU19MRU5HVEg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBwcm90b2NvbCA9IFBST1RPQ09MU1tpbmRleF07XG4gICAgbWF0Y2ggPSB2YWx1ZS5zbGljZSgwLCBwcm90b2NvbC5sZW5ndGgpO1xuXG4gICAgaWYgKG1hdGNoLnRvTG93ZXJDYXNlKCkgPT09IHByb3RvY29sKSB7XG4gICAgICBzdWJ2YWx1ZSA9IG1hdGNoO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFzdWJ2YWx1ZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGluZGV4ID0gc3VidmFsdWUubGVuZ3RoO1xuICBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHF1ZXVlID0gJyc7XG4gIHBhcmVuQ291bnQgPSAwO1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAod2hpdGVzcGFjZShjaGFyYWN0ZXIpIHx8IGNoYXJhY3RlciA9PT0gQ19MVCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgY2hhcmFjdGVyID09PSAnLicgfHxcbiAgICAgIGNoYXJhY3RlciA9PT0gJywnIHx8XG4gICAgICBjaGFyYWN0ZXIgPT09ICc6JyB8fFxuICAgICAgY2hhcmFjdGVyID09PSAnOycgfHxcbiAgICAgIGNoYXJhY3RlciA9PT0gJ1wiJyB8fFxuICAgICAgY2hhcmFjdGVyID09PSAnXFwnJyB8fFxuICAgICAgY2hhcmFjdGVyID09PSAnKScgfHxcbiAgICAgIGNoYXJhY3RlciA9PT0gJ10nXG4gICAgKSB7XG4gICAgICBuZXh0Q2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4ICsgMSk7XG5cbiAgICAgIGlmICghbmV4dENoYXJhY3RlciB8fCB3aGl0ZXNwYWNlKG5leHRDaGFyYWN0ZXIpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfUEFSRU5fT1BFTiB8fCBjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9PUEVOKSB7XG4gICAgICBwYXJlbkNvdW50Kys7XG4gICAgfVxuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gQ19QQVJFTl9DTE9TRSB8fCBjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9DTE9TRSkge1xuICAgICAgcGFyZW5Db3VudC0tO1xuXG4gICAgICBpZiAocGFyZW5Db3VudCA8IDApIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBpZiAoIXF1ZXVlKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3VidmFsdWUgKz0gcXVldWU7XG4gIGNvbnRlbnQgPSBzdWJ2YWx1ZTtcblxuICBpZiAocHJvdG9jb2wgPT09IE1BSUxUT19QUk9UT0NPTCkge1xuICAgIHBvc2l0aW9uID0gcXVldWUuaW5kZXhPZihDX0FUX1NJR04pO1xuXG4gICAgaWYgKHBvc2l0aW9uID09PSAtMSB8fCBwb3NpdGlvbiA9PT0gbGVuZ3RoIC0gMSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnRlbnQgPSBjb250ZW50LnN1YnN0cihNQUlMVE9fUFJPVE9DT0wubGVuZ3RoKTtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5ldmVyIHVzZWQgKHlldCkgKi9cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgZXhpdCA9IHNlbGYuZW50ZXJMaW5rKCk7XG4gIGNvbnRlbnQgPSBzZWxmLnRva2VuaXplSW5saW5lKGNvbnRlbnQsIGVhdC5ub3coKSk7XG4gIGV4aXQoKTtcblxuICByZXR1cm4gZWF0KHN1YnZhbHVlKSh7XG4gICAgdHlwZTogJ2xpbmsnLFxuICAgIHRpdGxlOiBudWxsLFxuICAgIHVybDogZGVjb2RlKHN1YnZhbHVlLCB7bm9uVGVybWluYXRlZDogZmFsc2V9KSxcbiAgICBjaGlsZHJlbjogY29udGVudFxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBsb2NhdGU7XG5cbnZhciBQUk9UT0NPTFMgPSBbJ2h0dHBzOi8vJywgJ2h0dHA6Ly8nLCAnbWFpbHRvOiddO1xuXG5mdW5jdGlvbiBsb2NhdGUodmFsdWUsIGZyb21JbmRleCkge1xuICB2YXIgbGVuZ3RoID0gUFJPVE9DT0xTLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHZhciBtaW4gPSAtMTtcbiAgdmFyIHBvc2l0aW9uO1xuXG4gIGlmICghdGhpcy5vcHRpb25zLmdmbSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcG9zaXRpb24gPSB2YWx1ZS5pbmRleE9mKFBST1RPQ09MU1tpbmRleF0sIGZyb21JbmRleCk7XG5cbiAgICBpZiAocG9zaXRpb24gIT09IC0xICYmIChwb3NpdGlvbiA8IG1pbiB8fCBtaW4gPT09IC0xKSkge1xuICAgICAgbWluID0gcG9zaXRpb247XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1pbjtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFscGhhYmV0aWNhbCA9IHJlcXVpcmUoJ2lzLWFscGhhYmV0aWNhbCcpO1xudmFyIGxvY2F0ZSA9IHJlcXVpcmUoJy4uL2xvY2F0ZS90YWcnKTtcbnZhciB0YWcgPSByZXF1aXJlKCcuLi91dGlsL2h0bWwnKS50YWc7XG5cbm1vZHVsZS5leHBvcnRzID0gaW5saW5lSFRNTDtcbmlubGluZUhUTUwubG9jYXRvciA9IGxvY2F0ZTtcblxudmFyIEVYUFJFU1NJT05fSFRNTF9MSU5LX09QRU4gPSAvXjxhIC9pO1xudmFyIEVYUFJFU1NJT05fSFRNTF9MSU5LX0NMT1NFID0gL148XFwvYT4vaTtcblxuZnVuY3Rpb24gaW5saW5lSFRNTChlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICB2YXIgY2hhcmFjdGVyO1xuICB2YXIgc3VidmFsdWU7XG5cbiAgaWYgKHZhbHVlLmNoYXJBdCgwKSAhPT0gJzwnIHx8IGxlbmd0aCA8IDMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoMSk7XG5cbiAgaWYgKFxuICAgICFhbHBoYWJldGljYWwoY2hhcmFjdGVyKSAmJlxuICAgIGNoYXJhY3RlciAhPT0gJz8nICYmXG4gICAgY2hhcmFjdGVyICE9PSAnIScgJiZcbiAgICBjaGFyYWN0ZXIgIT09ICcvJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBzdWJ2YWx1ZSA9IHZhbHVlLm1hdGNoKHRhZyk7XG5cbiAgaWYgKCFzdWJ2YWx1ZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5vdCB1c2VkIHlldC4gKi9cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgc3VidmFsdWUgPSBzdWJ2YWx1ZVswXTtcblxuICBpZiAoIXNlbGYuaW5MaW5rICYmIEVYUFJFU1NJT05fSFRNTF9MSU5LX09QRU4udGVzdChzdWJ2YWx1ZSkpIHtcbiAgICBzZWxmLmluTGluayA9IHRydWU7XG4gIH0gZWxzZSBpZiAoc2VsZi5pbkxpbmsgJiYgRVhQUkVTU0lPTl9IVE1MX0xJTktfQ0xPU0UudGVzdChzdWJ2YWx1ZSkpIHtcbiAgICBzZWxmLmluTGluayA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe3R5cGU6ICdodG1sJywgdmFsdWU6IHN1YnZhbHVlfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBsb2NhdGUgPSByZXF1aXJlKCcuLi9sb2NhdGUvbGluaycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxpbms7XG5saW5rLmxvY2F0b3IgPSBsb2NhdGU7XG5cbnZhciBvd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIENfQkFDS1NMQVNIID0gJ1xcXFwnO1xudmFyIENfQlJBQ0tFVF9PUEVOID0gJ1snO1xudmFyIENfQlJBQ0tFVF9DTE9TRSA9ICddJztcbnZhciBDX1BBUkVOX09QRU4gPSAnKCc7XG52YXIgQ19QQVJFTl9DTE9TRSA9ICcpJztcbnZhciBDX0xUID0gJzwnO1xudmFyIENfR1QgPSAnPic7XG52YXIgQ19USUNLID0gJ2AnO1xudmFyIENfRE9VQkxFX1FVT1RFID0gJ1wiJztcbnZhciBDX1NJTkdMRV9RVU9URSA9ICdcXCcnO1xuXG4vKiBNYXAgb2YgY2hhcmFjdGVycywgd2hpY2ggY2FuIGJlIHVzZWQgdG8gbWFyayBsaW5rXG4gKiBhbmQgaW1hZ2UgdGl0bGVzLiAqL1xudmFyIExJTktfTUFSS0VSUyA9IHt9O1xuXG5MSU5LX01BUktFUlNbQ19ET1VCTEVfUVVPVEVdID0gQ19ET1VCTEVfUVVPVEU7XG5MSU5LX01BUktFUlNbQ19TSU5HTEVfUVVPVEVdID0gQ19TSU5HTEVfUVVPVEU7XG5cbi8qIE1hcCBvZiBjaGFyYWN0ZXJzLCB3aGljaCBjYW4gYmUgdXNlZCB0byBtYXJrIGxpbmtcbiAqIGFuZCBpbWFnZSB0aXRsZXMgaW4gY29tbW9ubWFyay1tb2RlLiAqL1xudmFyIENPTU1PTk1BUktfTElOS19NQVJLRVJTID0ge307XG5cbkNPTU1PTk1BUktfTElOS19NQVJLRVJTW0NfRE9VQkxFX1FVT1RFXSA9IENfRE9VQkxFX1FVT1RFO1xuQ09NTU9OTUFSS19MSU5LX01BUktFUlNbQ19TSU5HTEVfUVVPVEVdID0gQ19TSU5HTEVfUVVPVEU7XG5DT01NT05NQVJLX0xJTktfTUFSS0VSU1tDX1BBUkVOX09QRU5dID0gQ19QQVJFTl9DTE9TRTtcblxuZnVuY3Rpb24gbGluayhlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgc3VidmFsdWUgPSAnJztcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgwKTtcbiAgdmFyIHBlZGFudGljID0gc2VsZi5vcHRpb25zLnBlZGFudGljO1xuICB2YXIgY29tbW9ubWFyayA9IHNlbGYub3B0aW9ucy5jb21tb25tYXJrO1xuICB2YXIgZ2ZtID0gc2VsZi5vcHRpb25zLmdmbTtcbiAgdmFyIGNsb3NlZDtcbiAgdmFyIGNvdW50O1xuICB2YXIgb3BlbmluZztcbiAgdmFyIGJlZm9yZVVSTDtcbiAgdmFyIGJlZm9yZVRpdGxlO1xuICB2YXIgc3VicXVldWU7XG4gIHZhciBoYXNNYXJrZXI7XG4gIHZhciBtYXJrZXJzO1xuICB2YXIgaXNJbWFnZTtcbiAgdmFyIGNvbnRlbnQ7XG4gIHZhciBtYXJrZXI7XG4gIHZhciBsZW5ndGg7XG4gIHZhciB0aXRsZTtcbiAgdmFyIGRlcHRoO1xuICB2YXIgcXVldWU7XG4gIHZhciB1cmw7XG4gIHZhciBub3c7XG4gIHZhciBleGl0O1xuICB2YXIgbm9kZTtcblxuICAvKiBEZXRlY3Qgd2hldGhlciB0aGlzIGlzIGFuIGltYWdlLiAqL1xuICBpZiAoY2hhcmFjdGVyID09PSAnIScpIHtcbiAgICBpc0ltYWdlID0gdHJ1ZTtcbiAgICBzdWJ2YWx1ZSA9IGNoYXJhY3RlcjtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoKytpbmRleCk7XG4gIH1cblxuICAvKiBFYXQgdGhlIG9wZW5pbmcuICovXG4gIGlmIChjaGFyYWN0ZXIgIT09IENfQlJBQ0tFVF9PUEVOKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyogRXhpdCB3aGVuIHRoaXMgaXMgYSBsaW5rIGFuZCB3ZeKAmXJlIGFscmVhZHkgaW5zaWRlXG4gICAqIGEgbGluay4gKi9cbiAgaWYgKCFpc0ltYWdlICYmIHNlbGYuaW5MaW5rKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICBxdWV1ZSA9ICcnO1xuICBpbmRleCsrO1xuXG4gIC8qIEVhdCB0aGUgY29udGVudC4gKi9cbiAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICBub3cgPSBlYXQubm93KCk7XG4gIGRlcHRoID0gMDtcblxuICBub3cuY29sdW1uICs9IGluZGV4O1xuICBub3cub2Zmc2V0ICs9IGluZGV4O1xuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG4gICAgc3VicXVldWUgPSBjaGFyYWN0ZXI7XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX1RJQ0spIHtcbiAgICAgIC8qIElubGluZS1jb2RlIGluIGxpbmsgY29udGVudC4gKi9cbiAgICAgIGNvdW50ID0gMTtcblxuICAgICAgd2hpbGUgKHZhbHVlLmNoYXJBdChpbmRleCArIDEpID09PSBDX1RJQ0spIHtcbiAgICAgICAgc3VicXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgICBpbmRleCsrO1xuICAgICAgICBjb3VudCsrO1xuICAgICAgfVxuXG4gICAgICBpZiAoIW9wZW5pbmcpIHtcbiAgICAgICAgb3BlbmluZyA9IGNvdW50O1xuICAgICAgfSBlbHNlIGlmIChjb3VudCA+PSBvcGVuaW5nKSB7XG4gICAgICAgIG9wZW5pbmcgPSAwO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX0JBQ0tTTEFTSCkge1xuICAgICAgLyogQWxsb3cgYnJhY2tldHMgdG8gYmUgZXNjYXBlZC4gKi9cbiAgICAgIGluZGV4Kys7XG4gICAgICBzdWJxdWV1ZSArPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICAgIC8qIEluIEdGTSBtb2RlLCBicmFja2V0cyBpbiBjb2RlIHN0aWxsIGNvdW50LlxuICAgICAqIEluIGFsbCBvdGhlciBtb2RlcywgdGhleSBkb27igJl0LiAgVGhpcyBlbXB0eVxuICAgICAqIGJsb2NrIHByZXZlbnRzIHRoZSBuZXh0IHN0YXRlbWVudHMgYXJlXG4gICAgICogZW50ZXJlZC4gKi9cbiAgICB9IGVsc2UgaWYgKCghb3BlbmluZyB8fCBnZm0pICYmIGNoYXJhY3RlciA9PT0gQ19CUkFDS0VUX09QRU4pIHtcbiAgICAgIGRlcHRoKys7XG4gICAgfSBlbHNlIGlmICgoIW9wZW5pbmcgfHwgZ2ZtKSAmJiBjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9DTE9TRSkge1xuICAgICAgaWYgKGRlcHRoKSB7XG4gICAgICAgIGRlcHRoLS07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvKiBBbGxvdyB3aGl0ZS1zcGFjZSBiZXR3ZWVuIGNvbnRlbnQgYW5kXG4gICAgICAgICAqIHVybCBpbiBHRk0gbW9kZS4gKi9cbiAgICAgICAgaWYgKCFwZWRhbnRpYykge1xuICAgICAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4ICsgMSk7XG5cbiAgICAgICAgICAgIGlmICghd2hpdGVzcGFjZShjaGFyYWN0ZXIpKSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdWJxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5jaGFyQXQoaW5kZXggKyAxKSAhPT0gQ19QQVJFTl9PUEVOKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VicXVldWUgKz0gQ19QQVJFTl9PUEVOO1xuICAgICAgICBjbG9zZWQgPSB0cnVlO1xuICAgICAgICBpbmRleCsrO1xuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIHF1ZXVlICs9IHN1YnF1ZXVlO1xuICAgIHN1YnF1ZXVlID0gJyc7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIC8qIEVhdCB0aGUgY29udGVudCBjbG9zaW5nLiAqL1xuICBpZiAoIWNsb3NlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnRlbnQgPSBxdWV1ZTtcbiAgc3VidmFsdWUgKz0gcXVldWUgKyBzdWJxdWV1ZTtcbiAgaW5kZXgrKztcblxuICAvKiBFYXQgd2hpdGUtc3BhY2UuICovXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICBpZiAoIXdoaXRlc3BhY2UoY2hhcmFjdGVyKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICAvKiBFYXQgdGhlIFVSTC4gKi9cbiAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcbiAgbWFya2VycyA9IGNvbW1vbm1hcmsgPyBDT01NT05NQVJLX0xJTktfTUFSS0VSUyA6IExJTktfTUFSS0VSUztcbiAgcXVldWUgPSAnJztcbiAgYmVmb3JlVVJMID0gc3VidmFsdWU7XG5cbiAgaWYgKGNoYXJhY3RlciA9PT0gQ19MVCkge1xuICAgIGluZGV4Kys7XG4gICAgYmVmb3JlVVJMICs9IENfTFQ7XG5cbiAgICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgPT09IENfR1QpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb21tb25tYXJrICYmIGNoYXJhY3RlciA9PT0gJ1xcbicpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIGlmICh2YWx1ZS5jaGFyQXQoaW5kZXgpICE9PSBDX0dUKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gQ19MVCArIHF1ZXVlICsgQ19HVDtcbiAgICB1cmwgPSBxdWV1ZTtcbiAgICBpbmRleCsrO1xuICB9IGVsc2Uge1xuICAgIGNoYXJhY3RlciA9IG51bGw7XG4gICAgc3VicXVldWUgPSAnJztcblxuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgICAgaWYgKHN1YnF1ZXVlICYmIG93bi5jYWxsKG1hcmtlcnMsIGNoYXJhY3RlcikpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmICh3aGl0ZXNwYWNlKGNoYXJhY3RlcikpIHtcbiAgICAgICAgaWYgKCFwZWRhbnRpYykge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VicXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19QQVJFTl9PUEVOKSB7XG4gICAgICAgICAgZGVwdGgrKztcbiAgICAgICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09IENfUEFSRU5fQ0xPU0UpIHtcbiAgICAgICAgICBpZiAoZGVwdGggPT09IDApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRlcHRoLS07XG4gICAgICAgIH1cblxuICAgICAgICBxdWV1ZSArPSBzdWJxdWV1ZTtcbiAgICAgICAgc3VicXVldWUgPSAnJztcblxuICAgICAgICBpZiAoY2hhcmFjdGVyID09PSBDX0JBQ0tTTEFTSCkge1xuICAgICAgICAgIHF1ZXVlICs9IENfQkFDS1NMQVNIO1xuICAgICAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgrK2luZGV4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgIH1cblxuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBxdWV1ZTtcbiAgICB1cmwgPSBxdWV1ZTtcbiAgICBpbmRleCA9IHN1YnZhbHVlLmxlbmd0aDtcbiAgfVxuXG4gIC8qIEVhdCB3aGl0ZS1zcGFjZS4gKi9cbiAgcXVldWUgPSAnJztcblxuICB3aGlsZSAoaW5kZXggPCBsZW5ndGgpIHtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKCF3aGl0ZXNwYWNlKGNoYXJhY3RlcikpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuICB9XG5cbiAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcbiAgc3VidmFsdWUgKz0gcXVldWU7XG5cbiAgLyogRWF0IHRoZSB0aXRsZS4gKi9cbiAgaWYgKHF1ZXVlICYmIG93bi5jYWxsKG1hcmtlcnMsIGNoYXJhY3RlcikpIHtcbiAgICBpbmRleCsrO1xuICAgIHN1YnZhbHVlICs9IGNoYXJhY3RlcjtcbiAgICBxdWV1ZSA9ICcnO1xuICAgIG1hcmtlciA9IG1hcmtlcnNbY2hhcmFjdGVyXTtcbiAgICBiZWZvcmVUaXRsZSA9IHN1YnZhbHVlO1xuXG4gICAgLyogSW4gY29tbW9ubWFyay1tb2RlLCB0aGluZ3MgYXJlIHByZXR0eSBlYXN5OiB0aGVcbiAgICAgKiBtYXJrZXIgY2Fubm90IG9jY3VyIGluc2lkZSB0aGUgdGl0bGUuXG4gICAgICpcbiAgICAgKiBOb24tY29tbW9ubWFyayBkb2VzLCBob3dldmVyLCBzdXBwb3J0IG5lc3RlZFxuICAgICAqIGRlbGltaXRlcnMuICovXG4gICAgaWYgKGNvbW1vbm1hcmspIHtcbiAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgICAgIGlmIChjaGFyYWN0ZXIgPT09IG1hcmtlcikge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19CQUNLU0xBU0gpIHtcbiAgICAgICAgICBxdWV1ZSArPSBDX0JBQ0tTTEFTSDtcbiAgICAgICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoKytpbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICBpbmRleCsrO1xuICAgICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICB9XG5cbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgIT09IG1hcmtlcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRpdGxlID0gcXVldWU7XG4gICAgICBzdWJ2YWx1ZSArPSBxdWV1ZSArIGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG5cbiAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgICAgIGlmICghd2hpdGVzcGFjZShjaGFyYWN0ZXIpKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgIGluZGV4Kys7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN1YnF1ZXVlID0gJyc7XG5cbiAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgICAgIGlmIChjaGFyYWN0ZXIgPT09IG1hcmtlcikge1xuICAgICAgICAgIGlmIChoYXNNYXJrZXIpIHtcbiAgICAgICAgICAgIHF1ZXVlICs9IG1hcmtlciArIHN1YnF1ZXVlO1xuICAgICAgICAgICAgc3VicXVldWUgPSAnJztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBoYXNNYXJrZXIgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKCFoYXNNYXJrZXIpIHtcbiAgICAgICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSBDX1BBUkVOX0NMT1NFKSB7XG4gICAgICAgICAgc3VidmFsdWUgKz0gcXVldWUgKyBtYXJrZXIgKyBzdWJxdWV1ZTtcbiAgICAgICAgICB0aXRsZSA9IHF1ZXVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9IGVsc2UgaWYgKHdoaXRlc3BhY2UoY2hhcmFjdGVyKSkge1xuICAgICAgICAgIHN1YnF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBxdWV1ZSArPSBtYXJrZXIgKyBzdWJxdWV1ZSArIGNoYXJhY3RlcjtcbiAgICAgICAgICBzdWJxdWV1ZSA9ICcnO1xuICAgICAgICAgIGhhc01hcmtlciA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5kZXgrKztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAodmFsdWUuY2hhckF0KGluZGV4KSAhPT0gQ19QQVJFTl9DTE9TRSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5ldmVyIHVzZWQgKHlldCkgKi9cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgc3VidmFsdWUgKz0gQ19QQVJFTl9DTE9TRTtcblxuICB1cmwgPSBzZWxmLmRlY29kZS5yYXcoc2VsZi51bmVzY2FwZSh1cmwpLCBlYXQoYmVmb3JlVVJMKS50ZXN0KCkuZW5kLCB7bm9uVGVybWluYXRlZDogZmFsc2V9KTtcblxuICBpZiAodGl0bGUpIHtcbiAgICBiZWZvcmVUaXRsZSA9IGVhdChiZWZvcmVUaXRsZSkudGVzdCgpLmVuZDtcbiAgICB0aXRsZSA9IHNlbGYuZGVjb2RlLnJhdyhzZWxmLnVuZXNjYXBlKHRpdGxlKSwgYmVmb3JlVGl0bGUpO1xuICB9XG5cbiAgbm9kZSA9IHtcbiAgICB0eXBlOiBpc0ltYWdlID8gJ2ltYWdlJyA6ICdsaW5rJyxcbiAgICB0aXRsZTogdGl0bGUgfHwgbnVsbCxcbiAgICB1cmw6IHVybFxuICB9O1xuXG4gIGlmIChpc0ltYWdlKSB7XG4gICAgbm9kZS5hbHQgPSBzZWxmLmRlY29kZS5yYXcoc2VsZi51bmVzY2FwZShjb250ZW50KSwgbm93KSB8fCBudWxsO1xuICB9IGVsc2Uge1xuICAgIGV4aXQgPSBzZWxmLmVudGVyTGluaygpO1xuICAgIG5vZGUuY2hpbGRyZW4gPSBzZWxmLnRva2VuaXplSW5saW5lKGNvbnRlbnQsIG5vdyk7XG4gICAgZXhpdCgpO1xuICB9XG5cbiAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkobm9kZSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBsb2NhdGUgPSByZXF1aXJlKCcuLi9sb2NhdGUvbGluaycpO1xudmFyIG5vcm1hbGl6ZSA9IHJlcXVpcmUoJy4uL3V0aWwvbm9ybWFsaXplJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVmZXJlbmNlO1xucmVmZXJlbmNlLmxvY2F0b3IgPSBsb2NhdGU7XG5cbnZhciBUX0xJTksgPSAnbGluayc7XG52YXIgVF9JTUFHRSA9ICdpbWFnZSc7XG52YXIgVF9GT09UTk9URSA9ICdmb290bm90ZSc7XG52YXIgUkVGRVJFTkNFX1RZUEVfU0hPUlRDVVQgPSAnc2hvcnRjdXQnO1xudmFyIFJFRkVSRU5DRV9UWVBFX0NPTExBUFNFRCA9ICdjb2xsYXBzZWQnO1xudmFyIFJFRkVSRU5DRV9UWVBFX0ZVTEwgPSAnZnVsbCc7XG52YXIgQ19DQVJFVCA9ICdeJztcbnZhciBDX0JBQ0tTTEFTSCA9ICdcXFxcJztcbnZhciBDX0JSQUNLRVRfT1BFTiA9ICdbJztcbnZhciBDX0JSQUNLRVRfQ0xPU0UgPSAnXSc7XG5cbmZ1bmN0aW9uIHJlZmVyZW5jZShlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KDApO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICB2YXIgc3VidmFsdWUgPSAnJztcbiAgdmFyIGludHJvID0gJyc7XG4gIHZhciB0eXBlID0gVF9MSU5LO1xuICB2YXIgcmVmZXJlbmNlVHlwZSA9IFJFRkVSRU5DRV9UWVBFX1NIT1JUQ1VUO1xuICB2YXIgY29udGVudDtcbiAgdmFyIGlkZW50aWZpZXI7XG4gIHZhciBub3c7XG4gIHZhciBub2RlO1xuICB2YXIgZXhpdDtcbiAgdmFyIHF1ZXVlO1xuICB2YXIgYnJhY2tldGVkO1xuICB2YXIgZGVwdGg7XG5cbiAgLyogQ2hlY2sgd2hldGhlciB3ZeKAmXJlIGVhdGluZyBhbiBpbWFnZS4gKi9cbiAgaWYgKGNoYXJhY3RlciA9PT0gJyEnKSB7XG4gICAgdHlwZSA9IFRfSU1BR0U7XG4gICAgaW50cm8gPSBjaGFyYWN0ZXI7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICB9XG5cbiAgaWYgKGNoYXJhY3RlciAhPT0gQ19CUkFDS0VUX09QRU4pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpbmRleCsrO1xuICBpbnRybyArPSBjaGFyYWN0ZXI7XG4gIHF1ZXVlID0gJyc7XG5cbiAgLyogQ2hlY2sgd2hldGhlciB3ZeKAmXJlIGVhdGluZyBhIGZvb3Rub3RlLiAqL1xuICBpZiAoc2VsZi5vcHRpb25zLmZvb3Rub3RlcyAmJiB2YWx1ZS5jaGFyQXQoaW5kZXgpID09PSBDX0NBUkVUKSB7XG4gICAgLyogRXhpdCBpZiBgIVteYCBpcyBmb3VuZCwgc28gdGhlIGAhYCB3aWxsIGJlIHNlZW4gYXMgdGV4dCBhZnRlciB0aGlzLFxuICAgICAqIGFuZCB3ZeKAmWxsIGVudGVyIHRoaXMgZnVuY3Rpb24gYWdhaW4gd2hlbiBgW15gIGlzIGZvdW5kLiAqL1xuICAgIGlmICh0eXBlID09PSBUX0lNQUdFKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaW50cm8gKz0gQ19DQVJFVDtcbiAgICBpbmRleCsrO1xuICAgIHR5cGUgPSBUX0ZPT1ROT1RFO1xuICB9XG5cbiAgLyogRWF0IHRoZSB0ZXh0LiAqL1xuICBkZXB0aCA9IDA7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9PUEVOKSB7XG4gICAgICBicmFja2V0ZWQgPSB0cnVlO1xuICAgICAgZGVwdGgrKztcbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gQ19CUkFDS0VUX0NMT1NFKSB7XG4gICAgICBpZiAoIWRlcHRoKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBkZXB0aC0tO1xuICAgIH1cblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfQkFDS1NMQVNIKSB7XG4gICAgICBxdWV1ZSArPSBDX0JBQ0tTTEFTSDtcbiAgICAgIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdCgrK2luZGV4KTtcbiAgICB9XG5cbiAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIHN1YnZhbHVlID0gcXVldWU7XG4gIGNvbnRlbnQgPSBxdWV1ZTtcbiAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICBpZiAoY2hhcmFjdGVyICE9PSBDX0JSQUNLRVRfQ0xPU0UpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpbmRleCsrO1xuICBzdWJ2YWx1ZSArPSBjaGFyYWN0ZXI7XG4gIHF1ZXVlID0gJyc7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmICghd2hpdGVzcGFjZShjaGFyYWN0ZXIpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgaW5kZXgrKztcbiAgfVxuXG4gIGNoYXJhY3RlciA9IHZhbHVlLmNoYXJBdChpbmRleCk7XG5cbiAgLyogSW5saW5lIGZvb3Rub3RlcyBjYW5ub3QgaGF2ZSBhbiBpZGVudGlmaWVyLiAqL1xuICBpZiAodHlwZSAhPT0gVF9GT09UTk9URSAmJiBjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9PUEVOKSB7XG4gICAgaWRlbnRpZmllciA9ICcnO1xuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuXG4gICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgICBpZiAoY2hhcmFjdGVyID09PSBDX0JSQUNLRVRfT1BFTiB8fCBjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9DTE9TRSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKGNoYXJhY3RlciA9PT0gQ19CQUNLU0xBU0gpIHtcbiAgICAgICAgaWRlbnRpZmllciArPSBDX0JBQ0tTTEFTSDtcbiAgICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICAgICAgfVxuXG4gICAgICBpZGVudGlmaWVyICs9IGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG4gICAgfVxuXG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09IENfQlJBQ0tFVF9DTE9TRSkge1xuICAgICAgcmVmZXJlbmNlVHlwZSA9IGlkZW50aWZpZXIgPyBSRUZFUkVOQ0VfVFlQRV9GVUxMIDogUkVGRVJFTkNFX1RZUEVfQ09MTEFQU0VEO1xuICAgICAgcXVldWUgKz0gaWRlbnRpZmllciArIGNoYXJhY3RlcjtcbiAgICAgIGluZGV4Kys7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlkZW50aWZpZXIgPSAnJztcbiAgICB9XG5cbiAgICBzdWJ2YWx1ZSArPSBxdWV1ZTtcbiAgICBxdWV1ZSA9ICcnO1xuICB9IGVsc2Uge1xuICAgIGlmICghY29udGVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXIgPSBjb250ZW50O1xuICB9XG5cbiAgLyogQnJhY2tldHMgY2Fubm90IGJlIGluc2lkZSB0aGUgaWRlbnRpZmllci4gKi9cbiAgaWYgKHJlZmVyZW5jZVR5cGUgIT09IFJFRkVSRU5DRV9UWVBFX0ZVTEwgJiYgYnJhY2tldGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3VidmFsdWUgPSBpbnRybyArIHN1YnZhbHVlO1xuXG4gIGlmICh0eXBlID09PSBUX0xJTksgJiYgc2VsZi5pbkxpbmspIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtIG5ldmVyIHVzZWQgKHlldCkgKi9cbiAgaWYgKHNpbGVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGUgPT09IFRfRk9PVE5PVEUgJiYgY29udGVudC5pbmRleE9mKCcgJykgIT09IC0xKSB7XG4gICAgcmV0dXJuIGVhdChzdWJ2YWx1ZSkoe1xuICAgICAgdHlwZTogJ2Zvb3Rub3RlJyxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnRva2VuaXplSW5saW5lKGNvbnRlbnQsIGVhdC5ub3coKSlcbiAgICB9KTtcbiAgfVxuXG4gIG5vdyA9IGVhdC5ub3coKTtcbiAgbm93LmNvbHVtbiArPSBpbnRyby5sZW5ndGg7XG4gIG5vdy5vZmZzZXQgKz0gaW50cm8ubGVuZ3RoO1xuICBpZGVudGlmaWVyID0gcmVmZXJlbmNlVHlwZSA9PT0gUkVGRVJFTkNFX1RZUEVfRlVMTCA/IGlkZW50aWZpZXIgOiBjb250ZW50O1xuXG4gIG5vZGUgPSB7XG4gICAgdHlwZTogdHlwZSArICdSZWZlcmVuY2UnLFxuICAgIGlkZW50aWZpZXI6IG5vcm1hbGl6ZShpZGVudGlmaWVyKVxuICB9O1xuXG4gIGlmICh0eXBlID09PSBUX0xJTksgfHwgdHlwZSA9PT0gVF9JTUFHRSkge1xuICAgIG5vZGUucmVmZXJlbmNlVHlwZSA9IHJlZmVyZW5jZVR5cGU7XG4gIH1cblxuICBpZiAodHlwZSA9PT0gVF9MSU5LKSB7XG4gICAgZXhpdCA9IHNlbGYuZW50ZXJMaW5rKCk7XG4gICAgbm9kZS5jaGlsZHJlbiA9IHNlbGYudG9rZW5pemVJbmxpbmUoY29udGVudCwgbm93KTtcbiAgICBleGl0KCk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gVF9JTUFHRSkge1xuICAgIG5vZGUuYWx0ID0gc2VsZi5kZWNvZGUucmF3KHNlbGYudW5lc2NhcGUoY29udGVudCksIG5vdykgfHwgbnVsbDtcbiAgfVxuXG4gIHJldHVybiBlYXQoc3VidmFsdWUpKG5vZGUpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdHJpbSA9IHJlcXVpcmUoJ3RyaW0nKTtcbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBsb2NhdGUgPSByZXF1aXJlKCcuLi9sb2NhdGUvc3Ryb25nJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3Ryb25nO1xuc3Ryb25nLmxvY2F0b3IgPSBsb2NhdGU7XG5cbnZhciBDX0FTVEVSSVNLID0gJyonO1xudmFyIENfVU5ERVJTQ09SRSA9ICdfJztcblxuZnVuY3Rpb24gc3Ryb25nKGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICB2YXIgbm93O1xuICB2YXIgcGVkYW50aWM7XG4gIHZhciBtYXJrZXI7XG4gIHZhciBxdWV1ZTtcbiAgdmFyIHN1YnZhbHVlO1xuICB2YXIgbGVuZ3RoO1xuICB2YXIgcHJldjtcblxuICBpZiAoXG4gICAgKGNoYXJhY3RlciAhPT0gQ19BU1RFUklTSyAmJiBjaGFyYWN0ZXIgIT09IENfVU5ERVJTQ09SRSkgfHxcbiAgICB2YWx1ZS5jaGFyQXQoKytpbmRleCkgIT09IGNoYXJhY3RlclxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBwZWRhbnRpYyA9IHNlbGYub3B0aW9ucy5wZWRhbnRpYztcbiAgbWFya2VyID0gY2hhcmFjdGVyO1xuICBzdWJ2YWx1ZSA9IG1hcmtlciArIG1hcmtlcjtcbiAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICBpbmRleCsrO1xuICBxdWV1ZSA9ICcnO1xuICBjaGFyYWN0ZXIgPSAnJztcblxuICBpZiAocGVkYW50aWMgJiYgd2hpdGVzcGFjZSh2YWx1ZS5jaGFyQXQoaW5kZXgpKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgIHByZXYgPSBjaGFyYWN0ZXI7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChcbiAgICAgIGNoYXJhY3RlciA9PT0gbWFya2VyICYmXG4gICAgICB2YWx1ZS5jaGFyQXQoaW5kZXggKyAxKSA9PT0gbWFya2VyICYmXG4gICAgICAoIXBlZGFudGljIHx8ICF3aGl0ZXNwYWNlKHByZXYpKVxuICAgICkge1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4ICsgMik7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgIT09IG1hcmtlcikge1xuICAgICAgICBpZiAoIXRyaW0ocXVldWUpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICAgICAgICBpZiAoc2lsZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBub3cgPSBlYXQubm93KCk7XG4gICAgICAgIG5vdy5jb2x1bW4gKz0gMjtcbiAgICAgICAgbm93Lm9mZnNldCArPSAyO1xuXG4gICAgICAgIHJldHVybiBlYXQoc3VidmFsdWUgKyBxdWV1ZSArIHN1YnZhbHVlKSh7XG4gICAgICAgICAgdHlwZTogJ3N0cm9uZycsXG4gICAgICAgICAgY2hpbGRyZW46IHNlbGYudG9rZW5pemVJbmxpbmUocXVldWUsIG5vdylcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFwZWRhbnRpYyAmJiBjaGFyYWN0ZXIgPT09ICdcXFxcJykge1xuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KCsraW5kZXgpO1xuICAgIH1cblxuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICBpbmRleCsrO1xuICB9XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gbG9jYXRlO1xuXG5mdW5jdGlvbiBsb2NhdGUodmFsdWUsIGZyb21JbmRleCkge1xuICB2YXIgYXN0ZXJpc2sgPSB2YWx1ZS5pbmRleE9mKCcqKicsIGZyb21JbmRleCk7XG4gIHZhciB1bmRlcnNjb3JlID0gdmFsdWUuaW5kZXhPZignX18nLCBmcm9tSW5kZXgpO1xuXG4gIGlmICh1bmRlcnNjb3JlID09PSAtMSkge1xuICAgIHJldHVybiBhc3RlcmlzaztcbiAgfVxuXG4gIGlmIChhc3RlcmlzayA9PT0gLTEpIHtcbiAgICByZXR1cm4gdW5kZXJzY29yZTtcbiAgfVxuXG4gIHJldHVybiB1bmRlcnNjb3JlIDwgYXN0ZXJpc2sgPyB1bmRlcnNjb3JlIDogYXN0ZXJpc2s7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB0cmltID0gcmVxdWlyZSgndHJpbScpO1xudmFyIHdvcmQgPSByZXF1aXJlKCdpcy13b3JkLWNoYXJhY3RlcicpO1xudmFyIHdoaXRlc3BhY2UgPSByZXF1aXJlKCdpcy13aGl0ZXNwYWNlLWNoYXJhY3RlcicpO1xudmFyIGxvY2F0ZSA9IHJlcXVpcmUoJy4uL2xvY2F0ZS9lbXBoYXNpcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcGhhc2lzO1xuZW1waGFzaXMubG9jYXRvciA9IGxvY2F0ZTtcblxudmFyIENfQVNURVJJU0sgPSAnKic7XG52YXIgQ19VTkRFUlNDT1JFID0gJ18nO1xuXG5mdW5jdGlvbiBlbXBoYXNpcyhlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcbiAgdmFyIG5vdztcbiAgdmFyIHBlZGFudGljO1xuICB2YXIgbWFya2VyO1xuICB2YXIgcXVldWU7XG4gIHZhciBzdWJ2YWx1ZTtcbiAgdmFyIGxlbmd0aDtcbiAgdmFyIHByZXY7XG5cbiAgaWYgKGNoYXJhY3RlciAhPT0gQ19BU1RFUklTSyAmJiBjaGFyYWN0ZXIgIT09IENfVU5ERVJTQ09SRSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHBlZGFudGljID0gc2VsZi5vcHRpb25zLnBlZGFudGljO1xuICBzdWJ2YWx1ZSA9IGNoYXJhY3RlcjtcbiAgbWFya2VyID0gY2hhcmFjdGVyO1xuICBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIGluZGV4Kys7XG4gIHF1ZXVlID0gJyc7XG4gIGNoYXJhY3RlciA9ICcnO1xuXG4gIGlmIChwZWRhbnRpYyAmJiB3aGl0ZXNwYWNlKHZhbHVlLmNoYXJBdChpbmRleCkpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgcHJldiA9IGNoYXJhY3RlcjtcbiAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gbWFya2VyICYmICghcGVkYW50aWMgfHwgIXdoaXRlc3BhY2UocHJldikpKSB7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoKytpbmRleCk7XG5cbiAgICAgIGlmIChjaGFyYWN0ZXIgIT09IG1hcmtlcikge1xuICAgICAgICBpZiAoIXRyaW0ocXVldWUpIHx8IHByZXYgPT09IG1hcmtlcikge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghcGVkYW50aWMgJiYgbWFya2VyID09PSBDX1VOREVSU0NPUkUgJiYgd29yZChjaGFyYWN0ZXIpKSB7XG4gICAgICAgICAgcXVldWUgKz0gbWFya2VyO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICAgICAgICBpZiAoc2lsZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBub3cgPSBlYXQubm93KCk7XG4gICAgICAgIG5vdy5jb2x1bW4rKztcbiAgICAgICAgbm93Lm9mZnNldCsrO1xuXG4gICAgICAgIHJldHVybiBlYXQoc3VidmFsdWUgKyBxdWV1ZSArIG1hcmtlcikoe1xuICAgICAgICAgIHR5cGU6ICdlbXBoYXNpcycsXG4gICAgICAgICAgY2hpbGRyZW46IHNlbGYudG9rZW5pemVJbmxpbmUocXVldWUsIG5vdylcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHF1ZXVlICs9IG1hcmtlcjtcbiAgICB9XG5cbiAgICBpZiAoIXBlZGFudGljICYmIGNoYXJhY3RlciA9PT0gJ1xcXFwnKSB7XG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgICBjaGFyYWN0ZXIgPSB2YWx1ZS5jaGFyQXQoKytpbmRleCk7XG4gICAgfVxuXG4gICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIGluZGV4Kys7XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHdvcmRDaGFyYWN0ZXJcblxudmFyIGZyb21Db2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZVxudmFyIHJlID0gL1xcdy9cblxuLy8gQ2hlY2sgaWYgdGhlIGdpdmVuIGNoYXJhY3RlciBjb2RlLCBvciB0aGUgY2hhcmFjdGVyIGNvZGUgYXQgdGhlIGZpcnN0XG4vLyBjaGFyYWN0ZXIsIGlzIGEgd29yZCBjaGFyYWN0ZXIuXG5mdW5jdGlvbiB3b3JkQ2hhcmFjdGVyKGNoYXJhY3Rlcikge1xuICByZXR1cm4gcmUudGVzdChcbiAgICB0eXBlb2YgY2hhcmFjdGVyID09PSAnbnVtYmVyJyA/IGZyb21Db2RlKGNoYXJhY3RlcikgOiBjaGFyYWN0ZXIuY2hhckF0KDApXG4gIClcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBsb2NhdGU7XG5cbmZ1bmN0aW9uIGxvY2F0ZSh2YWx1ZSwgZnJvbUluZGV4KSB7XG4gIHZhciBhc3RlcmlzayA9IHZhbHVlLmluZGV4T2YoJyonLCBmcm9tSW5kZXgpO1xuICB2YXIgdW5kZXJzY29yZSA9IHZhbHVlLmluZGV4T2YoJ18nLCBmcm9tSW5kZXgpO1xuXG4gIGlmICh1bmRlcnNjb3JlID09PSAtMSkge1xuICAgIHJldHVybiBhc3RlcmlzaztcbiAgfVxuXG4gIGlmIChhc3RlcmlzayA9PT0gLTEpIHtcbiAgICByZXR1cm4gdW5kZXJzY29yZTtcbiAgfVxuXG4gIHJldHVybiB1bmRlcnNjb3JlIDwgYXN0ZXJpc2sgPyB1bmRlcnNjb3JlIDogYXN0ZXJpc2s7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBsb2NhdGUgPSByZXF1aXJlKCcuLi9sb2NhdGUvZGVsZXRlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaWtldGhyb3VnaDtcbnN0cmlrZXRocm91Z2gubG9jYXRvciA9IGxvY2F0ZTtcblxudmFyIENfVElMREUgPSAnfic7XG52YXIgRE9VQkxFID0gJ35+JztcblxuZnVuY3Rpb24gc3RyaWtldGhyb3VnaChlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgY2hhcmFjdGVyID0gJyc7XG4gIHZhciBwcmV2aW91cyA9ICcnO1xuICB2YXIgcHJlY2VkaW5nID0gJyc7XG4gIHZhciBzdWJ2YWx1ZSA9ICcnO1xuICB2YXIgaW5kZXg7XG4gIHZhciBsZW5ndGg7XG4gIHZhciBub3c7XG5cbiAgaWYgKFxuICAgICFzZWxmLm9wdGlvbnMuZ2ZtIHx8XG4gICAgdmFsdWUuY2hhckF0KDApICE9PSBDX1RJTERFIHx8XG4gICAgdmFsdWUuY2hhckF0KDEpICE9PSBDX1RJTERFIHx8XG4gICAgd2hpdGVzcGFjZSh2YWx1ZS5jaGFyQXQoMikpXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGluZGV4ID0gMTtcbiAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICBub3cgPSBlYXQubm93KCk7XG4gIG5vdy5jb2x1bW4gKz0gMjtcbiAgbm93Lm9mZnNldCArPSAyO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChcbiAgICAgIGNoYXJhY3RlciA9PT0gQ19USUxERSAmJlxuICAgICAgcHJldmlvdXMgPT09IENfVElMREUgJiZcbiAgICAgICghcHJlY2VkaW5nIHx8ICF3aGl0ZXNwYWNlKHByZWNlZGluZykpXG4gICAgKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgLSBuZXZlciB1c2VkICh5ZXQpICovXG4gICAgICBpZiAoc2lsZW50KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZWF0KERPVUJMRSArIHN1YnZhbHVlICsgRE9VQkxFKSh7XG4gICAgICAgIHR5cGU6ICdkZWxldGUnLFxuICAgICAgICBjaGlsZHJlbjogc2VsZi50b2tlbml6ZUlubGluZShzdWJ2YWx1ZSwgbm93KVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgc3VidmFsdWUgKz0gcHJldmlvdXM7XG4gICAgcHJlY2VkaW5nID0gcHJldmlvdXM7XG4gICAgcHJldmlvdXMgPSBjaGFyYWN0ZXI7XG4gIH1cbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBsb2NhdGU7XG5cbmZ1bmN0aW9uIGxvY2F0ZSh2YWx1ZSwgZnJvbUluZGV4KSB7XG4gIHJldHVybiB2YWx1ZS5pbmRleE9mKCd+ficsIGZyb21JbmRleCk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB3aGl0ZXNwYWNlID0gcmVxdWlyZSgnaXMtd2hpdGVzcGFjZS1jaGFyYWN0ZXInKTtcbnZhciBsb2NhdGUgPSByZXF1aXJlKCcuLi9sb2NhdGUvY29kZS1pbmxpbmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbmxpbmVDb2RlO1xuaW5saW5lQ29kZS5sb2NhdG9yID0gbG9jYXRlO1xuXG52YXIgQ19USUNLID0gJ2AnO1xuXG4vKiBUb2tlbmlzZSBpbmxpbmUgY29kZS4gKi9cbmZ1bmN0aW9uIGlubGluZUNvZGUoZWF0LCB2YWx1ZSwgc2lsZW50KSB7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBxdWV1ZSA9ICcnO1xuICB2YXIgdGlja1F1ZXVlID0gJyc7XG4gIHZhciBjb250ZW50UXVldWU7XG4gIHZhciBzdWJxdWV1ZTtcbiAgdmFyIGNvdW50O1xuICB2YXIgb3BlbmluZ0NvdW50O1xuICB2YXIgc3VidmFsdWU7XG4gIHZhciBjaGFyYWN0ZXI7XG4gIHZhciBmb3VuZDtcbiAgdmFyIG5leHQ7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKHZhbHVlLmNoYXJBdChpbmRleCkgIT09IENfVElDSykge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcXVldWUgKz0gQ19USUNLO1xuICAgIGluZGV4Kys7XG4gIH1cblxuICBpZiAoIXF1ZXVlKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3VidmFsdWUgPSBxdWV1ZTtcbiAgb3BlbmluZ0NvdW50ID0gaW5kZXg7XG4gIHF1ZXVlID0gJyc7XG4gIG5leHQgPSB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICBjb3VudCA9IDA7XG5cbiAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gbmV4dDtcbiAgICBuZXh0ID0gdmFsdWUuY2hhckF0KGluZGV4ICsgMSk7XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSBDX1RJQ0spIHtcbiAgICAgIGNvdW50Kys7XG4gICAgICB0aWNrUXVldWUgKz0gY2hhcmFjdGVyO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb3VudCA9IDA7XG4gICAgICBxdWV1ZSArPSBjaGFyYWN0ZXI7XG4gICAgfVxuXG4gICAgaWYgKGNvdW50ICYmIG5leHQgIT09IENfVElDSykge1xuICAgICAgaWYgKGNvdW50ID09PSBvcGVuaW5nQ291bnQpIHtcbiAgICAgICAgc3VidmFsdWUgKz0gcXVldWUgKyB0aWNrUXVldWU7XG4gICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHF1ZXVlICs9IHRpY2tRdWV1ZTtcbiAgICAgIHRpY2tRdWV1ZSA9ICcnO1xuICAgIH1cblxuICAgIGluZGV4Kys7XG4gIH1cblxuICBpZiAoIWZvdW5kKSB7XG4gICAgaWYgKG9wZW5pbmdDb3VudCAlIDIgIT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBxdWV1ZSA9ICcnO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb250ZW50UXVldWUgPSAnJztcbiAgc3VicXVldWUgPSAnJztcbiAgbGVuZ3RoID0gcXVldWUubGVuZ3RoO1xuICBpbmRleCA9IC0xO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gcXVldWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmICh3aGl0ZXNwYWNlKGNoYXJhY3RlcikpIHtcbiAgICAgIHN1YnF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChzdWJxdWV1ZSkge1xuICAgICAgaWYgKGNvbnRlbnRRdWV1ZSkge1xuICAgICAgICBjb250ZW50UXVldWUgKz0gc3VicXVldWU7XG4gICAgICB9XG5cbiAgICAgIHN1YnF1ZXVlID0gJyc7XG4gICAgfVxuXG4gICAgY29udGVudFF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgfVxuXG4gIHJldHVybiBlYXQoc3VidmFsdWUpKHtcbiAgICB0eXBlOiAnaW5saW5lQ29kZScsXG4gICAgdmFsdWU6IGNvbnRlbnRRdWV1ZVxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBsb2NhdGU7XG5cbmZ1bmN0aW9uIGxvY2F0ZSh2YWx1ZSwgZnJvbUluZGV4KSB7XG4gIHJldHVybiB2YWx1ZS5pbmRleE9mKCdgJywgZnJvbUluZGV4KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGxvY2F0ZSA9IHJlcXVpcmUoJy4uL2xvY2F0ZS9icmVhaycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhhcmRCcmVhaztcbmhhcmRCcmVhay5sb2NhdG9yID0gbG9jYXRlO1xuXG52YXIgTUlOX0JSRUFLX0xFTkdUSCA9IDI7XG5cbmZ1bmN0aW9uIGhhcmRCcmVhayhlYXQsIHZhbHVlLCBzaWxlbnQpIHtcbiAgdmFyIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gLTE7XG4gIHZhciBxdWV1ZSA9ICcnO1xuICB2YXIgY2hhcmFjdGVyO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgY2hhcmFjdGVyID0gdmFsdWUuY2hhckF0KGluZGV4KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgPT09ICdcXG4nKSB7XG4gICAgICBpZiAoaW5kZXggPCBNSU5fQlJFQUtfTEVOR1RIKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICAgICAgaWYgKHNpbGVudCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcXVldWUgKz0gY2hhcmFjdGVyO1xuXG4gICAgICByZXR1cm4gZWF0KHF1ZXVlKSh7dHlwZTogJ2JyZWFrJ30pO1xuICAgIH1cblxuICAgIGlmIChjaGFyYWN0ZXIgIT09ICcgJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHF1ZXVlICs9IGNoYXJhY3RlcjtcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxvY2F0ZTtcblxuZnVuY3Rpb24gbG9jYXRlKHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgdmFyIGluZGV4ID0gdmFsdWUuaW5kZXhPZignXFxuJywgZnJvbUluZGV4KTtcblxuICB3aGlsZSAoaW5kZXggPiBmcm9tSW5kZXgpIHtcbiAgICBpZiAodmFsdWUuY2hhckF0KGluZGV4IC0gMSkgIT09ICcgJykge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaW5kZXgtLTtcbiAgfVxuXG4gIHJldHVybiBpbmRleDtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB0ZXh0O1xuXG5mdW5jdGlvbiB0ZXh0KGVhdCwgdmFsdWUsIHNpbGVudCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBtZXRob2RzO1xuICB2YXIgdG9rZW5pemVycztcbiAgdmFyIGluZGV4O1xuICB2YXIgbGVuZ3RoO1xuICB2YXIgc3VidmFsdWU7XG4gIHZhciBwb3NpdGlvbjtcbiAgdmFyIHRva2VuaXplcjtcbiAgdmFyIG5hbWU7XG4gIHZhciBtaW47XG4gIHZhciBub3c7XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmIC0gbmV2ZXIgdXNlZCAoeWV0KSAqL1xuICBpZiAoc2lsZW50KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBtZXRob2RzID0gc2VsZi5pbmxpbmVNZXRob2RzO1xuICBsZW5ndGggPSBtZXRob2RzLmxlbmd0aDtcbiAgdG9rZW5pemVycyA9IHNlbGYuaW5saW5lVG9rZW5pemVycztcbiAgaW5kZXggPSAtMTtcbiAgbWluID0gdmFsdWUubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgbmFtZSA9IG1ldGhvZHNbaW5kZXhdO1xuXG4gICAgaWYgKG5hbWUgPT09ICd0ZXh0JyB8fCAhdG9rZW5pemVyc1tuYW1lXSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdG9rZW5pemVyID0gdG9rZW5pemVyc1tuYW1lXS5sb2NhdG9yO1xuXG4gICAgaWYgKCF0b2tlbml6ZXIpIHtcbiAgICAgIGVhdC5maWxlLmZhaWwoJ01pc3NpbmcgbG9jYXRvcjogYCcgKyBuYW1lICsgJ2AnKTtcbiAgICB9XG5cbiAgICBwb3NpdGlvbiA9IHRva2VuaXplci5jYWxsKHNlbGYsIHZhbHVlLCAxKTtcblxuICAgIGlmIChwb3NpdGlvbiAhPT0gLTEgJiYgcG9zaXRpb24gPCBtaW4pIHtcbiAgICAgIG1pbiA9IHBvc2l0aW9uO1xuICAgIH1cbiAgfVxuXG4gIHN1YnZhbHVlID0gdmFsdWUuc2xpY2UoMCwgbWluKTtcbiAgbm93ID0gZWF0Lm5vdygpO1xuXG4gIHNlbGYuZGVjb2RlKHN1YnZhbHVlLCBub3csIGZ1bmN0aW9uIChjb250ZW50LCBwb3NpdGlvbiwgc291cmNlKSB7XG4gICAgZWF0KHNvdXJjZSB8fCBjb250ZW50KSh7XG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICB2YWx1ZTogY29udGVudFxuICAgIH0pO1xuICB9KTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJ2YXIgdmlzaXRXaXRoUGFyZW50cyA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtdmlzaXQtcGFyZW50cycpO1xuXG5mdW5jdGlvbiBhZGRMaXN0TWV0YWRhdGEoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoYXN0KSB7XG4gICAgdmlzaXRXaXRoUGFyZW50cyhhc3QsICdsaXN0JywgZnVuY3Rpb24gKGxpc3ROb2RlLCBwYXJlbnRzKSB7XG4gICAgICB2YXIgZGVwdGggPSAwLCBpLCBuO1xuICAgICAgZm9yIChpID0gMCwgbiA9IHBhcmVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChwYXJlbnRzW2ldLnR5cGUgPT09ICdsaXN0JykgZGVwdGggKz0gMTtcbiAgICAgIH1cbiAgICAgIGZvciAoaSA9IDAsIG4gPSBsaXN0Tm9kZS5jaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgdmFyIGNoaWxkID0gbGlzdE5vZGUuY2hpbGRyZW5baV07XG4gICAgICAgIGNoaWxkLmluZGV4ID0gaTtcbiAgICAgICAgY2hpbGQub3JkZXJlZCA9IGxpc3ROb2RlLm9yZGVyZWQ7XG4gICAgICB9XG4gICAgICBsaXN0Tm9kZS5kZXB0aCA9IGRlcHRoO1xuICAgIH0pO1xuICAgIHJldHVybiBhc3Q7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYWRkTGlzdE1ldGFkYXRhO1xuIiwiJ3VzZSBzdHJpY3QnXG5cbi8qIEV4cG9zZS4gKi9cbm1vZHVsZS5leHBvcnRzID0gdmlzaXRQYXJlbnRzXG5cbi8qIFZpc2l0LiAqL1xuZnVuY3Rpb24gdmlzaXRQYXJlbnRzKHRyZWUsIHR5cGUsIHZpc2l0b3IpIHtcbiAgdmFyIHN0YWNrID0gW11cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2aXNpdG9yID0gdHlwZVxuICAgIHR5cGUgPSBudWxsXG4gIH1cblxuICBvbmUodHJlZSlcblxuICAvKiBWaXNpdCBhIHNpbmdsZSBub2RlLiAqL1xuICBmdW5jdGlvbiBvbmUobm9kZSkge1xuICAgIHZhciByZXN1bHRcblxuICAgIGlmICghdHlwZSB8fCBub2RlLnR5cGUgPT09IHR5cGUpIHtcbiAgICAgIHJlc3VsdCA9IHZpc2l0b3Iobm9kZSwgc3RhY2suY29uY2F0KCkpXG4gICAgfVxuXG4gICAgaWYgKG5vZGUuY2hpbGRyZW4gJiYgcmVzdWx0ICE9PSBmYWxzZSkge1xuICAgICAgcmV0dXJuIGFsbChub2RlLmNoaWxkcmVuLCBub2RlKVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8qIFZpc2l0IGNoaWxkcmVuIGluIGBwYXJlbnRgLiAqL1xuICBmdW5jdGlvbiBhbGwoY2hpbGRyZW4sIHBhcmVudCkge1xuICAgIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGhcbiAgICB2YXIgaW5kZXggPSAtMVxuICAgIHZhciBjaGlsZFxuXG4gICAgc3RhY2sucHVzaChwYXJlbnQpXG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgY2hpbGQgPSBjaGlsZHJlbltpbmRleF1cblxuICAgICAgaWYgKGNoaWxkICYmIG9uZShjaGlsZCkgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH1cblxuICAgIHN0YWNrLnBvcCgpXG5cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBOYWl2ZSwgc2ltcGxlIHBsdWdpbiB0byBtYXRjaCBpbmxpbmUgbm9kZXMgd2l0aG91dCBhdHRyaWJ1dGVzXG4gKiBUaGlzIGFsbG93cyBzYXkgPHN0cm9uZz5mb288L3N0cm9uZz4sIGJ1dCBub3QgPHN0cm9uZyBjbGFzcz1cInZlcnlcIj5mb288L3N0cm9uZz5cbiAqIEZvciBwcm9wZXIgSFRNTCBzdXBwb3J0LCB5b3UnbGwgd2FudCBhIGRpZmZlcmVudCBwbHVnaW5cbiAqKi9cbnZhciB2aXNpdCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtdmlzaXQnKTtcblxudmFyIHR5cGUgPSAndmlydHVhbEh0bWwnO1xudmFyIHNlbGZDbG9zaW5nUmUgPSAvXjwoYXJlYXxiYXNlfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8a2V5Z2VufGxpbmt8bWV0YXxwYXJhbXxzb3VyY2V8dHJhY2t8d2JyKVxccypcXC8/PiQvaTtcbnZhciBzaW1wbGVUYWdSZSA9IC9ePChcXC8/KShbYS16XSspXFxzKj4kLztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodHJlZSkge1xuICB2YXIgb3BlbjtcbiAgdmFyIGN1cnJlbnRQYXJlbnQ7XG4gIHZpc2l0KHRyZWUsICdodG1sJywgZnVuY3Rpb24gKG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAoY3VycmVudFBhcmVudCAhPT0gcGFyZW50KSB7XG4gICAgICBvcGVuID0gW107XG4gICAgICBjdXJyZW50UGFyZW50ID0gcGFyZW50O1xuICAgIH1cblxuICAgIHZhciBzZWxmQ2xvc2luZyA9IGdldFNlbGZDbG9zaW5nKG5vZGUpO1xuXG4gICAgaWYgKHNlbGZDbG9zaW5nKSB7XG4gICAgICBwYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxLCB7XG4gICAgICAgIHR5cGU6IHR5cGUsXG4gICAgICAgIHRhZzogc2VsZkNsb3NpbmcsXG4gICAgICAgIHBvc2l0aW9uOiBub2RlLnBvc2l0aW9uXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciBjdXJyZW50ID0gZ2V0U2ltcGxlVGFnKG5vZGUsIHBhcmVudCk7XG5cbiAgICBpZiAoIWN1cnJlbnQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHZhciBtYXRjaGluZyA9IGZpbmRBbmRQdWxsKG9wZW4sIGN1cnJlbnQudGFnKTtcblxuICAgIGlmIChtYXRjaGluZykge1xuICAgICAgcGFyZW50LmNoaWxkcmVuLnNwbGljZShpbmRleCwgMCwgdmlydHVhbChjdXJyZW50LCBtYXRjaGluZywgcGFyZW50KSk7XG4gICAgfSBlbHNlIGlmICghY3VycmVudC5vcGVuaW5nKSB7XG4gICAgICBvcGVuLnB1c2goY3VycmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0sIHRydWUgLy8gSXRlcmF0ZSBpbiByZXZlcnNlXG4gICk7XG4gIHJldHVybiB0cmVlO1xufTtcblxuZnVuY3Rpb24gZmluZEFuZFB1bGwob3BlbiwgbWF0Y2hpbmdUYWcpIHtcbiAgdmFyIGkgPSBvcGVuLmxlbmd0aDtcblxuICB3aGlsZSAoaS0tKSB7XG4gICAgaWYgKG9wZW5baV0udGFnID09PSBtYXRjaGluZ1RhZykge1xuICAgICAgcmV0dXJuIG9wZW4uc3BsaWNlKGksIDEpWzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0U2ltcGxlVGFnKG5vZGUsIHBhcmVudCkge1xuICB2YXIgbWF0Y2ggPSBub2RlLnZhbHVlLm1hdGNoKHNpbXBsZVRhZ1JlKTtcbiAgcmV0dXJuIG1hdGNoID8ge1xuICAgIHRhZzogbWF0Y2hbMl0sXG4gICAgb3BlbmluZzogIW1hdGNoWzFdLFxuICAgIG5vZGU6IG5vZGVcbiAgfSA6IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRTZWxmQ2xvc2luZyhub2RlKSB7XG4gIHZhciBtYXRjaCA9IG5vZGUudmFsdWUubWF0Y2goc2VsZkNsb3NpbmdSZSk7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoWzFdIDogZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHZpcnR1YWwoZnJvbU5vZGUsIHRvTm9kZSwgcGFyZW50KSB7XG4gIHZhciBmcm9tSW5kZXggPSBwYXJlbnQuY2hpbGRyZW4uaW5kZXhPZihmcm9tTm9kZS5ub2RlKTtcbiAgdmFyIHRvSW5kZXggPSBwYXJlbnQuY2hpbGRyZW4uaW5kZXhPZih0b05vZGUubm9kZSk7XG4gIHZhciBleHRyYWN0ZWQgPSBwYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGZyb21JbmRleCwgdG9JbmRleCAtIGZyb21JbmRleCArIDEpO1xuICB2YXIgY2hpbGRyZW4gPSBleHRyYWN0ZWQuc2xpY2UoMSwgLTEpO1xuICByZXR1cm4ge1xuICAgIHR5cGU6IHR5cGUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIHRhZzogZnJvbU5vZGUudGFnLFxuICAgIHBvc2l0aW9uOiB7XG4gICAgICBzdGFydDogZnJvbU5vZGUubm9kZS5wb3NpdGlvbi5zdGFydCxcbiAgICAgIGVuZDogdG9Ob2RlLm5vZGUucG9zaXRpb24uZW5kLFxuICAgICAgaW5kZW50OiBbXVxuICAgIH1cbiAgfTtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHZpc2l0ID0gcmVxdWlyZSgndW5pc3QtdXRpbC12aXNpdCcpO1xuXG5leHBvcnRzLm9mVHlwZSA9IGZ1bmN0aW9uICh0eXBlcywgbW9kZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICB0eXBlcy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICByZXR1cm4gdmlzaXQobm9kZSwgdHlwZSwgZGlzYWxsb3csIHRydWUpO1xuICAgIH0pO1xuICAgIHJldHVybiBub2RlO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGRpc2FsbG93KG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICB1bnRhbmdsZShub2RlLCBpbmRleCwgcGFyZW50LCBtb2RlKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydHMuaWZOb3RNYXRjaCA9IGZ1bmN0aW9uIChhbGxvd05vZGUsIG1vZGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgdmlzaXQobm9kZSwgZGlzYWxsb3csIHRydWUpO1xuICAgIHJldHVybiBub2RlO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGRpc2FsbG93KG5vZGUsIGluZGV4LCBwYXJlbnQpIHtcbiAgICBpZiAocGFyZW50ICYmICFhbGxvd05vZGUobm9kZSwgaW5kZXgsIHBhcmVudCkpIHtcbiAgICAgIHVudGFuZ2xlKG5vZGUsIGluZGV4LCBwYXJlbnQsIG1vZGUpO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gdW50YW5nbGUobm9kZSwgaW5kZXgsIHBhcmVudCwgbW9kZSkge1xuICBpZiAobW9kZSA9PT0gJ3JlbW92ZScpIHtcbiAgICBwYXJlbnQuY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKTtcbiAgfSBlbHNlIGlmIChtb2RlID09PSAndW53cmFwJykge1xuICAgIHZhciBhcmdzID0gW2luZGV4LCAxXTtcblxuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBhcmdzID0gYXJncy5jb25jYXQobm9kZS5jaGlsZHJlbik7XG4gICAgfVxuXG4gICAgQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShwYXJlbnQuY2hpbGRyZW4sIGFyZ3MpO1xuICB9XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgeHRlbmQgPSByZXF1aXJlKCd4dGVuZCcpO1xuXG52YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbnZhciBkZWZhdWx0Tm9kZVBvc2l0aW9uID0ge1xuICBzdGFydDoge1xuICAgIGxpbmU6IDEsXG4gICAgY29sdW1uOiAxLFxuICAgIG9mZnNldDogMFxuICB9LFxuICBlbmQ6IHtcbiAgICBsaW5lOiAxLFxuICAgIGNvbHVtbjogMSxcbiAgICBvZmZzZXQ6IDBcbiAgfVxufTtcblxuZnVuY3Rpb24gYXN0VG9SZWFjdChub2RlLCBvcHRpb25zKSB7XG4gIHZhciBwYXJlbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICB2YXIgaW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDA7XG4gIHZhciByZW5kZXJlciA9IG9wdGlvbnMucmVuZGVyZXJzW25vZGUudHlwZV07IC8vIG5vZGVzIGdlbmVyYXRlZCBieSBwbHVnaW5zIG1heSBub3QgaGF2ZSBwb3NpdGlvbiBkYXRhXG4gIC8vIG11Y2ggb2YgdGhlIGNvZGUgYWZ0ZXIgdGhpcyBwb2ludCB3aWxsIGF0dGVtcHQgdG8gYWNjZXNzIHByb3BlcnRpZXMgb2YgdGhlIG5vZGUucG9zaXRpb25cbiAgLy8gdGhpcyB3aWxsIHNldCB0aGUgbm9kZSBwb3NpdGlvbiB0byB0aGUgcGFyZW50IG5vZGUncyBwb3NpdGlvbiB0byBwcmV2ZW50IGVycm9yc1xuXG4gIGlmIChub2RlLnBvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICBub2RlLnBvc2l0aW9uID0gcGFyZW50Lm5vZGUgJiYgcGFyZW50Lm5vZGUucG9zaXRpb24gfHwgZGVmYXVsdE5vZGVQb3NpdGlvbjtcbiAgfVxuXG4gIHZhciBwb3MgPSBub2RlLnBvc2l0aW9uLnN0YXJ0O1xuICB2YXIga2V5ID0gW25vZGUudHlwZSwgcG9zLmxpbmUsIHBvcy5jb2x1bW4sIGluZGV4XS5qb2luKCctJyk7XG5cbiAgaWYgKCFSZWFjdElzLmlzVmFsaWRFbGVtZW50VHlwZShyZW5kZXJlcikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZW5kZXJlciBmb3IgdHlwZSBgXCIuY29uY2F0KG5vZGUudHlwZSwgXCJgIG5vdCBkZWZpbmVkIG9yIGlzIG5vdCByZW5kZXJhYmxlXCIpKTtcbiAgfVxuXG4gIHZhciBub2RlUHJvcHMgPSBnZXROb2RlUHJvcHMobm9kZSwga2V5LCBvcHRpb25zLCByZW5kZXJlciwgcGFyZW50LCBpbmRleCk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KHJlbmRlcmVyLCBub2RlUHJvcHMsIG5vZGVQcm9wcy5jaGlsZHJlbiB8fCByZXNvbHZlQ2hpbGRyZW4oKSB8fCB1bmRlZmluZWQpO1xuXG4gIGZ1bmN0aW9uIHJlc29sdmVDaGlsZHJlbigpIHtcbiAgICByZXR1cm4gbm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuLm1hcChmdW5jdGlvbiAoY2hpbGROb2RlLCBpKSB7XG4gICAgICByZXR1cm4gYXN0VG9SZWFjdChjaGlsZE5vZGUsIG9wdGlvbnMsIHtcbiAgICAgICAgbm9kZTogbm9kZSxcbiAgICAgICAgcHJvcHM6IG5vZGVQcm9wc1xuICAgICAgfSwgaSk7XG4gICAgfSk7XG4gIH1cbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1wYXJhbXMsIGNvbXBsZXhpdHlcblxuXG5mdW5jdGlvbiBnZXROb2RlUHJvcHMobm9kZSwga2V5LCBvcHRzLCByZW5kZXJlciwgcGFyZW50LCBpbmRleCkge1xuICB2YXIgcHJvcHMgPSB7XG4gICAga2V5OiBrZXlcbiAgfTtcbiAgdmFyIGlzVGFnUmVuZGVyZXIgPSB0eXBlb2YgcmVuZGVyZXIgPT09ICdzdHJpbmcnOyAvLyBgc291cmNlUG9zYCBpcyB0cnVlIGlmIHRoZSB1c2VyIHdhbnRzIHNvdXJjZSBpbmZvcm1hdGlvbiAobGluZS9jb2x1bW4gaW5mbyBmcm9tIG1hcmtkb3duIHNvdXJjZSlcblxuICBpZiAob3B0cy5zb3VyY2VQb3MgJiYgbm9kZS5wb3NpdGlvbikge1xuICAgIHByb3BzWydkYXRhLXNvdXJjZXBvcyddID0gZmxhdHRlblBvc2l0aW9uKG5vZGUucG9zaXRpb24pO1xuICB9XG5cbiAgaWYgKG9wdHMucmF3U291cmNlUG9zICYmICFpc1RhZ1JlbmRlcmVyKSB7XG4gICAgcHJvcHMuc291cmNlUG9zaXRpb24gPSBub2RlLnBvc2l0aW9uO1xuICB9IC8vIElmIGBpbmNsdWRlTm9kZUluZGV4YCBpcyB0cnVlLCBwYXNzIG5vZGUgaW5kZXggaW5mbyB0byBhbGwgbm9uLXRhZyByZW5kZXJlcnNcblxuXG4gIGlmIChvcHRzLmluY2x1ZGVOb2RlSW5kZXggJiYgcGFyZW50Lm5vZGUgJiYgcGFyZW50Lm5vZGUuY2hpbGRyZW4gJiYgIWlzVGFnUmVuZGVyZXIpIHtcbiAgICBwcm9wcy5pbmRleCA9IHBhcmVudC5ub2RlLmNoaWxkcmVuLmluZGV4T2Yobm9kZSk7XG4gICAgcHJvcHMucGFyZW50Q2hpbGRDb3VudCA9IHBhcmVudC5ub2RlLmNoaWxkcmVuLmxlbmd0aDtcbiAgfVxuXG4gIHZhciByZWYgPSBub2RlLmlkZW50aWZpZXIgIT09IG51bGwgJiYgbm9kZS5pZGVudGlmaWVyICE9PSB1bmRlZmluZWQgPyBvcHRzLmRlZmluaXRpb25zW25vZGUuaWRlbnRpZmllcl0gfHwge30gOiBudWxsO1xuXG4gIHN3aXRjaCAobm9kZS50eXBlKSB7XG4gICAgY2FzZSAncm9vdCc6XG4gICAgICBhc3NpZ25EZWZpbmVkKHByb3BzLCB7XG4gICAgICAgIGNsYXNzTmFtZTogb3B0cy5jbGFzc05hbWVcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICd0ZXh0JzpcbiAgICAgIHByb3BzLm5vZGVLZXkgPSBrZXk7XG4gICAgICBwcm9wcy5jaGlsZHJlbiA9IG5vZGUudmFsdWU7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2hlYWRpbmcnOlxuICAgICAgcHJvcHMubGV2ZWwgPSBub2RlLmRlcHRoO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdsaXN0JzpcbiAgICAgIHByb3BzLnN0YXJ0ID0gbm9kZS5zdGFydDtcbiAgICAgIHByb3BzLm9yZGVyZWQgPSBub2RlLm9yZGVyZWQ7XG4gICAgICBwcm9wcy50aWdodCA9ICFub2RlLmxvb3NlO1xuICAgICAgcHJvcHMuZGVwdGggPSBub2RlLmRlcHRoO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdsaXN0SXRlbSc6XG4gICAgICBwcm9wcy5jaGVja2VkID0gbm9kZS5jaGVja2VkO1xuICAgICAgcHJvcHMudGlnaHQgPSAhbm9kZS5sb29zZTtcbiAgICAgIHByb3BzLm9yZGVyZWQgPSBub2RlLm9yZGVyZWQ7XG4gICAgICBwcm9wcy5pbmRleCA9IG5vZGUuaW5kZXg7XG4gICAgICBwcm9wcy5jaGlsZHJlbiA9IGdldExpc3RJdGVtQ2hpbGRyZW4obm9kZSwgcGFyZW50KS5tYXAoZnVuY3Rpb24gKGNoaWxkTm9kZSwgaSkge1xuICAgICAgICByZXR1cm4gYXN0VG9SZWFjdChjaGlsZE5vZGUsIG9wdHMsIHtcbiAgICAgICAgICBub2RlOiBub2RlLFxuICAgICAgICAgIHByb3BzOiBwcm9wc1xuICAgICAgICB9LCBpKTtcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdkZWZpbml0aW9uJzpcbiAgICAgIGFzc2lnbkRlZmluZWQocHJvcHMsIHtcbiAgICAgICAgaWRlbnRpZmllcjogbm9kZS5pZGVudGlmaWVyLFxuICAgICAgICB0aXRsZTogbm9kZS50aXRsZSxcbiAgICAgICAgdXJsOiBub2RlLnVybFxuICAgICAgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2NvZGUnOlxuICAgICAgYXNzaWduRGVmaW5lZChwcm9wcywge1xuICAgICAgICBsYW5ndWFnZTogbm9kZS5sYW5nICYmIG5vZGUubGFuZy5zcGxpdCgvXFxzLywgMSlbMF1cbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdpbmxpbmVDb2RlJzpcbiAgICAgIHByb3BzLmNoaWxkcmVuID0gbm9kZS52YWx1ZTtcbiAgICAgIHByb3BzLmlubGluZSA9IHRydWU7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2xpbmsnOlxuICAgICAgYXNzaWduRGVmaW5lZChwcm9wcywge1xuICAgICAgICB0aXRsZTogbm9kZS50aXRsZSB8fCB1bmRlZmluZWQsXG4gICAgICAgIHRhcmdldDogdHlwZW9mIG9wdHMubGlua1RhcmdldCA9PT0gJ2Z1bmN0aW9uJyA/IG9wdHMubGlua1RhcmdldChub2RlLnVybCwgbm9kZS5jaGlsZHJlbiwgbm9kZS50aXRsZSkgOiBvcHRzLmxpbmtUYXJnZXQsXG4gICAgICAgIGhyZWY6IG9wdHMudHJhbnNmb3JtTGlua1VyaSA/IG9wdHMudHJhbnNmb3JtTGlua1VyaShub2RlLnVybCwgbm9kZS5jaGlsZHJlbiwgbm9kZS50aXRsZSkgOiBub2RlLnVybFxuICAgICAgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2ltYWdlJzpcbiAgICAgIGFzc2lnbkRlZmluZWQocHJvcHMsIHtcbiAgICAgICAgYWx0OiBub2RlLmFsdCB8fCB1bmRlZmluZWQsXG4gICAgICAgIHRpdGxlOiBub2RlLnRpdGxlIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgc3JjOiBvcHRzLnRyYW5zZm9ybUltYWdlVXJpID8gb3B0cy50cmFuc2Zvcm1JbWFnZVVyaShub2RlLnVybCwgbm9kZS5jaGlsZHJlbiwgbm9kZS50aXRsZSwgbm9kZS5hbHQpIDogbm9kZS51cmxcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdsaW5rUmVmZXJlbmNlJzpcbiAgICAgIGFzc2lnbkRlZmluZWQocHJvcHMsIHh0ZW5kKHJlZiwge1xuICAgICAgICBocmVmOiBvcHRzLnRyYW5zZm9ybUxpbmtVcmkgPyBvcHRzLnRyYW5zZm9ybUxpbmtVcmkocmVmLmhyZWYpIDogcmVmLmhyZWZcbiAgICAgIH0pKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnaW1hZ2VSZWZlcmVuY2UnOlxuICAgICAgYXNzaWduRGVmaW5lZChwcm9wcywge1xuICAgICAgICBzcmM6IG9wdHMudHJhbnNmb3JtSW1hZ2VVcmkgJiYgcmVmLmhyZWYgPyBvcHRzLnRyYW5zZm9ybUltYWdlVXJpKHJlZi5ocmVmLCBub2RlLmNoaWxkcmVuLCByZWYudGl0bGUsIG5vZGUuYWx0KSA6IHJlZi5ocmVmLFxuICAgICAgICB0aXRsZTogcmVmLnRpdGxlIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgYWx0OiBub2RlLmFsdCB8fCB1bmRlZmluZWRcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICd0YWJsZSc6XG4gICAgY2FzZSAndGFibGVIZWFkJzpcbiAgICBjYXNlICd0YWJsZUJvZHknOlxuICAgICAgcHJvcHMuY29sdW1uQWxpZ25tZW50ID0gbm9kZS5hbGlnbjtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAndGFibGVSb3cnOlxuICAgICAgcHJvcHMuaXNIZWFkZXIgPSBwYXJlbnQubm9kZS50eXBlID09PSAndGFibGVIZWFkJztcbiAgICAgIHByb3BzLmNvbHVtbkFsaWdubWVudCA9IHBhcmVudC5wcm9wcy5jb2x1bW5BbGlnbm1lbnQ7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3RhYmxlQ2VsbCc6XG4gICAgICBhc3NpZ25EZWZpbmVkKHByb3BzLCB7XG4gICAgICAgIGlzSGVhZGVyOiBwYXJlbnQucHJvcHMuaXNIZWFkZXIsXG4gICAgICAgIGFsaWduOiBwYXJlbnQucHJvcHMuY29sdW1uQWxpZ25tZW50W2luZGV4XVxuICAgICAgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3ZpcnR1YWxIdG1sJzpcbiAgICAgIHByb3BzLnRhZyA9IG5vZGUudGFnO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdodG1sJzpcbiAgICAgIC8vIEB0b2RvIGZpbmQgYSBiZXR0ZXIgd2F5IHRoYW4gdGhpc1xuICAgICAgcHJvcHMuaXNCbG9jayA9IG5vZGUucG9zaXRpb24uc3RhcnQubGluZSAhPT0gbm9kZS5wb3NpdGlvbi5lbmQubGluZTtcbiAgICAgIHByb3BzLmVzY2FwZUh0bWwgPSBvcHRzLmVzY2FwZUh0bWw7XG4gICAgICBwcm9wcy5za2lwSHRtbCA9IG9wdHMuc2tpcEh0bWw7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3BhcnNlZEh0bWwnOlxuICAgICAge1xuICAgICAgICB2YXIgcGFyc2VkQ2hpbGRyZW47XG5cbiAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgICAgICBwYXJzZWRDaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChjaGlsZCwgaSkge1xuICAgICAgICAgICAgcmV0dXJuIGFzdFRvUmVhY3QoY2hpbGQsIG9wdHMsIHtcbiAgICAgICAgICAgICAgbm9kZTogbm9kZSxcbiAgICAgICAgICAgICAgcHJvcHM6IHByb3BzXG4gICAgICAgICAgICB9LCBpKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByb3BzLmVzY2FwZUh0bWwgPSBvcHRzLmVzY2FwZUh0bWw7XG4gICAgICAgIHByb3BzLnNraXBIdG1sID0gb3B0cy5za2lwSHRtbDtcbiAgICAgICAgcHJvcHMuZWxlbWVudCA9IG1lcmdlTm9kZUNoaWxkcmVuKG5vZGUsIHBhcnNlZENoaWxkcmVuKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAgYXNzaWduRGVmaW5lZChwcm9wcywgeHRlbmQobm9kZSwge1xuICAgICAgICB0eXBlOiB1bmRlZmluZWQsXG4gICAgICAgIHBvc2l0aW9uOiB1bmRlZmluZWQsXG4gICAgICAgIGNoaWxkcmVuOiB1bmRlZmluZWRcbiAgICAgIH0pKTtcbiAgfVxuXG4gIGlmICghaXNUYWdSZW5kZXJlciAmJiBub2RlLnZhbHVlKSB7XG4gICAgcHJvcHMudmFsdWUgPSBub2RlLnZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHByb3BzO1xufVxuXG5mdW5jdGlvbiBhc3NpZ25EZWZpbmVkKHRhcmdldCwgYXR0cnMpIHtcbiAgZm9yICh2YXIga2V5IGluIGF0dHJzKSB7XG4gICAgaWYgKHR5cGVvZiBhdHRyc1trZXldICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGFyZ2V0W2tleV0gPSBhdHRyc1trZXldO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBtZXJnZU5vZGVDaGlsZHJlbihub2RlLCBwYXJzZWRDaGlsZHJlbikge1xuICB2YXIgZWwgPSBub2RlLmVsZW1lbnQ7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgdmFyIEZyYWdtZW50ID0gUmVhY3QuRnJhZ21lbnQgfHwgJ2Rpdic7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRnJhZ21lbnQsIG51bGwsIGVsKTtcbiAgfVxuXG4gIGlmIChlbC5wcm9wcy5jaGlsZHJlbiB8fCBwYXJzZWRDaGlsZHJlbikge1xuICAgIHZhciBjaGlsZHJlbiA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoZWwucHJvcHMuY2hpbGRyZW4pLmNvbmNhdChwYXJzZWRDaGlsZHJlbik7XG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChlbCwgbnVsbCwgY2hpbGRyZW4pO1xuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChlbCwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW5Qb3NpdGlvbihwb3MpIHtcbiAgcmV0dXJuIFtwb3Muc3RhcnQubGluZSwgJzonLCBwb3Muc3RhcnQuY29sdW1uLCAnLScsIHBvcy5lbmQubGluZSwgJzonLCBwb3MuZW5kLmNvbHVtbl0ubWFwKFN0cmluZykuam9pbignJyk7XG59XG5cbmZ1bmN0aW9uIGdldExpc3RJdGVtQ2hpbGRyZW4obm9kZSwgcGFyZW50KSB7XG4gIGlmIChub2RlLmxvb3NlKSB7XG4gICAgcmV0dXJuIG5vZGUuY2hpbGRyZW47XG4gIH1cblxuICBpZiAocGFyZW50Lm5vZGUgJiYgbm9kZS5pbmRleCA+IDAgJiYgcGFyZW50Lm5vZGUuY2hpbGRyZW5bbm9kZS5pbmRleCAtIDFdLmxvb3NlKSB7XG4gICAgcmV0dXJuIG5vZGUuY2hpbGRyZW47XG4gIH1cblxuICByZXR1cm4gdW53cmFwUGFyYWdyYXBocyhub2RlKTtcbn1cblxuZnVuY3Rpb24gdW53cmFwUGFyYWdyYXBocyhub2RlKSB7XG4gIHJldHVybiBub2RlLmNoaWxkcmVuLnJlZHVjZShmdW5jdGlvbiAoYXJyYXksIGNoaWxkKSB7XG4gICAgcmV0dXJuIGFycmF5LmNvbmNhdChjaGlsZC50eXBlID09PSAncGFyYWdyYXBoJyA/IGNoaWxkLmNoaWxkcmVuIHx8IFtdIDogW2NoaWxkXSk7XG4gIH0sIFtdKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc3RUb1JlYWN0OyIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTIuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx3PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIHkoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB6KGEpe3JldHVybiB5KGEpPT09bX1cbmV4cG9ydHMudHlwZU9mPXk7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09dnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14KX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKXx8eShhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT16O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09aH07XG5leHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cH07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB2aXNpdCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtdmlzaXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobm9kZSkge1xuICB2aXNpdChub2RlLCAndGFibGUnLCB3cmFwKTtcbiAgcmV0dXJuIG5vZGU7XG59O1xuXG5mdW5jdGlvbiB3cmFwKHRhYmxlKSB7XG4gIHZhciBjaGlsZHJlbiA9IHRhYmxlLmNoaWxkcmVuO1xuICB0YWJsZS5jaGlsZHJlbiA9IFt7XG4gICAgdHlwZTogJ3RhYmxlSGVhZCcsXG4gICAgYWxpZ246IHRhYmxlLmFsaWduLFxuICAgIGNoaWxkcmVuOiBbY2hpbGRyZW5bMF1dLFxuICAgIHBvc2l0aW9uOiBjaGlsZHJlblswXS5wb3NpdGlvblxuICB9XTtcblxuICBpZiAoY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuICAgIHRhYmxlLmNoaWxkcmVuLnB1c2goe1xuICAgICAgdHlwZTogJ3RhYmxlQm9keScsXG4gICAgICBhbGlnbjogdGFibGUuYWxpZ24sXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW4uc2xpY2UoMSksXG4gICAgICBwb3NpdGlvbjoge1xuICAgICAgICBzdGFydDogY2hpbGRyZW5bMV0ucG9zaXRpb24uc3RhcnQsXG4gICAgICAgIGVuZDogY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV0ucG9zaXRpb24uZW5kXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0RGVmaW5pdGlvbnMobm9kZSkge1xuICB2YXIgZGVmcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHJldHVybiAobm9kZS5jaGlsZHJlbiB8fCBbXSkucmVkdWNlKGZ1bmN0aW9uIChkZWZpbml0aW9ucywgY2hpbGQpIHtcbiAgICBpZiAoY2hpbGQudHlwZSA9PT0gJ2RlZmluaXRpb24nKSB7XG4gICAgICBkZWZpbml0aW9uc1tjaGlsZC5pZGVudGlmaWVyXSA9IHtcbiAgICAgICAgaHJlZjogY2hpbGQudXJsLFxuICAgICAgICB0aXRsZTogY2hpbGQudGl0bGVcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldERlZmluaXRpb25zKGNoaWxkLCBkZWZpbml0aW9ucyk7XG4gIH0sIGRlZnMpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHByb3RvY29scyA9IFsnaHR0cCcsICdodHRwcycsICdtYWlsdG8nLCAndGVsJ107XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdXJpVHJhbnNmb3JtZXIodXJpKSB7XG4gIHZhciB1cmwgPSAodXJpIHx8ICcnKS50cmltKCk7XG4gIHZhciBmaXJzdCA9IHVybC5jaGFyQXQoMCk7XG5cbiAgaWYgKGZpcnN0ID09PSAnIycgfHwgZmlyc3QgPT09ICcvJykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgY29sb24gPSB1cmwuaW5kZXhPZignOicpO1xuXG4gIGlmIChjb2xvbiA9PT0gLTEpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIGxlbmd0aCA9IHByb3RvY29scy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IC0xO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHByb3RvY29sID0gcHJvdG9jb2xzW2luZGV4XTtcblxuICAgIGlmIChjb2xvbiA9PT0gcHJvdG9jb2wubGVuZ3RoICYmIHVybC5zbGljZSgwLCBwcm90b2NvbC5sZW5ndGgpLnRvTG93ZXJDYXNlKCkgPT09IHByb3RvY29sKSB7XG4gICAgICByZXR1cm4gdXJsO1xuICAgIH1cbiAgfVxuXG4gIGluZGV4ID0gdXJsLmluZGV4T2YoJz8nKTtcblxuICBpZiAoaW5kZXggIT09IC0xICYmIGNvbG9uID4gaW5kZXgpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgaW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuXG4gIGlmIChpbmRleCAhPT0gLTEgJiYgY29sb24gPiBpbmRleCkge1xuICAgIHJldHVybiB1cmw7XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNjcmlwdC11cmxcblxuXG4gIHJldHVybiAnamF2YXNjcmlwdDp2b2lkKDApJztcbn07IiwiLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcywgcmVhY3Qvbm8tbXVsdGktY29tcCAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgeHRlbmQgPSByZXF1aXJlKCd4dGVuZCcpO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgc3VwcG9ydHNTdHJpbmdSZW5kZXIgPSBwYXJzZUludCgoUmVhY3QudmVyc2lvbiB8fCAnMTYnKS5zbGljZSgwLCAyKSwgMTApID49IDE2O1xudmFyIGNyZWF0ZUVsZW1lbnQgPSBSZWFjdC5jcmVhdGVFbGVtZW50O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGJyZWFrOiAnYnInLFxuICBwYXJhZ3JhcGg6ICdwJyxcbiAgZW1waGFzaXM6ICdlbScsXG4gIHN0cm9uZzogJ3N0cm9uZycsXG4gIHRoZW1hdGljQnJlYWs6ICdocicsXG4gIGJsb2NrcXVvdGU6ICdibG9ja3F1b3RlJyxcbiAgZGVsZXRlOiAnZGVsJyxcbiAgbGluazogJ2EnLFxuICBpbWFnZTogJ2ltZycsXG4gIGxpbmtSZWZlcmVuY2U6ICdhJyxcbiAgaW1hZ2VSZWZlcmVuY2U6ICdpbWcnLFxuICB0YWJsZTogU2ltcGxlUmVuZGVyZXIuYmluZChudWxsLCAndGFibGUnKSxcbiAgdGFibGVIZWFkOiBTaW1wbGVSZW5kZXJlci5iaW5kKG51bGwsICd0aGVhZCcpLFxuICB0YWJsZUJvZHk6IFNpbXBsZVJlbmRlcmVyLmJpbmQobnVsbCwgJ3Rib2R5JyksXG4gIHRhYmxlUm93OiBTaW1wbGVSZW5kZXJlci5iaW5kKG51bGwsICd0cicpLFxuICB0YWJsZUNlbGw6IFRhYmxlQ2VsbCxcbiAgcm9vdDogUm9vdCxcbiAgdGV4dDogVGV4dFJlbmRlcmVyLFxuICBsaXN0OiBMaXN0LFxuICBsaXN0SXRlbTogTGlzdEl0ZW0sXG4gIGRlZmluaXRpb246IE51bGxSZW5kZXJlcixcbiAgaGVhZGluZzogSGVhZGluZyxcbiAgaW5saW5lQ29kZTogSW5saW5lQ29kZSxcbiAgY29kZTogQ29kZUJsb2NrLFxuICBodG1sOiBIdG1sLFxuICB2aXJ0dWFsSHRtbDogVmlydHVhbEh0bWwsXG4gIHBhcnNlZEh0bWw6IFBhcnNlZEh0bWxcbn07XG5cbmZ1bmN0aW9uIFRleHRSZW5kZXJlcihwcm9wcykge1xuICByZXR1cm4gc3VwcG9ydHNTdHJpbmdSZW5kZXIgPyBwcm9wcy5jaGlsZHJlbiA6IGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCBudWxsLCBwcm9wcy5jaGlsZHJlbik7XG59XG5cbmZ1bmN0aW9uIFJvb3QocHJvcHMpIHtcbiAgdmFyIHVzZUZyYWdtZW50ID0gIXByb3BzLmNsYXNzTmFtZTtcbiAgdmFyIHJvb3QgPSB1c2VGcmFnbWVudCA/IFJlYWN0LkZyYWdtZW50IHx8ICdkaXYnIDogJ2Rpdic7XG4gIHJldHVybiBjcmVhdGVFbGVtZW50KHJvb3QsIHVzZUZyYWdtZW50ID8gbnVsbCA6IHByb3BzLCBwcm9wcy5jaGlsZHJlbik7XG59XG5cbmZ1bmN0aW9uIFNpbXBsZVJlbmRlcmVyKHRhZywgcHJvcHMpIHtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQodGFnLCBnZXRDb3JlUHJvcHMocHJvcHMpLCBwcm9wcy5jaGlsZHJlbik7XG59XG5cbmZ1bmN0aW9uIFRhYmxlQ2VsbChwcm9wcykge1xuICB2YXIgc3R5bGUgPSBwcm9wcy5hbGlnbiA/IHtcbiAgICB0ZXh0QWxpZ246IHByb3BzLmFsaWduXG4gIH0gOiB1bmRlZmluZWQ7XG4gIHZhciBjb3JlUHJvcHMgPSBnZXRDb3JlUHJvcHMocHJvcHMpO1xuICByZXR1cm4gY3JlYXRlRWxlbWVudChwcm9wcy5pc0hlYWRlciA/ICd0aCcgOiAndGQnLCBzdHlsZSA/IHh0ZW5kKHtcbiAgICBzdHlsZTogc3R5bGVcbiAgfSwgY29yZVByb3BzKSA6IGNvcmVQcm9wcywgcHJvcHMuY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBIZWFkaW5nKHByb3BzKSB7XG4gIHJldHVybiBjcmVhdGVFbGVtZW50KFwiaFwiLmNvbmNhdChwcm9wcy5sZXZlbCksIGdldENvcmVQcm9wcyhwcm9wcyksIHByb3BzLmNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gTGlzdChwcm9wcykge1xuICB2YXIgYXR0cnMgPSBnZXRDb3JlUHJvcHMocHJvcHMpO1xuXG4gIGlmIChwcm9wcy5zdGFydCAhPT0gbnVsbCAmJiBwcm9wcy5zdGFydCAhPT0gMSAmJiBwcm9wcy5zdGFydCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgYXR0cnMuc3RhcnQgPSBwcm9wcy5zdGFydC50b1N0cmluZygpO1xuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQocHJvcHMub3JkZXJlZCA/ICdvbCcgOiAndWwnLCBhdHRycywgcHJvcHMuY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBMaXN0SXRlbShwcm9wcykge1xuICB2YXIgY2hlY2tib3ggPSBudWxsO1xuXG4gIGlmIChwcm9wcy5jaGVja2VkICE9PSBudWxsICYmIHByb3BzLmNoZWNrZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBjaGVja2VkID0gcHJvcHMuY2hlY2tlZDtcbiAgICBjaGVja2JveCA9IGNyZWF0ZUVsZW1lbnQoJ2lucHV0Jywge1xuICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgIGNoZWNrZWQ6IGNoZWNrZWQsXG4gICAgICByZWFkT25seTogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2xpJywgZ2V0Q29yZVByb3BzKHByb3BzKSwgY2hlY2tib3gsIHByb3BzLmNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gQ29kZUJsb2NrKHByb3BzKSB7XG4gIHZhciBjbGFzc05hbWUgPSBwcm9wcy5sYW5ndWFnZSAmJiBcImxhbmd1YWdlLVwiLmNvbmNhdChwcm9wcy5sYW5ndWFnZSk7XG4gIHZhciBjb2RlID0gY3JlYXRlRWxlbWVudCgnY29kZScsIGNsYXNzTmFtZSA/IHtcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVxuICB9IDogbnVsbCwgcHJvcHMudmFsdWUpO1xuICByZXR1cm4gY3JlYXRlRWxlbWVudCgncHJlJywgZ2V0Q29yZVByb3BzKHByb3BzKSwgY29kZSk7XG59XG5cbmZ1bmN0aW9uIElubGluZUNvZGUocHJvcHMpIHtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2NvZGUnLCBnZXRDb3JlUHJvcHMocHJvcHMpLCBwcm9wcy5jaGlsZHJlbik7XG59XG5cbmZ1bmN0aW9uIEh0bWwocHJvcHMpIHtcbiAgaWYgKHByb3BzLnNraXBIdG1sKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgdGFnID0gcHJvcHMuaXNCbG9jayA/ICdkaXYnIDogJ3NwYW4nO1xuXG4gIGlmIChwcm9wcy5lc2NhcGVIdG1sKSB7XG4gICAgdmFyIGNvbXAgPSBSZWFjdC5GcmFnbWVudCB8fCB0YWc7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoY29tcCwgbnVsbCwgcHJvcHMudmFsdWUpO1xuICB9XG5cbiAgdmFyIG5vZGVQcm9wcyA9IHtcbiAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgX19odG1sOiBwcm9wcy52YWx1ZVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQodGFnLCBub2RlUHJvcHMpO1xufVxuXG5mdW5jdGlvbiBQYXJzZWRIdG1sKHByb3BzKSB7XG4gIHJldHVybiBwcm9wc1snZGF0YS1zb3VyY2Vwb3MnXSA/IFJlYWN0LmNsb25lRWxlbWVudChwcm9wcy5lbGVtZW50LCB7XG4gICAgJ2RhdGEtc291cmNlcG9zJzogcHJvcHNbJ2RhdGEtc291cmNlcG9zJ11cbiAgfSkgOiBwcm9wcy5lbGVtZW50O1xufVxuXG5mdW5jdGlvbiBWaXJ0dWFsSHRtbChwcm9wcykge1xuICByZXR1cm4gY3JlYXRlRWxlbWVudChwcm9wcy50YWcsIGdldENvcmVQcm9wcyhwcm9wcyksIHByb3BzLmNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gTnVsbFJlbmRlcmVyKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0Q29yZVByb3BzKHByb3BzKSB7XG4gIHJldHVybiBwcm9wc1snZGF0YS1zb3VyY2Vwb3MnXSA/IHtcbiAgICAnZGF0YS1zb3VyY2Vwb3MnOiBwcm9wc1snZGF0YS1zb3VyY2Vwb3MnXVxuICB9IDoge307XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBIdG1sUGFyc2VyID0gJ19fUk1EX0hUTUxfUEFSU0VSX18nO1xuZXhwb3J0cy5IdG1sUGFyc2VyID0gdHlwZW9mIFN5bWJvbCA9PT0gJ3VuZGVmaW5lZCcgPyBIdG1sUGFyc2VyIDogU3ltYm9sKEh0bWxQYXJzZXIpOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8sIGZyb20pIHtcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gKHRvICYmIHRvLnNwbGl0KCcvJykpIHx8IFtdO1xuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuXG4gIGlmIChcbiAgICBtdXN0RW5kQWJzICYmXG4gICAgZnJvbVBhcnRzWzBdICE9PSAnJyAmJlxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXG4gIClcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnJyk7XG5cbiAgdmFyIHJlc3VsdCA9IGZyb21QYXJ0cy5qb2luKCcvJyk7XG5cbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXNvbHZlUGF0aG5hbWU7XG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbnZhciBwcmVmaXggPSAnSW52YXJpYW50IGZhaWxlZCc7XG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbnZhcmlhbnQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgZ3VkIGZyb20gJ2d1ZCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ3VkKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXJcIik7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVSb290TWF0Y2gocGF0aG5hbWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogXCIvXCIsXG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgcGFyYW1zOiB7fSxcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gUm91dGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxuICAgIH07IC8vIFRoaXMgaXMgYSBiaXQgb2YgYSBoYWNrLiBXZSBoYXZlIHRvIHN0YXJ0IGxpc3RlbmluZyBmb3IgbG9jYXRpb25cbiAgICAvLyBjaGFuZ2VzIGhlcmUgaW4gdGhlIGNvbnN0cnVjdG9yIGluIGNhc2UgdGhlcmUgYXJlIGFueSA8UmVkaXJlY3Q+c1xuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cbiAgICAvLyB0aGV5IG1vdW50IGFuZCBzaW5jZSBjRE0gZmlyZXMgaW4gY2hpbGRyZW4gYmVmb3JlIHBhcmVudHMsIHdlIG1heVxuICAgIC8vIGdldCBhIG5ldyBsb2NhdGlvbiBiZWZvcmUgdGhlIDxSb3V0ZXI+IGlzIG1vdW50ZWQuXG5cbiAgICBfdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG5cbiAgICBpZiAoIXByb3BzLnN0YXRpY0NvbnRleHQpIHtcbiAgICAgIF90aGlzLnVubGlzdGVuID0gcHJvcHMuaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLl9wZW5kaW5nTG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bmxpc3RlbikgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xuICBQcm9tcHQucHJvcFR5cGVzID0ge1xuICAgIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhdGggPSBcIi9cIjtcbiAgfVxuXG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xuICAgIHByZXR0eTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3RvcnksXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0LnN0YXRpY0NvbnRleHQ7XG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cblxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG5cbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICB9KSkpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBwYXRoOiBvcHRpb25zXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICB2YXIgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkMSkge1xuICAgICAgIWNvbnRleHQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICA6IF90aGlzLnByb3BzLnBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF90aGlzLnByb3BzKSA6IGNvbnRleHQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkMSwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSkgO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzJGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wcyRjb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0Lm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG5cbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcbiAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59XG5cbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcbmZ1bmN0aW9uIHVzZUhpc3RvcnkoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkuaGlzdG9yeTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgodXNlTG9jYXRpb24oKS5wYXRobmFtZSwgcGF0aCkgOiB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci5qcy5tYXBcbiIsImltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0ICogZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEhhc2hSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIHJlc29sdmVUb0xvY2F0aW9uID0gZnVuY3Rpb24gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcImZ1bmN0aW9uXCIgPyB0byhjdXJyZW50TG9jYXRpb24pIDogdG87XG59O1xudmFyIG5vcm1hbGl6ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiBub3JtYWxpemVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pIDogdG87XG59O1xuXG52YXIgZm9yd2FyZFJlZlNoaW0gPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYgPSBSZWFjdC5mb3J3YXJkUmVmO1xuXG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgZm9yd2FyZFJlZiA9IGZvcndhcmRSZWZTaGltO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG52YXIgTGlua0FuY2hvciA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIGZvcndhcmRlZFJlZikge1xuICB2YXIgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgbmF2aWdhdGUgPSBfcmVmLm5hdmlnYXRlLFxuICAgICAgX29uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiaW5uZXJSZWZcIiwgXCJuYXZpZ2F0ZVwiLCBcIm9uQ2xpY2tcIl0pO1xuXG4gIHZhciB0YXJnZXQgPSByZXN0LnRhcmdldDtcblxuICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChfb25DbGljaykgX29uQ2xpY2soZXZlbnQpO1xuICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhyb3cgZXg7XG4gICAgICB9XG5cbiAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICBldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAgICF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBuYXZpZ2F0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gIH0gZWxzZSB7XG4gICAgcHJvcHMucmVmID0gaW5uZXJSZWY7XG4gIH1cblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgcHJvcHMpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYyLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYyJGNvbXBvbmVudCA9IF9yZWYyLmNvbXBvbmVudCxcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYyJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gTGlua0FuY2hvciA6IF9yZWYyJGNvbXBvbmVudCxcbiAgICAgIHJlcGxhY2UgPSBfcmVmMi5yZXBsYWNlLFxuICAgICAgdG8gPSBfcmVmMi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNvbXBvbmVudFwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5O1xuICAgIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICB2YXIgaHJlZiA9IGxvY2F0aW9uID8gaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzb2x2ZVRvTG9jYXRpb24odG8sIGNvbnRleHQubG9jYXRpb24pO1xuICAgICAgICB2YXIgbWV0aG9kID0gcmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XG5cblxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuZnVuY10pO1xuICB2YXIgcmVmVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcbiAgfSldKTtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xuICBMaW5rLnByb3BUeXBlcyA9IHtcbiAgICBpbm5lclJlZjogcmVmVHlwZSxcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IHRvVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBmb3J3YXJkUmVmU2hpbSQxID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmJDEgPSBSZWFjdC5mb3J3YXJkUmVmO1xuXG5pZiAodHlwZW9mIGZvcndhcmRSZWYkMSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmJDEgPSBmb3J3YXJkUmVmU2hpbSQxO1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cblxuXG52YXIgTmF2TGluayA9IGZvcndhcmRSZWYkMShmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBfcmVmJGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcbiAgICAgIGFyaWFDdXJyZW50ID0gX3JlZiRhcmlhQ3VycmVudCA9PT0gdm9pZCAwID8gXCJwYWdlXCIgOiBfcmVmJGFyaWFDdXJyZW50LFxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYkYWN0aXZlQ2xhc3NOYW1lID09PSB2b2lkIDAgPyBcImFjdGl2ZVwiIDogX3JlZiRhY3RpdmVDbGFzc05hbWUsXG4gICAgICBhY3RpdmVTdHlsZSA9IF9yZWYuYWN0aXZlU3R5bGUsXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICBpc0FjdGl2ZVByb3AgPSBfcmVmLmlzQWN0aXZlLFxuICAgICAgbG9jYXRpb25Qcm9wID0gX3JlZi5sb2NhdGlvbixcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgc3R5bGVQcm9wID0gX3JlZi5zdHlsZSxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJhcmlhLWN1cnJlbnRcIiwgXCJhY3RpdmVDbGFzc05hbWVcIiwgXCJhY3RpdmVTdHlsZVwiLCBcImNsYXNzTmFtZVwiLCBcImV4YWN0XCIsIFwiaXNBY3RpdmVcIiwgXCJsb2NhdGlvblwiLCBcInN0cmljdFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TmF2TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgY3VycmVudExvY2F0aW9uID0gbG9jYXRpb25Qcm9wIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgdmFyIHRvTG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pLCBjdXJyZW50TG9jYXRpb24pO1xuICAgIHZhciBwYXRoID0gdG9Mb2NhdGlvbi5wYXRobmFtZTsgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcblxuICAgIHZhciBlc2NhcGVkUGF0aCA9IHBhdGggJiYgcGF0aC5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfC9cXFxcXSkvZywgXCJcXFxcJDFcIik7XG4gICAgdmFyIG1hdGNoID0gZXNjYXBlZFBhdGggPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XG4gICAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICAgIGV4YWN0OiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gIH0pO1xufVxuXG5leHBvcnQgeyBCcm93c2VyUm91dGVyLCBIYXNoUm91dGVyLCBMaW5rLCBOYXZMaW5rIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXItZG9tLmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBBYm91dCBleHRlbmRzIENvbXBvbmVudCB7XG5cdHJlbmRlcigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJzZWN0aW9uLWNvbnRlbnRcIj5cblx0XHRcdFx0PGgxPnJlYWN0LXNjcm9sbHNweS1uYXY8L2gxPlxuXHRcdFx0XHQ8cD48Yj5yZWFjdC1zY3JvbGxzcHktbmF2PC9iPiBpcyBhIFJlYWN0IGNvbXBvbmVudCB0aGF0IHByb3ZpZGVzIHNtb290aCBzY3JvbGxpbmcgbmF2aWdhdGlvbiB0byB0aGUgcGFnZS4gXG5cdFx0XHRcdEl0IGFsc28gYWNjb251dHMgZm9yIHRoZSBmYWN0b3IgdGhhdCBhIFJlYWN0IGFwcCBtYXkgdXNlIGRpZmZlcmVudCBSZWFjdCByb3V0ZXIgYW5kIHRoZXJlZm9yZSBoYXMgXG5cdFx0XHRcdGRpZmZlcmVudCB1cmwgcGF0dGVybnMgKGZvciBleGFtcGxlIHRoZSBoYXNoIHBhdGhuYW1lIGluIDxpPkhhc2hSb3V0ZXI8L2k+KS5cblx0XHRcdFx0PC9wPlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBBYm91dDsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmNsYXNzIFVzYWdlIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNlY3Rpb24tY29udGVudFwiPlxuXHRcdFx0XHQ8aDI+SW5zdGFsbGF0aW9uPC9oMj5cblx0XHRcdFx0PHAgY2xhc3NOYW1lPVwiY29kZS1ibG9ja1wiPm5wbSBpbnN0YWxsIC0tc2F2ZSByZWFjdC1zY3JvbGxzcHktbmF2PC9wPlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBVc2FnZTsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcblxuY2xhc3MgRXhhbXBsZSBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IHtjb250ZW50OiBcIlwifTtcblx0fVxuXG5cdGNvbXBvbmVudFdpbGxNb3VudCgpIHtcblx0XHRmZXRjaChgLi9tYXJrZG93bi9leGFtcGxlLm1kYClcblx0XHRcdC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSlcblx0XHRcdC50aGVuKHRleHQgPT4gdGhpcy5zZXRTdGF0ZSh7Y29udGVudDp0ZXh0fSkpXG5cdH1cblxuXHRidWlsZEV4YW1wbGVDb2RlKCkge1xuXHRcdGlmICh3aW5kb3cuc2NyZWVuLmF2YWlsV2lkdGggPiAxMDAwKSB7XG5cdFx0XHRyZXR1cm4oPGRpdiBjbGFzc05hbWU9XCJjb2RlLWJsb2NrXCI+PFJlYWN0TWFya2Rvd24gc291cmNlPXt0aGlzLnN0YXRlLmNvbnRlbnR9IC8+PC9kaXY+KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuKDxkaXY+Q2hlY2sgb3V0IHRoZSBjb2RlIGluIERlc2t0b3Agc2NyZWVuPC9kaXY+KTtcblx0XHR9XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwic2VjdGlvbi1jb250ZW50XCI+XG5cdFx0XHRcdDxoMj5FeGFtcGxlPC9oMj5cblx0XHRcdFx0e3RoaXMuYnVpbGRFeGFtcGxlQ29kZSgpfVxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBFeGFtcGxlO1x0IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBDb25maWd1cmF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNlY3Rpb24tY29udGVudFwiPlxuXHRcdFx0XHQ8aDI+Q29uZmlndXJhdGlvbjwvaDI+XG5cdFx0XHRcdDxkaXY+XG5cdFx0XHRcdFx0PHA+UHJvcHMgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIENvbXBvbmVudCA8Yj5TY3JvbGxzcHlOYXY8L2I+IGZvciBjb25maWd1cmF0aW9uLjwvcD5cblx0XHRcdFx0XHQ8dGFibGU+XG5cdFx0XHRcdFx0XHQ8dGhlYWQ+XG5cdFx0XHRcdFx0XHRcdDx0cj5cblx0XHRcdFx0XHRcdFx0XHQ8dGg+TmFtZTwvdGg+XG5cdFx0XHRcdFx0XHRcdFx0PHRoPlR5cGU8L3RoPlxuXHRcdFx0XHRcdFx0XHRcdDx0aD5EZXNjcmlwdGlvbjwvdGg+XG5cdFx0XHRcdFx0XHRcdFx0PHRoPkV4YW1wbGUgVmFsdWU8L3RoPlxuXHRcdFx0XHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHRcdFx0PC90aGVhZD5cblx0XHRcdFx0XHRcdDx0Ym9keT5cblx0XHRcdFx0XHRcdFx0PHRyPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5zY3JvbGxUYXJnZXRJZHM8L3RkPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5BcnJheTwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPkxpc3Qgb2Ygc2Nyb2xsIHRhcmdldHMgaWRzPC90ZD5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+W1wic2VjdGlvbl8xXCIsIFwic2VjdGlvbl8yXCIsIFwic2VjdGlvbl8zXCJdPC90ZD5cblx0XHRcdFx0XHRcdFx0PC90cj5cblx0XHRcdFx0XHRcdFx0PHRyPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5hY3RpdmVOYXZDbGFzczwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPlN0cmluZzwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPkNsYXNzIG5hbWUgZm9yIHN0eWxpbmcgdGhlIG5hdiBsaW5rIHRoYXQncyBjdXJyZW50bHkgYWN0aXZlPC90ZD5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+XCJpcy1hY3RpdmVcIjwvdGQ+XG5cdFx0XHRcdFx0XHRcdDwvdHI+XG5cdFx0XHRcdFx0XHRcdDx0cj5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+c2Nyb2xsRHVyYXRpb248L3RkPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5TdHJpbmc8L3RkPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5TY3JvbGwgZHVyYXRpb24gZm9yIGNvbnRyb2xsaW5nIGhvdyBmYXN0IHRoZSBuYXYgY2xpY2sgc2Nyb2xscyB0byBpdHMgc2VjdGlvbi4gRGVmYXVsdCBpcyBcIjEwMDBcIjwvdGQ+XG5cdFx0XHRcdFx0XHRcdFx0PHRkPlwiMTAwMFwiPC90ZD5cblx0XHRcdFx0XHRcdFx0PC90cj5cblx0XHRcdFx0XHRcdFx0PHRyPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5yb3V0ZXI8L3RkPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5TdHJpbmc8L3RkPlxuXHRcdFx0XHRcdFx0XHRcdDx0ZD5UaGUgbmFtZSBvZiByb3V0ZXIgdXNlZCBpbiByZWFjdCBhcHAgaWYgYW55PC90ZD5cblx0XHRcdFx0XHRcdFx0XHQ8dGQ+XCJIYXNoUm91dGVyXCI8L3RkPlxuXHRcdFx0XHRcdFx0XHQ8L3RyPlxuXHRcdFx0XHRcdFx0PC90Ym9keT5cblx0XHRcdFx0XHQ8L3RhYmxlPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uZmlndXJhdGlvbjsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSb3V0ZSwgTmF2TGluaywgSGFzaFJvdXRlciwgU3dpdGNoIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcbmltcG9ydCBTY3JvbGxzcHlOYXYgZnJvbSBcIi4vbGliL1Njcm9sbHNweU5hdlwiO1xuaW1wb3J0IEFib3V0IGZyb20gXCIuL2NvbXBvbmVudHMvQWJvdXRcIjtcbmltcG9ydCBVc2FnZSBmcm9tIFwiLi9jb21wb25lbnRzL1VzYWdlXCI7XG5pbXBvcnQgRXhhbXBsZSBmcm9tIFwiLi9jb21wb25lbnRzL0V4YW1wbGVcIjtcbmltcG9ydCBDb25maWd1cmF0aW9uIGZyb20gXCIuL2NvbXBvbmVudHMvQ29uZmlndXJhdGlvblwiO1xuXG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybihcbiAgICAgICAgLy8gPGRpdj5cbiAgICAgICAgLy8gICA8ZGl2IGNsYXNzTmFtZT1cIm5hdlwiPlxuICAgICAgICAvLyAgICAgPFNjcm9sbHNweU5hdiBzY3JvbGxUYXJnZXRJZHM9e1tcInNlY3Rpb25fMVwiLCBcInNlY3Rpb25fMlwiLCBcInNlY3Rpb25fM1wiXX0gYWN0aXZlTmF2Q2xhc3M9XCJpcy1hY3RpdmVcIiBzY3JvbGxEdXJhdGlvbj1cIjEwMDBcIiBoZWFkZXJCYWNrZ3JvdW5kPVwidHJ1ZVwiPlxuICAgICAgICAvLyAgICAgICAgIDx1bD5cbiAgICAgICAgLy8gICAgICAgICAgIDxsaT48YSBocmVmPVwiL1wiPjxzcGFuPkhvbWU8L3NwYW4+PC9hPjwvbGk+XG4gICAgICAgIC8vICAgICAgICAgICA8bGk+PGEgaHJlZj1cIiNzZWN0aW9uXzFcIj48c3Bhbj5Vc2FnZTwvc3Bhbj48L2E+PC9saT5cbiAgICAgICAgLy8gICAgICAgICAgIDxsaT48YSBocmVmPVwiI3NlY3Rpb25fMlwiPjxzcGFuPkV4YW1wbGU8L3NwYW4+PC9hPjwvbGk+XG4gICAgICAgIC8vICAgICAgICAgICA8bGk+PGEgaHJlZj1cIiNzZWN0aW9uXzNcIj48c3Bhbj5Db25maWd1cmF0aW9uPC9zcGFuPjwvYT48L2xpPlxuICAgICAgICAvLyAgICAgICAgIDwvdWw+XG4gICAgICAgIC8vICAgICA8L1Njcm9sbHNweU5hdj5cbiAgICAgICAgLy8gICA8L2Rpdj5cblxuICAgICAgICAvLyAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAvLyAgICAgICA8ZGl2IGlkPVwiaGVhZGVyXCI+PEFib3V0IC8+PC9kaXY+XG4gICAgICAgIC8vICAgICAgIDxkaXYgaWQ9XCJzZWN0aW9uXzFcIj48VXNhZ2UgLz48L2Rpdj5cbiAgICAgICAgLy8gICAgICAgPGRpdiBpZD1cInNlY3Rpb25fMlwiPjxFeGFtcGxlIC8+PC9kaXY+XG4gICAgICAgIC8vICAgICAgIDxkaXYgaWQ9XCJzZWN0aW9uXzNcIj48Q29uZmlndXJhdGlvbiAvPjwvZGl2PlxuICAgICAgICAvLyAgIDwvZGl2PlxuICAgICAgICAvLyA8L2Rpdj5cbiAgICAgICAgXG5cbiAgICAgICAgLy8gLypcbiAgICAgICAgPEhhc2hSb3V0ZXI+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmF2XCI+XG4gICAgICAgICAgICAgIDxTY3JvbGxzcHlOYXYgc2Nyb2xsVGFyZ2V0SWRzPXtbXCJzZWN0aW9uXzFcIiwgXCJzZWN0aW9uXzJcIiwgXCJzZWN0aW9uXzNcIl19IGFjdGl2ZU5hdkNsYXNzPVwiaXMtYWN0aXZlXCIgcm91dGVyPVwiSGFzaFJvdXRlclwiPlxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgIDxsaT48TmF2TGluayB0bz1cIi9cIj48c3Bhbj5Ib21lPC9zcGFuPjwvTmF2TGluaz48L2xpPlxuICAgICAgICAgICAgICAgICAgPGxpPjxOYXZMaW5rIHRvPVwiI3NlY3Rpb25fMVwiPjxzcGFuPlVzYWdlPC9zcGFuPjwvTmF2TGluaz48L2xpPlxuICAgICAgICAgICAgICAgICAgPGxpPjxOYXZMaW5rIHRvPVwiI3NlY3Rpb25fMlwiPjxzcGFuPkV4YW1wbGU8L3NwYW4+PC9OYXZMaW5rPjwvbGk+XG4gICAgICAgICAgICAgICAgICA8bGk+PE5hdkxpbmsgdG89XCIjc2VjdGlvbl8zXCI+PHNwYW4+Q29uZmlndXJhdGlvbjwvc3Bhbj48L05hdkxpbms+PC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICA8L1Njcm9sbHNweU5hdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiaGVhZGVyXCI+PHNwYW4+PEFib3V0IC8+PC9zcGFuPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJzZWN0aW9uXzFcIj48c3Bhbj48VXNhZ2UgLz48L3NwYW4+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cInNlY3Rpb25fMlwiPjxzcGFuPjxFeGFtcGxlIC8+PC9zcGFuPjwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJzZWN0aW9uXzNcIj48c3Bhbj48Q29uZmlndXJhdGlvbiAvPjwvc3Bhbj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0hhc2hSb3V0ZXI+XG4gICAgICAgIC8vICovXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwJztcblxuUmVhY3RET00ucmVuZGVyKDxBcHAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9